{"version":3,"sources":["webpack:///./src/app/features/store/article/season/index.ts","webpack:///./src/app/features/store/article/season/season.actions.ts","webpack:///./src/app/features/store/article/season/season.effects.ts","webpack:///./src/app/features/store/article/season/season.reducer.ts","webpack:///./src/app/features/store/article/season/season.selectors.ts","webpack:///./src/app/features/store/article/season/season.service.ts","webpack:///./src/app/features/store/merchandise/material/index.ts","webpack:///./src/app/features/store/merchandise/material/material.actions.ts","webpack:///./src/app/features/store/merchandise/material/material.effects.ts","webpack:///./src/app/features/store/merchandise/material/material.reducer.ts","webpack:///./src/app/features/store/merchandise/material/material.selectors.ts","webpack:///./src/app/features/store/merchandise/material/material.service.ts","webpack:///./src/app/features/store/settings/uom/index.ts","webpack:///./src/app/features/store/settings/uom/uom.actions.ts","webpack:///./src/app/features/store/settings/uom/uom.effects.ts","webpack:///./src/app/features/store/settings/uom/uom.reducer.ts","webpack:///./src/app/features/store/settings/uom/uom.selectors.ts","webpack:///./src/app/features/store/settings/uom/uom.service.ts"],"names":[],"mappings":"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","file":"default~features-article-article-module~features-merchandise-merchandise-module-es2015.js","sourcesContent":["export * from './season';\r\nexport * from './season.effects';\r\nexport * from './season.service';\r\nexport * from './season.selectors';\r\nexport * from './season.reducer';\r\nexport * from './season.actions';\r\n","import {createAction, props} from '@ngrx/store';\r\n\r\nimport {Season} from './season';\r\n\r\nexport const loadSeasons = createAction(\r\n    '[Season/API] Load Seasons'\r\n);\r\n\r\nexport const loadSeasonsSuccess = createAction(\r\n    '[Season/API] Load Seasons Success',\r\n    props<{ data: Season[] }>(),\r\n);\r\n\r\nexport const addSeason = createAction(\r\n    '[Season/API] Add Season',\r\n    props<{ data: Season }>(),\r\n);\r\n\r\nexport const addSeasonSuccess = createAction(\r\n    '[Season/API] Add Season Success',\r\n    props<{ data: Season }>(),\r\n);\r\n\r\n\r\nexport const deleteSeason = createAction(\r\n    '[Season/API] Delete Season',\r\n    props<{ data: Season }>(),\r\n);\r\n\r\nexport const deleteSeasonSuccess = createAction(\r\n    '[Season/API] Delete Season Success',\r\n    props<{ id: string}>(),\r\n);\r\n\r\nexport const selectCurrentSeasonSuccess = createAction(\r\n    '[Season/API] Select Current Season',\r\n    props<{ data: Season }>(),\r\n);\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\r\nimport {Store} from '@ngrx/store';\r\nimport {SeasonService} from './season.service';\r\nimport {\r\n  addSeason,\r\n  addSeasonSuccess,\r\n  deleteSeason, deleteSeasonSuccess,\r\n  loadSeasons,\r\n  loadSeasonsSuccess,\r\n} from './season.actions';\r\nimport {filter, map, mergeMap, withLatestFrom} from 'rxjs/operators';\r\nimport {allSeasonLoaded} from './season.selectors';\r\n\r\n\r\n@Injectable()\r\nexport class SeasonEffects {\r\n\r\n    loadSeasons$ = createEffect(() => this.actions$.pipe(\r\n        ofType(loadSeasons),\r\n        withLatestFrom(this.store.select(allSeasonLoaded)),\r\n        filter(([_, allLoaded]) => !allLoaded),\r\n        mergeMap(_ => this.service.findAll().pipe(\r\n            map(data => loadSeasonsSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    addSeason$ = createEffect(() => this.actions$.pipe(\r\n        ofType(addSeason),\r\n        mergeMap(action => this.service.save(action.data).pipe(\r\n            map(data => addSeasonSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    deleteSeason$ = createEffect(() => this.actions$.pipe(\r\n        ofType(deleteSeason),\r\n        mergeMap(({data}) => this.service.delete(data).pipe(\r\n            map(_ => deleteSeasonSuccess({id: data.id})),\r\n        )),\r\n    ));\r\n\r\n    constructor(private actions$: Actions, private store: Store<any>, private service: SeasonService) {\r\n    }\r\n\r\n}\r\n","import {Action, createReducer, on} from '@ngrx/store';\r\nimport {EntityState, EntityAdapter, createEntityAdapter} from '@ngrx/entity';\r\nimport {Season} from './season';\r\nimport * as SeasonActions from './season.actions';\r\n\r\nexport const seasonFeatureKey = 'seasons';\r\n\r\nexport interface SeasonState extends EntityState<Season> {\r\n    allSeasonsLoaded: boolean;\r\n    currentSeason: Season\r\n}\r\n\r\nexport const adapter: EntityAdapter<Season> = createEntityAdapter<Season>();\r\n\r\nexport const initialState: SeasonState = adapter.getInitialState({\r\n    allSeasonsLoaded: false,\r\n    currentSeason: null\r\n});\r\n\r\nconst seasonReducer = createReducer(\r\n    initialState,\r\n    on(SeasonActions.addSeasonSuccess,\r\n        (state, action) => adapter.upsertOne(action.data, {...state, currentSeason: action.data}),\r\n    ),\r\n    on(SeasonActions.deleteSeasonSuccess,\r\n        (state, action) => adapter.removeOne(action.id, state),\r\n    ),\r\n\r\n    on(SeasonActions.loadSeasonsSuccess,\r\n        (state, action) => adapter.addAll(action.data, state),\r\n    ),\r\n    on(SeasonActions.selectCurrentSeasonSuccess,\r\n        (state, action) => ({...state, currentSeason: action.data}),\r\n    ),\r\n);\r\n\r\nexport function reducer(state: SeasonState | undefined, action: Action) {\r\n    return seasonReducer(state, action);\r\n}\r\n\r\nexport const {\r\n    selectIds,\r\n    selectEntities,\r\n    selectAll,\r\n    selectTotal,\r\n} = adapter.getSelectors();\r\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport {SeasonState, seasonFeatureKey, selectAll} from './season.reducer';\r\n\r\nconst featureState = createFeatureSelector<SeasonState>(seasonFeatureKey);\r\n\r\nexport const selectAllSeasons = createSelector(\r\n    featureState,\r\n    selectAll,\r\n);\r\n\r\nexport const allSeasonLoaded = createSelector(\r\n    featureState,\r\n    state => state.allSeasonsLoaded,\r\n);\r\n\r\nexport const selectCurrentSeason = createSelector(\r\n    featureState,\r\n    state => state.currentSeason\r\n)\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {APP_CONFIG} from '../../../../app.config';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Season} from './season';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class SeasonService {\r\n    private url = `${APP_CONFIG.BASE_URL}/seasons/`;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    findAll(): Observable<Season[]> {\r\n        return this.http.get<Season[]>(this.url);\r\n    }\r\n\r\n    save(item: Season): Observable<Season> {\r\n        if (!item.id) {\r\n            return this.http.post<Season>(this.url, item);\r\n        } else {\r\n            return this.update(item);\r\n        }\r\n    }\r\n\r\n    private update(item: Season): Observable<Season> {\r\n        return this.http.put<Season>(`${this.url}${item.id}/`, item);\r\n    }\r\n\r\n    delete(item: Season) {\r\n        return this.http.delete(`${this.url}${item.id}/`);\r\n    }\r\n}\r\n","export * from './material';\r\nexport * from './material.effects';\r\nexport * from './material.service';\r\nexport * from './material.selectors';\r\nexport * from './material.reducer';\r\nexport * from './material.actions';\r\n","import {createAction, props} from '@ngrx/store';\r\n\r\nimport {Material} from './material';\r\n\r\nexport const loadMaterials = createAction(\r\n    '[Material/API] Load Materials'\r\n);\r\n\r\nexport const loadMaterialsSuccess = createAction(\r\n    '[Material/API] Load Materials Success',\r\n    props<{ data: Material[] }>(),\r\n);\r\n\r\nexport const addMaterial = createAction(\r\n    '[Material/API] Add Material',\r\n    props<{ data: any }>(),\r\n);\r\n\r\nexport const addMaterialSuccess = createAction(\r\n    '[Material/API] Add Material Success',\r\n    props<{ data: Material }>(),\r\n);\r\n\r\n\r\nexport const deleteMaterial = createAction(\r\n    '[Material/API] Delete Material',\r\n    props<{ data: Material }>(),\r\n);\r\n\r\nexport const deleteMaterialSuccess = createAction(\r\n    '[Material/API] Delete Material Success',\r\n    props<{ id: string}>(),\r\n);\r\n\r\nexport const selectCurrentMaterialSuccess = createAction(\r\n    '[Material/API] Select Current Material',\r\n    props<{ data: Material }>(),\r\n);\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\r\nimport {Store} from '@ngrx/store';\r\nimport {MaterialService} from './material.service';\r\nimport {\r\n  addMaterial,\r\n  addMaterialSuccess,\r\n  deleteMaterial, deleteMaterialSuccess,\r\n  loadMaterials,\r\n  loadMaterialsSuccess,\r\n} from './material.actions';\r\nimport {filter, map, mergeMap, withLatestFrom} from 'rxjs/operators';\r\nimport {allMaterialLoaded} from './material.selectors';\r\n\r\n\r\n@Injectable()\r\nexport class MaterialEffects {\r\n\r\n    loadMaterials$ = createEffect(() => this.actions$.pipe(\r\n        ofType(loadMaterials),\r\n        withLatestFrom(this.store.select(allMaterialLoaded)),\r\n        filter(([_, allLoaded]) => !allLoaded),\r\n        mergeMap(_ => this.service.findAll().pipe(\r\n            map(data => loadMaterialsSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    addMaterial$ = createEffect(() => this.actions$.pipe(\r\n        ofType(addMaterial),\r\n        mergeMap(action => this.service.save(action.data).pipe(\r\n            map(data => addMaterialSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    deleteMaterial$ = createEffect(() => this.actions$.pipe(\r\n        ofType(deleteMaterial),\r\n        mergeMap(({data}) => this.service.delete(data).pipe(\r\n            map(_ => deleteMaterialSuccess({id: data.id})),\r\n        )),\r\n    ));\r\n\r\n    constructor(private actions$: Actions, private store: Store<any>, private service: MaterialService) {\r\n    }\r\n\r\n}\r\n","import {Action, createReducer, on} from '@ngrx/store';\r\nimport {EntityState, EntityAdapter, createEntityAdapter} from '@ngrx/entity';\r\nimport {Material} from './material';\r\nimport * as MaterialActions from './material.actions';\r\n\r\nexport const materialFeatureKey = 'materials';\r\n\r\nexport interface MaterialState extends EntityState<Material> {\r\n    allMaterialsLoaded: boolean;\r\n    currentMaterial: Material\r\n}\r\n\r\nexport const adapter: EntityAdapter<Material> = createEntityAdapter<Material>();\r\n\r\nexport const initialState: MaterialState = adapter.getInitialState({\r\n    allMaterialsLoaded: false,\r\n    currentMaterial: null\r\n});\r\n\r\nconst materialReducer = createReducer(\r\n    initialState,\r\n    on(MaterialActions.addMaterialSuccess,\r\n        (state, action) => adapter.upsertOne(action.data, {...state, currentMaterial: action.data}),\r\n    ),\r\n    on(MaterialActions.deleteMaterialSuccess,\r\n        (state, action) => adapter.removeOne(action.id, state),\r\n    ),\r\n\r\n    on(MaterialActions.loadMaterialsSuccess,\r\n        (state, action) => adapter.addAll(action.data, state),\r\n    ),\r\n    on(MaterialActions.selectCurrentMaterialSuccess,\r\n        (state, action) => ({...state, currentMaterial: action.data}),\r\n    ),\r\n);\r\n\r\nexport function reducer(state: MaterialState | undefined, action: Action) {\r\n    return materialReducer(state, action);\r\n}\r\n\r\nexport const {\r\n    selectIds,\r\n    selectEntities,\r\n    selectAll,\r\n    selectTotal,\r\n} = adapter.getSelectors();\r\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport { Material } from './material';\r\nimport {MaterialState, materialFeatureKey, selectAll} from './material.reducer';\r\n\r\nconst featureState = createFeatureSelector<MaterialState>(materialFeatureKey);\r\n\r\nexport const selectAllMaterials = createSelector(\r\n    featureState,\r\n    selectAll,\r\n);\r\n\r\nexport const allMaterialLoaded = createSelector(\r\n    featureState,\r\n    state => state.allMaterialsLoaded,\r\n);\r\n\r\nexport const selectCurrentMaterial = createSelector(\r\n    featureState,\r\n    state => state.currentMaterial\r\n)\r\n\r\nexport const selecetmaterialbyid = createSelector(\r\n    selectAllMaterials,\r\n    (materials: Material[], id) => {\r\n        const mat = materials.filter(a => a.id == id)\r\n      \r\n        return mat;\r\n\r\n    }\r\n)","import {Injectable} from '@angular/core';\r\nimport {APP_CONFIG} from '../../../../app.config';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Material} from './material';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class MaterialService {\r\n    private url = `${APP_CONFIG.BASE_URL}/materials/`;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    findAll(): Observable<Material[]> {\r\n        return this.http.get<Material[]>(this.url);\r\n    }\r\n\r\n    save(item: FormData): Observable<Material> {\r\n        if (!item.get('id')) {\r\n            return this.http.post<Material>(this.url, item);\r\n        } else {\r\n            return this.update(item);\r\n        }\r\n    }\r\n   \r\n    private update(item: any): Observable<Material> {\r\n       \r\n        return this.http.put<Material>(`${this.url}${item.get('id')}/`, item);\r\n    }\r\n    delete(item: Material) {\r\n        return this.http.delete(`${this.url}${item.id}/`);\r\n    }\r\n}\r\n","export * from './uom';\r\nexport * from './uom.effects';\r\nexport * from './uom.service';\r\nexport * from './uom.selectors';\r\nexport * from './uom.reducer';\r\nexport * from './uom.actions';\r\n","import {createAction, props} from '@ngrx/store';\r\n\r\nimport {Uom} from './uom';\r\n\r\nexport const loadUoms = createAction(\r\n    '[Uom/API] Load Uoms'\r\n);\r\n\r\nexport const loadUomsSuccess = createAction(\r\n    '[Uom/API] Load Uoms Success',\r\n    props<{ data: Uom[] }>(),\r\n);\r\n\r\nexport const addUom = createAction(\r\n    '[Uom/API] Add Uom',\r\n    props<{ data: Uom }>(),\r\n);\r\n\r\nexport const addUomSuccess = createAction(\r\n    '[Uom/API] Add Uom Success',\r\n    props<{ data: Uom }>(),\r\n);\r\n\r\n\r\nexport const deleteUom = createAction(\r\n    '[Uom/API] Delete Uom',\r\n    props<{ data: Uom }>(),\r\n);\r\n\r\nexport const deleteUomSuccess = createAction(\r\n    '[Uom/API] Delete Uom Success',\r\n    props<{ id: string}>(),\r\n);\r\n\r\nexport const selectCurrentUomSuccess = createAction(\r\n    '[Uom/API] Select Current Uom',\r\n    props<{ data: Uom }>(),\r\n);\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\r\nimport {Store} from '@ngrx/store';\r\nimport {UomService} from './uom.service';\r\nimport {\r\n  addUom,\r\n  addUomSuccess,\r\n  deleteUom, deleteUomSuccess,\r\n  loadUoms,\r\n  loadUomsSuccess,\r\n} from './uom.actions';\r\nimport {filter, map, mergeMap, withLatestFrom} from 'rxjs/operators';\r\nimport {allUomLoaded} from './uom.selectors';\r\n\r\n\r\n@Injectable()\r\nexport class UomEffects {\r\n\r\n    loadUoms$ = createEffect(() => this.actions$.pipe(\r\n        ofType(loadUoms),\r\n        withLatestFrom(this.store.select(allUomLoaded)),\r\n        filter(([_, allLoaded]) => !allLoaded),\r\n        mergeMap(_ => this.service.findAll().pipe(\r\n            map(data => loadUomsSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    addUom$ = createEffect(() => this.actions$.pipe(\r\n        ofType(addUom),\r\n        mergeMap(action => this.service.save(action.data).pipe(\r\n            map(data => addUomSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    deleteUom$ = createEffect(() => this.actions$.pipe(\r\n        ofType(deleteUom),\r\n        mergeMap(({data}) => this.service.delete(data).pipe(\r\n            map(_ => deleteUomSuccess({id: data.id})),\r\n        )),\r\n    ));\r\n\r\n    constructor(private actions$: Actions, private store: Store<any>, private service: UomService) {\r\n    }\r\n\r\n}\r\n","import {Action, createReducer, on} from '@ngrx/store';\r\nimport {EntityState, EntityAdapter, createEntityAdapter} from '@ngrx/entity';\r\nimport {Uom} from './uom';\r\nimport * as UomActions from './uom.actions';\r\n\r\nexport const uomFeatureKey = 'uoms';\r\n\r\nexport interface UomState extends EntityState<Uom> {\r\n    allUomsLoaded: boolean;\r\n    currentUom: Uom\r\n}\r\n\r\nexport const adapter: EntityAdapter<Uom> = createEntityAdapter<Uom>();\r\n\r\nexport const initialState: UomState = adapter.getInitialState({\r\n    allUomsLoaded: false,\r\n    currentUom: null\r\n});\r\n\r\nconst uomReducer = createReducer(\r\n    initialState,\r\n    on(UomActions.addUomSuccess,\r\n        (state, action) => adapter.upsertOne(action.data, {...state, currentUom: action.data}),\r\n    ),\r\n    on(UomActions.deleteUomSuccess,\r\n        (state, action) => adapter.removeOne(action.id, state),\r\n    ),\r\n\r\n    on(UomActions.loadUomsSuccess,\r\n        (state, action) => adapter.addAll(action.data, state),\r\n    ),\r\n    on(UomActions.selectCurrentUomSuccess,\r\n        (state, action) => ({...state, currentUom: action.data}),\r\n    ),\r\n);\r\n\r\nexport function reducer(state: UomState | undefined, action: Action) {\r\n    return uomReducer(state, action);\r\n}\r\n\r\nexport const {\r\n    selectIds,\r\n    selectEntities,\r\n    selectAll,\r\n    selectTotal,\r\n} = adapter.getSelectors();\r\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport {UomState, uomFeatureKey, selectAll} from './uom.reducer';\r\n\r\nconst featureState = createFeatureSelector<UomState>(uomFeatureKey);\r\n\r\nexport const selectAllUoms = createSelector(\r\n    featureState,\r\n    selectAll,\r\n);\r\n\r\nexport const allUomLoaded = createSelector(\r\n    featureState,\r\n    state => state.allUomsLoaded,\r\n);\r\n\r\nexport const selectCurrentUom = createSelector(\r\n    featureState,\r\n    state => state.currentUom\r\n)\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {APP_CONFIG} from '../../../../app.config';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Uom} from './uom';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class UomService {\r\n    private url = `${APP_CONFIG.BASE_URL}/uoms/`;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    findAll(): Observable<Uom[]> {\r\n        return this.http.get<Uom[]>(this.url);\r\n    }\r\n\r\n    save(item: Uom): Observable<Uom> {\r\n        if (!item.id) {\r\n            return this.http.post<Uom>(this.url, item);\r\n        } else {\r\n            return this.update(item);\r\n        }\r\n    }\r\n\r\n    private update(item: Uom): Observable<Uom> {\r\n        return this.http.put<Uom>(`${this.url}${item.id}/`, item);\r\n    }\r\n\r\n    delete(item: Uom) {\r\n        return this.http.delete(`${this.url}${item.id}/`);\r\n    }\r\n}\r\n"],"sourceRoot":""}