{"version":3,"sources":["webpack:///./src/app/features/customer/clients/clients.component.html","webpack:///./src/app/features/customer/customeraccdatas/customeraccdatas.component.html","webpack:///./src/app/features/customer/customeraccgroups/customeraccgroups.component.html","webpack:///./src/app/features/customer/customerexportdatas/customerexportdatas.component.html","webpack:///./src/app/features/customer/customerlabelingdatas/customerlabelingdatas.component.html","webpack:///./src/app/features/customer/customers/customers.component.html","webpack:///./src/app/features/customer/forwarders/forwarders.component.html","webpack:///./src/app/features/customer/clients/clients.component.ts","webpack:///./src/app/features/customer/customer.module.ts","webpack:///./src/app/features/customer/customeraccdatas/customeraccdatas.component.ts","webpack:///./src/app/features/customer/customeraccgroups/customeraccgroups.component.ts","webpack:///./src/app/features/customer/customerexportdatas/customerexportdatas.component.ts","webpack:///./src/app/features/customer/customerlabelingdatas/customerlabelingdatas.component.ts","webpack:///./src/app/features/customer/customers/customers.component.ts","webpack:///./src/app/features/customer/forwarders/forwarders.component.ts","webpack:///./src/app/features/store/customer/customeraccdata/customeraccdata.actions.ts","webpack:///./src/app/features/store/customer/customeraccdata/customeraccdata.effects.ts","webpack:///./src/app/features/store/customer/customeraccdata/customeraccdata.reducer.ts","webpack:///./src/app/features/store/customer/customeraccdata/customeraccdata.selectors.ts","webpack:///./src/app/features/store/customer/customeraccdata/customeraccdata.service.ts","webpack:///./src/app/features/store/customer/customeraccdata/index.ts","webpack:///./src/app/features/store/customer/customeraccgroup/customeraccgroup.actions.ts","webpack:///./src/app/features/store/customer/customeraccgroup/customeraccgroup.effects.ts","webpack:///./src/app/features/store/customer/customeraccgroup/customeraccgroup.reducer.ts","webpack:///./src/app/features/store/customer/customeraccgroup/customeraccgroup.selectors.ts","webpack:///./src/app/features/store/customer/customeraccgroup/customeraccgroup.service.ts","webpack:///./src/app/features/store/customer/customeraccgroup/index.ts","webpack:///./src/app/features/store/customer/customerexportdata/customerexportdata.actions.ts","webpack:///./src/app/features/store/customer/customerexportdata/customerexportdata.effects.ts","webpack:///./src/app/features/store/customer/customerexportdata/customerexportdata.reducer.ts","webpack:///./src/app/features/store/customer/customerexportdata/customerexportdata.selectors.ts","webpack:///./src/app/features/store/customer/customerexportdata/customerexportdata.service.ts","webpack:///./src/app/features/store/customer/customerexportdata/index.ts","webpack:///./src/app/features/store/customer/customerlabelingdata/customerlabelingdata.actions.ts","webpack:///./src/app/features/store/customer/customerlabelingdata/customerlabelingdata.effects.ts","webpack:///./src/app/features/store/customer/customerlabelingdata/customerlabelingdata.reducer.ts","webpack:///./src/app/features/store/customer/customerlabelingdata/customerlabelingdata.selectors.ts","webpack:///./src/app/features/store/customer/customerlabelingdata/customerlabelingdata.service.ts","webpack:///./src/app/features/store/customer/customerlabelingdata/index.ts","webpack:///./src/app/features/store/customer/forwarder/forwarder.actions.ts","webpack:///./src/app/features/store/customer/forwarder/forwarder.effects.ts","webpack:///./src/app/features/store/customer/forwarder/forwarder.reducer.ts","webpack:///./src/app/features/store/customer/forwarder/forwarder.selectors.ts","webpack:///./src/app/features/store/customer/forwarder/forwarder.service.ts","webpack:///./src/app/features/store/customer/forwarder/index.ts"],"names":[],"mappings":"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","file":"features-customer-customer-module-es5.js","sourcesContent":["module.exports = \"<smart-crud-panel \\r\\n    title=\\\"Clients\\\" \\r\\n    icon=\\\"fal fa-users\\\" \\r\\n    [columns]=\\\"columns\\\"\\r\\n    [selectAllSelector]=\\\"selectAllSelector\\\"\\r\\n    [selectCurrent]=\\\"selectCurrent\\\"\\r\\n    [form] =\\\"form\\\"\\r\\n    [deleteable]=\\\"true\\\"\\r\\n    [editable]=\\\"true\\\"\\r\\n    formTitle=\\\"Client\\\"\\r\\n    itemName=\\\"Client\\\"\\r\\n    modalClass ='modal-xm'\\r\\n    >\\r\\n\\r\\n    <h2 title><i class=\\\"fal fa-list\\\"></i>&nbsp;Client</h2>\\r\\n    \\r\\n</smart-crud-panel>\"","module.exports = \"<smart-crud-panel \\r\\n    title=\\\"Customeraccdatas\\\" \\r\\n    icon=\\\"fal fa-users\\\" \\r\\n    [columns]=\\\"columns\\\"\\r\\n    [selectAllSelector]=\\\"selectAllSelector\\\"\\r\\n    [selectCurrent]=\\\"selectCurrent\\\"\\r\\n    [form] =\\\"form\\\"\\r\\n    [deleteable]=\\\"true\\\"\\r\\n    [editable]=\\\"true\\\"\\r\\n    formTitle=\\\"Customeraccdata\\\"\\r\\n    itemName=\\\"Customeraccdata\\\"\\r\\n    modalClass ='modal-lg'\\r\\n    \\r\\n    >\\r\\n\\r\\n    <h2 title><i class=\\\"fal fa-list\\\"></i>&nbsp;Customer Accout Data</h2>\\r\\n    \\r\\n</smart-crud-panel>\"","module.exports = \"<smart-crud-panel \\r\\n    title=\\\"Customeraccgroups\\\" \\r\\n    icon=\\\"fal fa-users\\\" \\r\\n    [columns]=\\\"columns\\\"\\r\\n    [selectAllSelector]=\\\"selectAllSelector\\\"\\r\\n    [selectCurrent]=\\\"selectCurrent\\\"\\r\\n    [form] =\\\"form\\\"\\r\\n    [deleteable]=\\\"true\\\"\\r\\n    [editable]=\\\"true\\\"\\r\\n    formTitle=\\\"Customeraccgroup\\\"\\r\\n    itemName=\\\"Customeraccgroup\\\"\\r\\n    modalClass ='modal-xm'\\r\\n    >\\r\\n\\r\\n    <h2 title><i class=\\\"fal fa-list\\\"></i>&nbsp;Customer Account Group</h2>\\r\\n    \\r\\n</smart-crud-panel>\"","module.exports = \"<smart-crud-panel \\r\\n    title=\\\"Customerexportdatas\\\" \\r\\n    icon=\\\"fal fa-users\\\" \\r\\n    [columns]=\\\"columns\\\"\\r\\n    [selectAllSelector]=\\\"selectAllSelector\\\"\\r\\n    [selectCurrent]=\\\"selectCurrent\\\"\\r\\n    [form] =\\\"form\\\"\\r\\n    [deleteable]=\\\"true\\\"\\r\\n    [editable]=\\\"true\\\"\\r\\n    formTitle=\\\"Customerexportdata\\\"\\r\\n    itemName=\\\"Customerexportdata\\\"\\r\\n    modalClass ='modal-xl'\\r\\n    >\\r\\n\\r\\n    <h2 title><i class=\\\"fal fa-list\\\"></i>&nbsp;Customer Export Data</h2>\\r\\n    \\r\\n</smart-crud-panel>\"","module.exports = \"<smart-crud-panel \\r\\n    title=\\\"Customerlabelingdatas\\\" \\r\\n    icon=\\\"fal fa-users\\\" \\r\\n    [columns]=\\\"columns\\\"\\r\\n    [selectAllSelector]=\\\"selectAllSelector\\\"\\r\\n    [selectCurrent]=\\\"selectCurrent\\\"\\r\\n    [form] =\\\"form\\\"\\r\\n    [deleteable]=\\\"true\\\"\\r\\n    [editable]=\\\"true\\\"\\r\\n    formTitle=\\\"Customerlabelingdata\\\"\\r\\n    itemName=\\\"Customerlabelingdata\\\"\\r\\n    modalClass ='modal-lg'\\r\\n    >\\r\\n\\r\\n    <h2 title><i class=\\\"fal fa-list\\\"></i>&nbsp;Customer Labelling Data</h2>\\r\\n    \\r\\n</smart-crud-panel>\"","module.exports = \"<smart-crud-panel \\r\\n    title=\\\"Customers\\\" \\r\\n    icon=\\\"fal fa-users\\\" \\r\\n    [columns]=\\\"columns\\\"\\r\\n    [selectAllSelector]=\\\"selectAllSelector\\\"\\r\\n    [selectCurrent]=\\\"selectCurrent\\\"\\r\\n    [form] =\\\"form\\\"\\r\\n    [deleteable]=\\\"true\\\"\\r\\n    [editable]=\\\"true\\\"\\r\\n    formTitle=\\\"Customer\\\"\\r\\n    itemName=\\\"Customer\\\"\\r\\n    modalClass ='modal-lg'\\r\\n    >\\r\\n\\r\\n    <h2 title><i class=\\\"fal fa-list\\\"></i>&nbsp;Customer</h2>\\r\\n    \\r\\n</smart-crud-panel>\"","module.exports = \"<smart-crud-panel \\r\\n    title=\\\"Forwarders\\\" \\r\\n    icon=\\\"fal fa-users\\\" \\r\\n    [columns]=\\\"columns\\\"\\r\\n    [selectAllSelector]=\\\"selectAllSelector\\\"\\r\\n    [selectCurrent]=\\\"selectCurrent\\\"\\r\\n    [form] =\\\"form\\\"\\r\\n    [deleteable]=\\\"true\\\"\\r\\n    [editable]=\\\"true\\\"\\r\\n    formTitle=\\\"Forwarder\\\"\\r\\n    itemName=\\\"Forwarder\\\"\\r\\n    modalClass ='modal-lg'\\r\\n    >\\r\\n\\r\\n    <h2 title><i class=\\\"fal fa-list\\\"></i>&nbsp;Forwarder</h2>\\r\\n    \\r\\n</smart-crud-panel>\"","import { selectCurrentClient,selectAllClients, Client } from './../../store/customer/client';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { RowData } from 'src/app/shared';\r\nimport { Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { TableData } from 'src/app/shared/custom-tables/table/table.component';\r\n\r\n@Component({\r\n  selector: 'smart-clients',\r\n  templateUrl: './clients.component.html',\r\n  styles: []\r\n})\r\nexport class ClientsComponent implements OnInit {\r\n\r\n  form: RowData[] = [\r\n    {\r\n      row: [\r\n        { label: 'Client Name', name: 'name', validator: Validators.required },\r\n  \r\n      ]\r\n    },\r\n    {\r\n      row: [\r\n      \r\n        { label: 'Brand', name: 'brand', validator: Validators.required },\r\n      ]\r\n    }, {\r\n      row: [\r\n        { label: 'Is Adidas', name: 'is_adidas', type:'check' },\r\n       \r\n      ]\r\n    }\r\n    ,\r\n     {\r\n      row: [\r\n      \r\n        { label: 'Status', name: 'status', type:'check' },\r\n      ]\r\n    }\r\n    , {\r\n      row: [\r\n        { label: 'ID', name: 'id', type:'hidden' }\r\n      ]\r\n    }\r\n  ]\r\n  items: Observable<Client[]>\r\n  columns: TableData[] = [\r\n    {title:'Client Name', value:'name'},\r\n    {title:'Brand', value:'brand'},\r\n    {title:'Is Adidas', value:'is_adidas', bool:true},\r\n    {title:'Status', value:'status', bool:true},\r\n  ]\r\n\r\n  selectAllSelector = selectAllClients\r\n  selectCurrent = selectCurrentClient\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { RouterModule } from '@angular/router';\r\n//component imports\r\nimport { CustomerlabelingdatasComponent } from './customerlabelingdatas/customerlabelingdatas.component'\r\nimport { CustomerexportdatasComponent } from './customerexportdatas/customerexportdatas.component'\r\nimport { ForwardersComponent } from './forwarders/forwarders.component'\r\nimport { CustomeraccdatasComponent } from './customeraccdatas/customeraccdatas.component'\r\nimport { CustomersComponent } from './customers/customers.component'\r\nimport { CustomeraccgroupsComponent } from './customeraccgroups/customeraccgroups.component'\r\nimport { ClientsComponent } from './clients/clients.component'\r\n\r\n//store imports\r\nimport * as customerlabelingdata from 'src/app/features/store/customer/customerlabelingdata'\r\nimport * as customerexportdata from 'src/app/features/store/customer/customerexportdata'\r\nimport * as forwarder from 'src/app/features/store/customer/forwarder'\r\nimport * as customeraccdata from 'src/app/features/store/customer/customeraccdata'\r\nimport * as customer from 'src/app/features/store/customer/customer'\r\nimport * as customeraccgroup from 'src/app/features/store/customer/customeraccgroup'\r\nimport * as client from 'src/app/features/store/customer/client'\r\nimport * as region from 'src/app/features/store/settings/region'\r\nimport * as country from 'src/app/features/store/settings/country'\r\nimport * as paymentterm from 'src/app/features/store/settings/paymentterm'\r\nimport * as currency from '../store/settings/currency';\r\n\r\n\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [ ClientsComponent, CustomeraccgroupsComponent, CustomersComponent, CustomeraccdatasComponent, ForwardersComponent, CustomerexportdatasComponent, CustomerlabelingdatasComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    //store for feature\r\n    StoreModule.forFeature(customerlabelingdata.customerlabelingdataFeatureKey, customerlabelingdata.reducer),\r\n    StoreModule.forFeature(customerexportdata.customerexportdataFeatureKey, customerexportdata.reducer),\r\n    StoreModule.forFeature(forwarder.forwarderFeatureKey, forwarder.reducer),\r\n    StoreModule.forFeature(customeraccdata.customeraccdataFeatureKey, customeraccdata.reducer),\r\n    StoreModule.forFeature(customer.customerFeatureKey, customer.reducer),\r\n    StoreModule.forFeature(customeraccgroup.customeraccgroupFeatureKey, customeraccgroup.reducer),\r\n    StoreModule.forFeature(client.clientFeatureKey, client.reducer),\r\n    StoreModule.forFeature(region.regionFeatureKey, region.reducer),\r\n    StoreModule.forFeature(country.countryFeatureKey, country.reducer),\r\n    StoreModule.forFeature(paymentterm.paymenttermFeatureKey, paymentterm.reducer),\r\n    StoreModule.forFeature(currency.currencyFeatureKey, currency.reducer),\r\n    EffectsModule.forFeature([ client.ClientEffects, customeraccgroup.CustomeraccgroupEffects, customer.CustomerEffects,region.RegionEffects,country.CountryEffects, customeraccdata.CustomeraccdataEffects,currency.CurrencyEffects,paymentterm.PaymenttermEffects, forwarder.ForwarderEffects, customerexportdata.CustomerexportdataEffects, customerlabelingdata.CustomerlabelingdataEffects]),\r\n    RouterModule.forChild([\r\n      {path: '', redirectTo:'', pathMatch: 'full'},\r\n      {path: 'customerlabelingdatas', component: CustomerlabelingdatasComponent},\r\n      {path: 'customerexportdatas', component: CustomerexportdatasComponent},\r\n      {path: 'forwarders', component: ForwardersComponent},\r\n      {path: 'customeraccdatas', component: CustomeraccdatasComponent},\r\n      {path: 'customers', component: CustomersComponent},\r\n      {path: 'customeraccgroups', component: CustomeraccgroupsComponent},\r\n      {path: 'clients', component: ClientsComponent},\r\n\r\n    ])\r\n  ]\r\n})\r\nexport class CustomerModule { }\r\n","import { selectCurrentCustomeraccdata, selectAllCustomeraccdatas, Customeraccdata } from './../../store/customer/customeraccdata';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { RowData } from 'src/app/shared';\r\nimport { Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { TableData } from 'src/app/shared/custom-tables/table/table.component';\r\nimport { Customeraccgroup } from '../../store/customer/customeraccgroup/customeraccgroup';\r\nimport { Currency } from '../../store/settings/currency/currency';\r\nimport { Paymentterm } from '../../store/settings/paymentterm/paymentterm';\r\nimport { Customer } from '../../store/customer/customer/customer';\r\nimport { Store } from '@ngrx/store';\r\nimport { loadCustomeraccgroups, selectAllCustomeraccgroups } from '../../store/customer/customeraccgroup';\r\nimport { loadCurrencies, selectAllCurrencies } from '../../store/settings/currency';\r\nimport { loadPaymentterms, selectAllPaymentterms } from '../../store/settings/paymentterm';\r\nimport { loadCustomers, selectAllCustomers } from '../../store/customer/customer';\r\n@Component({\r\n  selector: 'smart-customeraccdatas',\r\n  templateUrl: './customeraccdatas.component.html',\r\n  styles: []\r\n})\r\nexport class CustomeraccdatasComponent implements OnInit {\r\n  customeraccgroup: Observable<Customeraccgroup[]>\r\n  currency: Observable<Currency[]>\r\n  paymenterm: Observable<Paymentterm[]>\r\n  customer: Observable<Customer[]>\r\n  selectAllSelector = selectAllCustomeraccdatas\r\n  selectCurrent = selectCurrentCustomeraccdata\r\n  constructor(private store: Store<any>) { }\r\n  form: RowData[] = []\r\n  columns: TableData[] = [\r\n    { title: 'Customer', value: ['customer','name'] },\r\n    { title: 'Code', value: 'code' },\r\n    { title: 'Account Group ', value: ['acc_group','name'] },\r\n    { title: 'Bank Name', value: 'bank_name' },\r\n    { title: 'Status', value: 'status', bool: true },\r\n  ]\r\n  ngOnInit() {\r\n    this.store.dispatch(loadCustomeraccgroups())\r\n    this.customeraccgroup = this.store.select(selectAllCustomeraccgroups)\r\n    this.store.dispatch(loadCurrencies())\r\n    this.currency = this.store.select(selectAllCurrencies)\r\n    this.store.dispatch(loadPaymentterms())\r\n    this.paymenterm = this.store.select(selectAllPaymentterms)\r\n    this.store.dispatch(loadCustomers())\r\n    this.customer = this.store.select(selectAllCustomers)\r\n    this.form = [\r\n      {\r\n        row: [\r\n          { label: 'Customer', name: 'customer', items: this.customer, validator: Validators.required, type: 'select' },\r\n          { label: 'Currency', name: 'currency', items: this.currency, validator: Validators.required, type: 'select' },\r\n        ]\r\n      },\r\n      {\r\n        row: [\r\n\r\n          { label: 'Code', name: 'code', validator: Validators.required },\r\n          { label: 'Account Group', name: 'acc_group', items: this.customeraccgroup, validator: Validators.required, type: 'select' },\r\n        ]\r\n      },\r\n      {\r\n        row: [\r\n\r\n          { label: 'Bank Name', name: 'bank_name' },\r\n          { label: 'Bank Account No', name: 'bank_account_no' },\r\n          { label: 'Bank Account Name', name: 'bank_account_name' },\r\n        ]\r\n      },\r\n      {\r\n        row: [\r\n          { label: 'NTN', name: 'ntn_no' },\r\n          { label: 'VAT', name: 'vat_no' },\r\n          { label: 'GST', name: 'gst_no' },\r\n        ]\r\n      },\r\n\r\n      {\r\n        row: [\r\n          { label: 'Bank Swift Code', name: 'bank_swift_code' },\r\n          { label: 'Bank IBA', name: 'bank_iba' },\r\n          { label: 'Credit Limit', name: 'credit_limit' },\r\n        ]\r\n      },\r\n\r\n      {\r\n        row: [\r\n          { label: 'Payment Term', name: 'payment_term', items: this.paymenterm, validator: Validators.required, type: \"select\" },\r\n          { label: 'Payment Tolerance', name: 'payment_tolerance' },\r\n        ]\r\n      },\r\n      {\r\n        row: [\r\n          { label: 'Status', name: 'status', type: 'check' }\r\n        ]\r\n      }\r\n      , {\r\n        row: [\r\n          { label: 'ID', name: 'id', type: 'hidden' }\r\n        ]\r\n      }\r\n    ]\r\n\r\n  }\r\n}\r\n","import { selectCurrentCustomeraccgroup,selectAllCustomeraccgroups, Customeraccgroup } from './../../store/customer/customeraccgroup';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { RowData } from 'src/app/shared';\r\nimport { Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { TableData } from 'src/app/shared/custom-tables/table/table.component';\r\n\r\n@Component({\r\n  selector: 'smart-customeraccgroups',\r\n  templateUrl: './customeraccgroups.component.html',\r\n  styles: []\r\n})\r\nexport class CustomeraccgroupsComponent implements OnInit {\r\n\r\n  form: RowData[] = [\r\n    {\r\n      row: [\r\n        { label: 'Customer Account Group Name', name: 'name', validator: Validators.required },\r\n  \r\n      ]\r\n    },\r\n     {\r\n      row: [\r\n        { label: 'Status', name: 'status', type:'check' }\r\n      ]\r\n    }\r\n    , {\r\n      row: [\r\n        { label: 'ID', name: 'id', type:'hidden' }\r\n      ]\r\n    }\r\n  ]\r\n  items: Observable<Customeraccgroup[]>\r\n  columns: TableData[] = [\r\n    {title:'Customer Account Group Name', value:'name'},\r\n  \r\n    {title:'Status', value:'status', bool:true},\r\n  ]\r\n\r\n  selectAllSelector = selectAllCustomeraccgroups\r\n  selectCurrent = selectCurrentCustomeraccgroup\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","import { selectCurrentCustomerexportdata,selectAllCustomerexportdatas, Customerexportdata } from './../../store/customer/customerexportdata';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { RowData } from 'src/app/shared';\r\nimport { Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { TableData } from 'src/app/shared/custom-tables/table/table.component';\r\nimport { Forwarder } from '../../store/customer/forwarder/forwarder';\r\nimport { Country } from '../../store/settings/country/country';\r\nimport { Customer } from '../../store/customer/customer/customer';\r\nimport { Store } from '@ngrx/store';\r\nimport { loadForwarders, selectAllForwarders } from '../../store/customer/forwarder';\r\nimport { loadCountries, selectAllCountries } from '../../store/settings/country';\r\nimport { loadCustomers, selectAllCustomers } from '../../store/customer/customer';\r\n@Component({\r\n  selector: 'smart-customerexportdatas',\r\n  templateUrl: './customerexportdatas.component.html',\r\n  styles: []\r\n})\r\nexport class CustomerexportdatasComponent implements OnInit {\r\n  forwarder: Observable<Forwarder[]>\r\n  country: Observable<Country[]>\r\n  customer: Observable<Customer[]>\r\n  selectAllSelector = selectAllCustomerexportdatas\r\n  selectCurrent = selectCurrentCustomerexportdata\r\n  constructor(private store: Store<any>) { }\r\n  form: RowData[] = []\r\n  columns: TableData[] = [\r\n    { title: 'Customer', value: ['customer','name'] },\r\n    { title: 'Country', value: ['exp_country','name'] },\r\n    { title: 'Delivery To', value: 'deliveryTo' },\r\n    { title: 'Carton', value: 'carton_option', bool: true },\r\n    { title: 'Is Damco', value: 'is_damco', bool: true },\r\n    { title: 'Status', value: 'status', bool: true },\r\n  ]\r\n  ngOnInit() {\r\n    this.store.dispatch(loadForwarders())\r\n    this.forwarder = this.store.select(selectAllForwarders)\r\n    this.store.dispatch(loadCountries())\r\n    this.country = this.store.select(selectAllCountries)\r\n    this.store.dispatch(loadCustomers())\r\n    this.customer = this.store.select(selectAllCustomers)\r\n    this.form = [\r\n      {\r\n        row: [\r\n          { label: 'Customer', name: 'customer', items: this.customer, validator: Validators.required, type: 'select' },\r\n          { label: 'Country', name: 'exp_country', items: this.country, validator: Validators.required, type: 'select' },\r\n        ]\r\n      },\r\n      {\r\n        row: [\r\n\r\n          { label: 'Delivery To', name: 'deliveryTo', validator: Validators.required },\r\n          { label: 'Sea Port', name: 'sea_port', validator: Validators.required},\r\n          { label: 'Air Port', name: 'air_port', validator: Validators.required},\r\n        ]\r\n      },\r\n      {\r\n        row: [\r\n\r\n          { label: 'Sea Consignee 1', name: 'sea_consignee'},\r\n          { label: 'Sea Consignee 2', name: 'sea_consignee1'},\r\n          { label: 'Sea Notify Party 1', name: 'sea_notify_party' },\r\n          { label: 'sea_notify_party 2', name: 'sea_notify_party1' },\r\n         \r\n        ]\r\n      },\r\n    {\r\n      row: [\r\n\r\n        { label: 'Air Consignee 1', name: 'air_consignee' },\r\n        { label: 'Air Consignee 2', name: 'air_consignee1'},\r\n        { label: 'Air Notify Party 1', name: 'air_notify_party'},\r\n        { label: 'Air Notify Party 2', name: 'air_notify_party1'},\r\n       \r\n      ]\r\n    },\r\n      {\r\n        row: [\r\n          { label: 'GSP Sea Consignee', name: 'gsp_sea_consignee' },\r\n          { label: 'GSP Air Consignee', name: 'gsp_air_consignee' },\r\n          { label: 'Beneficiary Consignee', name: 'beneficiary_consignee' },\r\n        ]\r\n      },\r\n\r\n      {\r\n        row: [\r\n          { label: 'Invoice To', name: 'invoice_to' },\r\n          { label: 'Sea Notify', name: 'sea_notify' },\r\n          { label: 'Air Notify', name: 'air_notify' },\r\n        ]\r\n      },\r\n\r\n      {\r\n        row: [\r\n          { label: 'Sea Forwarder', name: 'sea_forwarder', items: this.forwarder, validator: Validators.required, type: \"select\" },\r\n          { label: 'Air Forwarder', name: 'air_forwarder', items: this.forwarder, validator: Validators.required, type: \"select\" },\r\n    \r\n        ]\r\n      },\r\n      {\r\n        row: [\r\n          { label: 'Carton Option', name: 'carton_option', type: 'check' }\r\n        ]\r\n      }\r\n      ,\r\n      {\r\n        row: [\r\n          { label: 'Is Damco', name: 'is_damco', type: 'check' }\r\n        ]\r\n      }\r\n      ,\r\n      {\r\n        row: [\r\n          { label: 'Status', name: 'status', type: 'check' }\r\n        ]\r\n      }\r\n      , {\r\n        row: [\r\n          { label: 'ID', name: 'id', type: 'hidden' }\r\n        ]\r\n      }\r\n    ]\r\n\r\n  }\r\n  \r\n\r\n\r\n\r\n}\r\n","import { selectCurrentCustomerlabelingdata,selectAllCustomerlabelingdatas, Customerlabelingdata } from './../../store/customer/customerlabelingdata';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { RowData } from 'src/app/shared';\r\nimport { Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { TableData } from 'src/app/shared/custom-tables/table/table.component';\r\nimport { Customeraccgroup } from '../../store/customer/customeraccgroup/customeraccgroup';\r\nimport { Currency } from '../../store/settings/currency/currency';\r\nimport { Country } from '../../store/settings/country/country';\r\nimport { Paymentterm } from '../../store/settings/paymentterm/paymentterm';\r\nimport { Customer } from '../../store/customer/customer/customer';\r\nimport { Store } from '@ngrx/store';\r\nimport { loadCustomeraccgroups, selectAllCustomeraccgroups } from '../../store/customer/customeraccgroup';\r\nimport { loadCountries, selectAllCountries } from '../../store/settings/country';\r\nimport { loadCurrencies, selectAllCurrencies } from '../../store/settings/currency';\r\nimport { loadPaymentterms, selectAllPaymentterms } from '../../store/settings/paymentterm';\r\nimport { loadCustomers, selectAllCustomers } from '../../store/customer/customer';\r\n@Component({\r\n  selector: 'smart-customerlabelingdatas',\r\n  templateUrl: './customerlabelingdatas.component.html',\r\n  styles: []\r\n})\r\nexport class CustomerlabelingdatasComponent implements OnInit {\r\n  customeraccgroup: Observable<Customeraccgroup[]>\r\n  country: Observable<Country[]>\r\n  currency: Observable<Currency[]>\r\n  paymenterm: Observable<Paymentterm[]>\r\n  customer: Observable<Customer[]>\r\n  selectAllSelector = selectAllCustomerlabelingdatas\r\n  selectCurrent = selectCurrentCustomerlabelingdata\r\n  constructor(private store: Store<any>) { }\r\n  form: RowData[] = []\r\n  columns: TableData[] = [\r\n    { title: 'Customer', value: ['customer','name'] },\r\n    { title: 'WIE', value: 'wie_label' },\r\n    { title: 'Polybag ', value: 'poly_bag'},\r\n    { title: 'Status', value: 'status', bool: true },\r\n  ]\r\n  ngOnInit() {\r\n    this.store.dispatch(loadCustomeraccgroups())\r\n    this.customeraccgroup = this.store.select(selectAllCustomeraccgroups)\r\n    this.store.dispatch(loadCountries())\r\n    this.country = this.store.select(selectAllCountries)\r\n    this.store.dispatch(loadCurrencies())\r\n    this.currency = this.store.select(selectAllCurrencies)\r\n    this.store.dispatch(loadPaymentterms())\r\n    this.paymenterm = this.store.select(selectAllPaymentterms)\r\n    this.store.dispatch(loadCustomers())\r\n    this.customer = this.store.select(selectAllCustomers)\r\n    this.form = [\r\n      {\r\n        row: [\r\n          { label: 'Customer', name: 'customer', items: this.customer, validator: Validators.required, type: 'select' },\r\n          { label: 'WIE', name: 'wie_label' },\r\n        ]\r\n      },\r\n      {\r\n        row: [\r\n          { label: 'Polybag', name: 'poly_bag' },\r\n          { label: 'Polybag Packing Type', name: 'poly_bag_packing_type' },\r\n       \r\n        ]\r\n      },\r\n      {\r\n        row: [\r\n\r\n          { label: 'Poly Bag Sticker', name: 'poly_bag_sticker' },\r\n          { label: 'Additional Sticker', name: 'additional_sticker' },\r\n         \r\n        ]\r\n      },\r\n      {\r\n        row: [\r\n          { label: 'Packing Quantity', name: 'packing_quantity' },\r\n          { label: 'Carton Size', name: 'carton_size' },\r\n        \r\n        ]\r\n      },\r\n\r\n      {\r\n        row: [\r\n          { label: 'Carton Additional Sticker', name: 'carton_additional_sticker' },\r\n          { label: 'Any Other Special', name: 'any_other_special' },\r\n        ]\r\n      },\r\n\r\n      {\r\n        row: [\r\n          { label: 'UCC Label', name: 'ucc_label' },\r\n          { label: 'Customer Remarks', name: 'customer_remarks' },\r\n        ]\r\n      },\r\n      {\r\n        row: [\r\n          { label: 'UCEAN Code', name: 'upcean_code' },\r\n          { label: 'Labeling Remarks', name: 'labeling_remarks' },\r\n        ]\r\n      },\r\n      {\r\n        row: [\r\n          { label: 'Status', name: 'status', type: 'check' }\r\n        ]\r\n      }\r\n      , {\r\n        row: [\r\n          { label: 'ID', name: 'id', type: 'hidden' }\r\n        ]\r\n      }\r\n    ]\r\n\r\n  }\r\n\r\n}\r\n","import { selectCurrentCustomer, selectAllCustomers, Customer } from './../../store/customer/customer';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { RowData } from 'src/app/shared';\r\nimport { Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { TableData } from 'src/app/shared/custom-tables/table/table.component';\r\nimport { Client } from '../../store/customer/client/client';\r\nimport { Country } from '../../store/settings/country/country';\r\nimport { Region } from '../../store/settings/region/region';\r\nimport { Store } from '@ngrx/store';\r\nimport { loadClients, selectAllClients } from '../../store/customer/client';\r\nimport { loadCountries, selectAllCountries } from '../../store/settings/country';\r\nimport { loadRegions, selectAllRegions } from '../../store/settings/region';\r\n@Component({\r\n  selector: 'smart-customers',\r\n  templateUrl: './customers.component.html',\r\n  styles: []\r\n})\r\nexport class CustomersComponent implements OnInit {\r\n\r\n  client: Observable<Client[]>\r\n  country: Observable<Country[]>\r\n  region: Observable<Region[]>\r\n  selectAllSelector = selectAllCustomers\r\n  selectCurrent = selectCurrentCustomer\r\n  constructor(private store: Store<any>) { }\r\n  form: RowData[] = []\r\n  columns: TableData[] = [\r\n    { title: 'Customer Name', value: 'name' },\r\n    { title: 'Client', value: ['client', 'name'], sortable:true },\r\n    { title: 'Code', value: 'code' },\r\n    { title: 'Country', value: ['country', 'name'], sortable:true },\r\n    { title: 'Status', value: 'status', bool: true },\r\n  ]\r\n  ngOnInit() {\r\n    this.store.dispatch(loadClients())\r\n    this.client = this.store.select(selectAllClients)\r\n    this.store.dispatch(loadCountries())\r\n    this.country = this.store.select(selectAllCountries)\r\n    this.store.dispatch(loadRegions())\r\n    this.region = this.store.select(selectAllRegions)\r\n    this.form = [\r\n      {\r\n        row: [\r\n          { label: 'Customer Name', name: 'name', validator: Validators.required },\r\n          { label: 'Client Name', name: 'client', items: this.client, validator: Validators.required, type: 'select' },\r\n        ]\r\n      },\r\n      {\r\n        row: [\r\n\r\n          { label: 'Code', name: 'code', validator: Validators.required },\r\n          { label: 'Full Name', name: 'full_name', validator: Validators.required },\r\n        ]\r\n      },\r\n      {\r\n        row: [\r\n          { label: 'Email', name: 'email', validator: Validators.email, type: \"email\" },\r\n          { label: 'Address', name: 'address', validator: Validators.required },\r\n          { label: 'City', name: 'city' },\r\n        ]\r\n      }\r\n      ,\r\n      {\r\n        row: [\r\n          { label: 'Phone', name: 'phone' },\r\n          { label: 'Mobile', name: 'mobile' },\r\n          { label: 'Fax', name: 'fax' },\r\n\r\n        ]\r\n      },\r\n      {\r\n        row: [\r\n          { label: 'Region', name: 'region', items: this.region, validator: Validators.required, type: \"select\" },\r\n          { label: 'Country', name: 'country', items: this.country, validator: Validators.required, type: 'select' },\r\n\r\n        ]\r\n      },\r\n      {\r\n        row: [\r\n          { label: 'Min Order', name: 'min_order' },\r\n          { label: 'Lead Time', name: 'lead_time' },\r\n\r\n        ]\r\n      },\r\n      {\r\n        row: [\r\n          { label: 'Customized Field 1', name: 'customized_field1' },\r\n          { label: 'Customized Field 1', name: 'customized_field2' },\r\n\r\n        ]\r\n      },\r\n      {\r\n        row: [\r\n          { label: 'Contact Person', name: 'contact_person' },\r\n          { label: 'Contact Person Title', name: 'contact_person_title' },\r\n          { label: 'Contact Person Department', name: 'contact_person_department' },\r\n      \r\n         \r\n        ]\r\n      },\r\n      {\r\n        row: [\r\n          { label: 'Contact Person Phone', name: 'contact_person_phone' },\r\n          { label: 'Contact Person Email', name: 'contact_person_email',validator: Validators.email, type: \"email\"  },\r\n        ]\r\n      }, {\r\n        row: [\r\n          { label: 'Status', name: 'status', type: 'check' }\r\n        ]\r\n      }\r\n      , {\r\n        row: [\r\n          { label: 'ID', name: 'id', type: 'hidden' }\r\n        ]\r\n      }\r\n    ]\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import { selectCurrentForwarder,selectAllForwarders, Forwarder } from './../../store/customer/forwarder';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { RowData } from 'src/app/shared';\r\nimport { Validators } from '@angular/forms';\r\nimport { Observable, of } from 'rxjs';\r\nimport { TableData } from 'src/app/shared/custom-tables/table/table.component';\r\nimport { Country } from '../../store/settings/country/country';\r\nimport { Paymentterm } from '../../store/settings/paymentterm/paymentterm';\r\nimport { Store } from '@ngrx/store';\r\nimport { loadCountries, selectAllCountries } from '../../store/settings/country';\r\nimport { loadPaymentterms, selectAllPaymentterms } from '../../store/settings/paymentterm';\r\n@Component({\r\n  selector: 'smart-forwarders',\r\n  templateUrl: './forwarders.component.html',\r\n  styles: []\r\n})\r\nexport class ForwardersComponent implements OnInit {\r\n  country: Observable<Country[]>\r\n  paymenterm: Observable<Paymentterm[]>\r\n  options = of([{id: 'air', name: 'Air'}, {id: 'sea', name: 'Sea'}])\r\n  selectAllSelector = selectAllForwarders\r\n  selectCurrent = selectCurrentForwarder\r\n  constructor(private store: Store<any>) { }\r\n  form: RowData[] = []\r\n  columns: TableData[] = [\r\n\r\n    { title: 'Name', value: 'name' },\r\n    { title: 'Address', value: 'address' },\r\n    { title: 'Country', value: ['country','name'] },\r\n    { title: 'Status', value: 'status', bool: true },\r\n  ]\r\n  ngOnInit() {\r\n    this.store.dispatch(loadCountries())\r\n    this.country = this.store.select(selectAllCountries)\r\n    this.store.dispatch(loadPaymentterms())\r\n    this.paymenterm = this.store.select(selectAllPaymentterms)\r\n  \r\n    this.form = [\r\n      {\r\n        row: [\r\n          { label: 'Forwarder Name', name: 'name', validator: Validators.required,  },\r\n          { label: 'Address', name: 'address',  validator: Validators.required, },\r\n        ]\r\n      },\r\n      {\r\n        row: [\r\n\r\n          { label: 'Country', name: 'country', items: this.country, validator: Validators.required, type: 'select' },\r\n          { label: 'Type', name: 'type', items: this.options, validator: Validators.required, type: 'select' },\r\n        ]\r\n      },\r\n      {\r\n        row: [\r\n\r\n          { label: 'Phone', name: 'phone' },\r\n          { label: 'Email', name: 'email',validator: Validators.email},\r\n        ]\r\n      },\r\n      {\r\n        row: [\r\n          { label: 'NTN', name: 'ntn' },\r\n          { label: 'VAT', name: 'vat' },\r\n          { label: 'GST', name: 'gst' },\r\n        ]\r\n      },\r\n\r\n      {\r\n        row: [\r\n          { label: 'Contact Person', name: 'contact_person',validator:Validators.required },\r\n          { label: 'Credit Limit', name: 'credit_limit' },\r\n        ]\r\n      },\r\n\r\n      {\r\n        row: [\r\n          { label: 'Payment Term', name: 'payment_term', items: this.paymenterm, validator: Validators.required, type: \"select\" },\r\n          { label: 'Payment Tolerance', name: 'payment_tolerance' },\r\n        ]\r\n      },\r\n      {\r\n        row: [\r\n          { label: 'Status', name: 'status', type: 'check' }\r\n        ]\r\n      }\r\n      , {\r\n        row: [\r\n          { label: 'ID', name: 'id', type: 'hidden' }\r\n        ]\r\n      }\r\n    ]\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import {createAction, props} from '@ngrx/store';\r\n\r\nimport {Customeraccdata} from './customeraccdata';\r\n\r\nexport const loadCustomeraccdatas = createAction(\r\n    '[Customeraccdata/API] Load Customeraccdatas'\r\n);\r\n\r\nexport const loadCustomeraccdatasSuccess = createAction(\r\n    '[Customeraccdata/API] Load Customeraccdatas Success',\r\n    props<{ data: Customeraccdata[] }>(),\r\n);\r\n\r\nexport const addCustomeraccdata = createAction(\r\n    '[Customeraccdata/API] Add Customeraccdata',\r\n    props<{ data: Customeraccdata }>(),\r\n);\r\n\r\nexport const addCustomeraccdataSuccess = createAction(\r\n    '[Customeraccdata/API] Add Customeraccdata Success',\r\n    props<{ data: Customeraccdata }>(),\r\n);\r\n\r\n\r\nexport const deleteCustomeraccdata = createAction(\r\n    '[Customeraccdata/API] Delete Customeraccdata',\r\n    props<{ data: Customeraccdata }>(),\r\n);\r\n\r\nexport const deleteCustomeraccdataSuccess = createAction(\r\n    '[Customeraccdata/API] Delete Customeraccdata Success',\r\n    props<{ id: string}>(),\r\n);\r\n\r\nexport const selectCurrentCustomeraccdataSuccess = createAction(\r\n    '[Customeraccdata/API] Select Current Customeraccdata',\r\n    props<{ data: Customeraccdata }>(),\r\n);\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\r\nimport {Store} from '@ngrx/store';\r\nimport {CustomeraccdataService} from './customeraccdata.service';\r\nimport {\r\n  addCustomeraccdata,\r\n  addCustomeraccdataSuccess,\r\n  deleteCustomeraccdata, deleteCustomeraccdataSuccess,\r\n  loadCustomeraccdatas,\r\n  loadCustomeraccdatasSuccess,\r\n} from './customeraccdata.actions';\r\nimport {filter, map, mergeMap, withLatestFrom} from 'rxjs/operators';\r\nimport {allCustomeraccdataLoaded} from './customeraccdata.selectors';\r\n\r\n\r\n@Injectable()\r\nexport class CustomeraccdataEffects {\r\n\r\n    loadCustomeraccdatas$ = createEffect(() => this.actions$.pipe(\r\n        ofType(loadCustomeraccdatas),\r\n        withLatestFrom(this.store.select(allCustomeraccdataLoaded)),\r\n        filter(([_, allLoaded]) => !allLoaded),\r\n        mergeMap(_ => this.service.findAll().pipe(\r\n            map(data => loadCustomeraccdatasSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    addCustomeraccdata$ = createEffect(() => this.actions$.pipe(\r\n        ofType(addCustomeraccdata),\r\n        mergeMap(action => this.service.save(action.data).pipe(\r\n            map(data => addCustomeraccdataSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    deleteCustomeraccdata$ = createEffect(() => this.actions$.pipe(\r\n        ofType(deleteCustomeraccdata),\r\n        mergeMap(({data}) => this.service.delete(data).pipe(\r\n            map(_ => deleteCustomeraccdataSuccess({id: data.id})),\r\n        )),\r\n    ));\r\n\r\n    constructor(private actions$: Actions, private store: Store<any>, private service: CustomeraccdataService) {\r\n    }\r\n\r\n}\r\n","import {Action, createReducer, on} from '@ngrx/store';\r\nimport {EntityState, EntityAdapter, createEntityAdapter} from '@ngrx/entity';\r\nimport {Customeraccdata} from './customeraccdata';\r\nimport * as CustomeraccdataActions from './customeraccdata.actions';\r\n\r\nexport const customeraccdataFeatureKey = 'customeraccdatas';\r\n\r\nexport interface CustomeraccdataState extends EntityState<Customeraccdata> {\r\n    allCustomeraccdatasLoaded: boolean;\r\n    currentCustomeraccdata: Customeraccdata\r\n}\r\n\r\nexport const adapter: EntityAdapter<Customeraccdata> = createEntityAdapter<Customeraccdata>();\r\n\r\nexport const initialState: CustomeraccdataState = adapter.getInitialState({\r\n    allCustomeraccdatasLoaded: false,\r\n    currentCustomeraccdata: null\r\n});\r\n\r\nconst customeraccdataReducer = createReducer(\r\n    initialState,\r\n    on(CustomeraccdataActions.addCustomeraccdataSuccess,\r\n        (state, action) => adapter.upsertOne(action.data, {...state, currentCustomeraccdata: action.data}),\r\n    ),\r\n    on(CustomeraccdataActions.deleteCustomeraccdataSuccess,\r\n        (state, action) => adapter.removeOne(action.id, state),\r\n    ),\r\n\r\n    on(CustomeraccdataActions.loadCustomeraccdatasSuccess,\r\n        (state, action) => adapter.addAll(action.data, state),\r\n    ),\r\n    on(CustomeraccdataActions.selectCurrentCustomeraccdataSuccess,\r\n        (state, action) => ({...state, currentCustomeraccdata: action.data}),\r\n    ),\r\n);\r\n\r\nexport function reducer(state: CustomeraccdataState | undefined, action: Action) {\r\n    return customeraccdataReducer(state, action);\r\n}\r\n\r\nexport const {\r\n    selectIds,\r\n    selectEntities,\r\n    selectAll,\r\n    selectTotal,\r\n} = adapter.getSelectors();\r\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport {CustomeraccdataState, customeraccdataFeatureKey, selectAll} from './customeraccdata.reducer';\r\n\r\nconst featureState = createFeatureSelector<CustomeraccdataState>(customeraccdataFeatureKey);\r\n\r\nexport const selectAllCustomeraccdatas = createSelector(\r\n    featureState,\r\n    selectAll,\r\n);\r\n\r\nexport const allCustomeraccdataLoaded = createSelector(\r\n    featureState,\r\n    state => state.allCustomeraccdatasLoaded,\r\n);\r\n\r\nexport const selectCurrentCustomeraccdata = createSelector(\r\n    featureState,\r\n    state => state.currentCustomeraccdata\r\n)\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {APP_CONFIG} from '../../../../app.config';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Customeraccdata} from './customeraccdata';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class CustomeraccdataService {\r\n    private url = `${APP_CONFIG.BASE_URL}/customer-account-data/`;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    findAll(): Observable<Customeraccdata[]> {\r\n        return this.http.get<Customeraccdata[]>(this.url);\r\n    }\r\n\r\n    save(item: Customeraccdata): Observable<Customeraccdata> {\r\n        if (!item.id) {\r\n            return this.http.post<Customeraccdata>(this.url, item);\r\n        } else {\r\n            return this.update(item);\r\n        }\r\n    }\r\n\r\n    private update(item: Customeraccdata): Observable<Customeraccdata> {\r\n        return this.http.put<Customeraccdata>(`${this.url}${item.id}/`, item);\r\n    }\r\n\r\n    delete(item: Customeraccdata) {\r\n        return this.http.delete(`${this.url}${item.id}/`);\r\n    }\r\n}\r\n","export * from './customeraccdata';\r\nexport * from './customeraccdata.effects';\r\nexport * from './customeraccdata.service';\r\nexport * from './customeraccdata.selectors';\r\nexport * from './customeraccdata.reducer';\r\nexport * from './customeraccdata.actions';\r\n","import {createAction, props} from '@ngrx/store';\r\n\r\nimport {Customeraccgroup} from './customeraccgroup';\r\n\r\nexport const loadCustomeraccgroups = createAction(\r\n    '[Customeraccgroup/API] Load Customeraccgroups'\r\n);\r\n\r\nexport const loadCustomeraccgroupsSuccess = createAction(\r\n    '[Customeraccgroup/API] Load Customeraccgroups Success',\r\n    props<{ data: Customeraccgroup[] }>(),\r\n);\r\n\r\nexport const addCustomeraccgroup = createAction(\r\n    '[Customeraccgroup/API] Add Customeraccgroup',\r\n    props<{ data: Customeraccgroup }>(),\r\n);\r\n\r\nexport const addCustomeraccgroupSuccess = createAction(\r\n    '[Customeraccgroup/API] Add Customeraccgroup Success',\r\n    props<{ data: Customeraccgroup }>(),\r\n);\r\n\r\n\r\nexport const deleteCustomeraccgroup = createAction(\r\n    '[Customeraccgroup/API] Delete Customeraccgroup',\r\n    props<{ data: Customeraccgroup }>(),\r\n);\r\n\r\nexport const deleteCustomeraccgroupSuccess = createAction(\r\n    '[Customeraccgroup/API] Delete Customeraccgroup Success',\r\n    props<{ id: string}>(),\r\n);\r\n\r\nexport const selectCurrentCustomeraccgroupSuccess = createAction(\r\n    '[Customeraccgroup/API] Select Current Customeraccgroup',\r\n    props<{ data: Customeraccgroup }>(),\r\n);\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\r\nimport {Store} from '@ngrx/store';\r\nimport {CustomeraccgroupService} from './customeraccgroup.service';\r\nimport {\r\n  addCustomeraccgroup,\r\n  addCustomeraccgroupSuccess,\r\n  deleteCustomeraccgroup, deleteCustomeraccgroupSuccess,\r\n  loadCustomeraccgroups,\r\n  loadCustomeraccgroupsSuccess,\r\n} from './customeraccgroup.actions';\r\nimport {filter, map, mergeMap, withLatestFrom} from 'rxjs/operators';\r\nimport {allCustomeraccgroupLoaded} from './customeraccgroup.selectors';\r\n\r\n\r\n@Injectable()\r\nexport class CustomeraccgroupEffects {\r\n\r\n    loadCustomeraccgroups$ = createEffect(() => this.actions$.pipe(\r\n        ofType(loadCustomeraccgroups),\r\n        withLatestFrom(this.store.select(allCustomeraccgroupLoaded)),\r\n        filter(([_, allLoaded]) => !allLoaded),\r\n        mergeMap(_ => this.service.findAll().pipe(\r\n            map(data => loadCustomeraccgroupsSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    addCustomeraccgroup$ = createEffect(() => this.actions$.pipe(\r\n        ofType(addCustomeraccgroup),\r\n        mergeMap(action => this.service.save(action.data).pipe(\r\n            map(data => addCustomeraccgroupSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    deleteCustomeraccgroup$ = createEffect(() => this.actions$.pipe(\r\n        ofType(deleteCustomeraccgroup),\r\n        mergeMap(({data}) => this.service.delete(data).pipe(\r\n            map(_ => deleteCustomeraccgroupSuccess({id: data.id})),\r\n        )),\r\n    ));\r\n\r\n    constructor(private actions$: Actions, private store: Store<any>, private service: CustomeraccgroupService) {\r\n    }\r\n\r\n}\r\n","import {Action, createReducer, on} from '@ngrx/store';\r\nimport {EntityState, EntityAdapter, createEntityAdapter} from '@ngrx/entity';\r\nimport {Customeraccgroup} from './customeraccgroup';\r\nimport * as CustomeraccgroupActions from './customeraccgroup.actions';\r\n\r\nexport const customeraccgroupFeatureKey = 'customeraccgroups';\r\n\r\nexport interface CustomeraccgroupState extends EntityState<Customeraccgroup> {\r\n    allCustomeraccgroupsLoaded: boolean;\r\n    currentCustomeraccgroup: Customeraccgroup\r\n}\r\n\r\nexport const adapter: EntityAdapter<Customeraccgroup> = createEntityAdapter<Customeraccgroup>();\r\n\r\nexport const initialState: CustomeraccgroupState = adapter.getInitialState({\r\n    allCustomeraccgroupsLoaded: false,\r\n    currentCustomeraccgroup: null\r\n});\r\n\r\nconst customeraccgroupReducer = createReducer(\r\n    initialState,\r\n    on(CustomeraccgroupActions.addCustomeraccgroupSuccess,\r\n        (state, action) => adapter.upsertOne(action.data, {...state, currentCustomeraccgroup: action.data}),\r\n    ),\r\n    on(CustomeraccgroupActions.deleteCustomeraccgroupSuccess,\r\n        (state, action) => adapter.removeOne(action.id, state),\r\n    ),\r\n\r\n    on(CustomeraccgroupActions.loadCustomeraccgroupsSuccess,\r\n        (state, action) => adapter.addAll(action.data, state),\r\n    ),\r\n    on(CustomeraccgroupActions.selectCurrentCustomeraccgroupSuccess,\r\n        (state, action) => ({...state, currentCustomeraccgroup: action.data}),\r\n    ),\r\n);\r\n\r\nexport function reducer(state: CustomeraccgroupState | undefined, action: Action) {\r\n    return customeraccgroupReducer(state, action);\r\n}\r\n\r\nexport const {\r\n    selectIds,\r\n    selectEntities,\r\n    selectAll,\r\n    selectTotal,\r\n} = adapter.getSelectors();\r\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport {CustomeraccgroupState, customeraccgroupFeatureKey, selectAll} from './customeraccgroup.reducer';\r\n\r\nconst featureState = createFeatureSelector<CustomeraccgroupState>(customeraccgroupFeatureKey);\r\n\r\nexport const selectAllCustomeraccgroups = createSelector(\r\n    featureState,\r\n    selectAll,\r\n);\r\n\r\nexport const allCustomeraccgroupLoaded = createSelector(\r\n    featureState,\r\n    state => state.allCustomeraccgroupsLoaded,\r\n);\r\n\r\nexport const selectCurrentCustomeraccgroup = createSelector(\r\n    featureState,\r\n    state => state.currentCustomeraccgroup\r\n)\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {APP_CONFIG} from '../../../../app.config';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Customeraccgroup} from './customeraccgroup';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class CustomeraccgroupService {\r\n    private url = `${APP_CONFIG.BASE_URL}/customer-account-groups/`;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    findAll(): Observable<Customeraccgroup[]> {\r\n        return this.http.get<Customeraccgroup[]>(this.url);\r\n    }\r\n\r\n    save(item: Customeraccgroup): Observable<Customeraccgroup> {\r\n        if (!item.id) {\r\n            return this.http.post<Customeraccgroup>(this.url, item);\r\n        } else {\r\n            return this.update(item);\r\n        }\r\n    }\r\n\r\n    private update(item: Customeraccgroup): Observable<Customeraccgroup> {\r\n        return this.http.put<Customeraccgroup>(`${this.url}${item.id}/`, item);\r\n    }\r\n\r\n    delete(item: Customeraccgroup) {\r\n        return this.http.delete(`${this.url}${item.id}/`);\r\n    }\r\n}\r\n","export * from './customeraccgroup';\r\nexport * from './customeraccgroup.effects';\r\nexport * from './customeraccgroup.service';\r\nexport * from './customeraccgroup.selectors';\r\nexport * from './customeraccgroup.reducer';\r\nexport * from './customeraccgroup.actions';\r\n","import {createAction, props} from '@ngrx/store';\r\n\r\nimport {Customerexportdata} from './customerexportdata';\r\n\r\nexport const loadCustomerexportdatas = createAction(\r\n    '[Customerexportdata/API] Load Customerexportdatas'\r\n);\r\n\r\nexport const loadCustomerexportdatasSuccess = createAction(\r\n    '[Customerexportdata/API] Load Customerexportdatas Success',\r\n    props<{ data: Customerexportdata[] }>(),\r\n);\r\n\r\nexport const addCustomerexportdata = createAction(\r\n    '[Customerexportdata/API] Add Customerexportdata',\r\n    props<{ data: Customerexportdata }>(),\r\n);\r\n\r\nexport const addCustomerexportdataSuccess = createAction(\r\n    '[Customerexportdata/API] Add Customerexportdata Success',\r\n    props<{ data: Customerexportdata }>(),\r\n);\r\n\r\n\r\nexport const deleteCustomerexportdata = createAction(\r\n    '[Customerexportdata/API] Delete Customerexportdata',\r\n    props<{ data: Customerexportdata }>(),\r\n);\r\n\r\nexport const deleteCustomerexportdataSuccess = createAction(\r\n    '[Customerexportdata/API] Delete Customerexportdata Success',\r\n    props<{ id: string}>(),\r\n);\r\n\r\nexport const selectCurrentCustomerexportdataSuccess = createAction(\r\n    '[Customerexportdata/API] Select Current Customerexportdata',\r\n    props<{ data: Customerexportdata }>(),\r\n);\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\r\nimport {Store} from '@ngrx/store';\r\nimport {CustomerexportdataService} from './customerexportdata.service';\r\nimport {\r\n  addCustomerexportdata,\r\n  addCustomerexportdataSuccess,\r\n  deleteCustomerexportdata, deleteCustomerexportdataSuccess,\r\n  loadCustomerexportdatas,\r\n  loadCustomerexportdatasSuccess,\r\n} from './customerexportdata.actions';\r\nimport {filter, map, mergeMap, withLatestFrom} from 'rxjs/operators';\r\nimport {allCustomerexportdataLoaded} from './customerexportdata.selectors';\r\n\r\n\r\n@Injectable()\r\nexport class CustomerexportdataEffects {\r\n\r\n    loadCustomerexportdatas$ = createEffect(() => this.actions$.pipe(\r\n        ofType(loadCustomerexportdatas),\r\n        withLatestFrom(this.store.select(allCustomerexportdataLoaded)),\r\n        filter(([_, allLoaded]) => !allLoaded),\r\n        mergeMap(_ => this.service.findAll().pipe(\r\n            map(data => loadCustomerexportdatasSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    addCustomerexportdata$ = createEffect(() => this.actions$.pipe(\r\n        ofType(addCustomerexportdata),\r\n        mergeMap(action => this.service.save(action.data).pipe(\r\n            map(data => addCustomerexportdataSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    deleteCustomerexportdata$ = createEffect(() => this.actions$.pipe(\r\n        ofType(deleteCustomerexportdata),\r\n        mergeMap(({data}) => this.service.delete(data).pipe(\r\n            map(_ => deleteCustomerexportdataSuccess({id: data.id})),\r\n        )),\r\n    ));\r\n\r\n    constructor(private actions$: Actions, private store: Store<any>, private service: CustomerexportdataService) {\r\n    }\r\n\r\n}\r\n","import {Action, createReducer, on} from '@ngrx/store';\r\nimport {EntityState, EntityAdapter, createEntityAdapter} from '@ngrx/entity';\r\nimport {Customerexportdata} from './customerexportdata';\r\nimport * as CustomerexportdataActions from './customerexportdata.actions';\r\n\r\nexport const customerexportdataFeatureKey = 'customerexportdatas';\r\n\r\nexport interface CustomerexportdataState extends EntityState<Customerexportdata> {\r\n    allCustomerexportdatasLoaded: boolean;\r\n    currentCustomerexportdata: Customerexportdata\r\n}\r\n\r\nexport const adapter: EntityAdapter<Customerexportdata> = createEntityAdapter<Customerexportdata>();\r\n\r\nexport const initialState: CustomerexportdataState = adapter.getInitialState({\r\n    allCustomerexportdatasLoaded: false,\r\n    currentCustomerexportdata: null\r\n});\r\n\r\nconst customerexportdataReducer = createReducer(\r\n    initialState,\r\n    on(CustomerexportdataActions.addCustomerexportdataSuccess,\r\n        (state, action) => adapter.upsertOne(action.data, {...state, currentCustomerexportdata: action.data}),\r\n    ),\r\n    on(CustomerexportdataActions.deleteCustomerexportdataSuccess,\r\n        (state, action) => adapter.removeOne(action.id, state),\r\n    ),\r\n\r\n    on(CustomerexportdataActions.loadCustomerexportdatasSuccess,\r\n        (state, action) => adapter.addAll(action.data, state),\r\n    ),\r\n    on(CustomerexportdataActions.selectCurrentCustomerexportdataSuccess,\r\n        (state, action) => ({...state, currentCustomerexportdata: action.data}),\r\n    ),\r\n);\r\n\r\nexport function reducer(state: CustomerexportdataState | undefined, action: Action) {\r\n    return customerexportdataReducer(state, action);\r\n}\r\n\r\nexport const {\r\n    selectIds,\r\n    selectEntities,\r\n    selectAll,\r\n    selectTotal,\r\n} = adapter.getSelectors();\r\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport {CustomerexportdataState, customerexportdataFeatureKey, selectAll} from './customerexportdata.reducer';\r\n\r\nconst featureState = createFeatureSelector<CustomerexportdataState>(customerexportdataFeatureKey);\r\n\r\nexport const selectAllCustomerexportdatas = createSelector(\r\n    featureState,\r\n    selectAll,\r\n);\r\n\r\nexport const allCustomerexportdataLoaded = createSelector(\r\n    featureState,\r\n    state => state.allCustomerexportdatasLoaded,\r\n);\r\n\r\nexport const selectCurrentCustomerexportdata = createSelector(\r\n    featureState,\r\n    state => state.currentCustomerexportdata\r\n)\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {APP_CONFIG} from '../../../../app.config';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Customerexportdata} from './customerexportdata';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class CustomerexportdataService {\r\n    private url = `${APP_CONFIG.BASE_URL}/customer-export-data/`;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    findAll(): Observable<Customerexportdata[]> {\r\n        return this.http.get<Customerexportdata[]>(this.url);\r\n    }\r\n\r\n    save(item: Customerexportdata): Observable<Customerexportdata> {\r\n        if (!item.id) {\r\n            return this.http.post<Customerexportdata>(this.url, item);\r\n        } else {\r\n            return this.update(item);\r\n        }\r\n    }\r\n\r\n    private update(item: Customerexportdata): Observable<Customerexportdata> {\r\n        return this.http.put<Customerexportdata>(`${this.url}${item.id}/`, item);\r\n    }\r\n\r\n    delete(item: Customerexportdata) {\r\n        return this.http.delete(`${this.url}${item.id}/`);\r\n    }\r\n}\r\n","export * from './customerexportdata';\r\nexport * from './customerexportdata.effects';\r\nexport * from './customerexportdata.service';\r\nexport * from './customerexportdata.selectors';\r\nexport * from './customerexportdata.reducer';\r\nexport * from './customerexportdata.actions';\r\n","import {createAction, props} from '@ngrx/store';\r\n\r\nimport {Customerlabelingdata} from './customerlabelingdata';\r\n\r\nexport const loadCustomerlabelingdatas = createAction(\r\n    '[Customerlabelingdata/API] Load Customerlabelingdatas'\r\n);\r\n\r\nexport const loadCustomerlabelingdatasSuccess = createAction(\r\n    '[Customerlabelingdata/API] Load Customerlabelingdatas Success',\r\n    props<{ data: Customerlabelingdata[] }>(),\r\n);\r\n\r\nexport const addCustomerlabelingdata = createAction(\r\n    '[Customerlabelingdata/API] Add Customerlabelingdata',\r\n    props<{ data: Customerlabelingdata }>(),\r\n);\r\n\r\nexport const addCustomerlabelingdataSuccess = createAction(\r\n    '[Customerlabelingdata/API] Add Customerlabelingdata Success',\r\n    props<{ data: Customerlabelingdata }>(),\r\n);\r\n\r\n\r\nexport const deleteCustomerlabelingdata = createAction(\r\n    '[Customerlabelingdata/API] Delete Customerlabelingdata',\r\n    props<{ data: Customerlabelingdata }>(),\r\n);\r\n\r\nexport const deleteCustomerlabelingdataSuccess = createAction(\r\n    '[Customerlabelingdata/API] Delete Customerlabelingdata Success',\r\n    props<{ id: string}>(),\r\n);\r\n\r\nexport const selectCurrentCustomerlabelingdataSuccess = createAction(\r\n    '[Customerlabelingdata/API] Select Current Customerlabelingdata',\r\n    props<{ data: Customerlabelingdata }>(),\r\n);\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\r\nimport {Store} from '@ngrx/store';\r\nimport {CustomerlabelingdataService} from './customerlabelingdata.service';\r\nimport {\r\n  addCustomerlabelingdata,\r\n  addCustomerlabelingdataSuccess,\r\n  deleteCustomerlabelingdata, deleteCustomerlabelingdataSuccess,\r\n  loadCustomerlabelingdatas,\r\n  loadCustomerlabelingdatasSuccess,\r\n} from './customerlabelingdata.actions';\r\nimport {filter, map, mergeMap, withLatestFrom} from 'rxjs/operators';\r\nimport {allCustomerlabelingdataLoaded} from './customerlabelingdata.selectors';\r\n\r\n\r\n@Injectable()\r\nexport class CustomerlabelingdataEffects {\r\n\r\n    loadCustomerlabelingdatas$ = createEffect(() => this.actions$.pipe(\r\n        ofType(loadCustomerlabelingdatas),\r\n        withLatestFrom(this.store.select(allCustomerlabelingdataLoaded)),\r\n        filter(([_, allLoaded]) => !allLoaded),\r\n        mergeMap(_ => this.service.findAll().pipe(\r\n            map(data => loadCustomerlabelingdatasSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    addCustomerlabelingdata$ = createEffect(() => this.actions$.pipe(\r\n        ofType(addCustomerlabelingdata),\r\n        mergeMap(action => this.service.save(action.data).pipe(\r\n            map(data => addCustomerlabelingdataSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    deleteCustomerlabelingdata$ = createEffect(() => this.actions$.pipe(\r\n        ofType(deleteCustomerlabelingdata),\r\n        mergeMap(({data}) => this.service.delete(data).pipe(\r\n            map(_ => deleteCustomerlabelingdataSuccess({id: data.id})),\r\n        )),\r\n    ));\r\n\r\n    constructor(private actions$: Actions, private store: Store<any>, private service: CustomerlabelingdataService) {\r\n    }\r\n\r\n}\r\n","import {Action, createReducer, on} from '@ngrx/store';\r\nimport {EntityState, EntityAdapter, createEntityAdapter} from '@ngrx/entity';\r\nimport {Customerlabelingdata} from './customerlabelingdata';\r\nimport * as CustomerlabelingdataActions from './customerlabelingdata.actions';\r\n\r\nexport const customerlabelingdataFeatureKey = 'customerlabelingdatas';\r\n\r\nexport interface CustomerlabelingdataState extends EntityState<Customerlabelingdata> {\r\n    allCustomerlabelingdatasLoaded: boolean;\r\n    currentCustomerlabelingdata: Customerlabelingdata\r\n}\r\n\r\nexport const adapter: EntityAdapter<Customerlabelingdata> = createEntityAdapter<Customerlabelingdata>();\r\n\r\nexport const initialState: CustomerlabelingdataState = adapter.getInitialState({\r\n    allCustomerlabelingdatasLoaded: false,\r\n    currentCustomerlabelingdata: null\r\n});\r\n\r\nconst customerlabelingdataReducer = createReducer(\r\n    initialState,\r\n    on(CustomerlabelingdataActions.addCustomerlabelingdataSuccess,\r\n        (state, action) => adapter.upsertOne(action.data, {...state, currentCustomerlabelingdata: action.data}),\r\n    ),\r\n    on(CustomerlabelingdataActions.deleteCustomerlabelingdataSuccess,\r\n        (state, action) => adapter.removeOne(action.id, state),\r\n    ),\r\n\r\n    on(CustomerlabelingdataActions.loadCustomerlabelingdatasSuccess,\r\n        (state, action) => adapter.addAll(action.data, state),\r\n    ),\r\n    on(CustomerlabelingdataActions.selectCurrentCustomerlabelingdataSuccess,\r\n        (state, action) => ({...state, currentCustomerlabelingdata: action.data}),\r\n    ),\r\n);\r\n\r\nexport function reducer(state: CustomerlabelingdataState | undefined, action: Action) {\r\n    return customerlabelingdataReducer(state, action);\r\n}\r\n\r\nexport const {\r\n    selectIds,\r\n    selectEntities,\r\n    selectAll,\r\n    selectTotal,\r\n} = adapter.getSelectors();\r\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport {CustomerlabelingdataState, customerlabelingdataFeatureKey, selectAll} from './customerlabelingdata.reducer';\r\n\r\nconst featureState = createFeatureSelector<CustomerlabelingdataState>(customerlabelingdataFeatureKey);\r\n\r\nexport const selectAllCustomerlabelingdatas = createSelector(\r\n    featureState,\r\n    selectAll,\r\n);\r\n\r\nexport const allCustomerlabelingdataLoaded = createSelector(\r\n    featureState,\r\n    state => state.allCustomerlabelingdatasLoaded,\r\n);\r\n\r\nexport const selectCurrentCustomerlabelingdata = createSelector(\r\n    featureState,\r\n    state => state.currentCustomerlabelingdata\r\n)\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {APP_CONFIG} from '../../../../app.config';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Customerlabelingdata} from './customerlabelingdata';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class CustomerlabelingdataService {\r\n    private url = `${APP_CONFIG.BASE_URL}/customer-labelling-data/`;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    findAll(): Observable<Customerlabelingdata[]> {\r\n        return this.http.get<Customerlabelingdata[]>(this.url);\r\n    }\r\n\r\n    save(item: Customerlabelingdata): Observable<Customerlabelingdata> {\r\n        if (!item.id) {\r\n            return this.http.post<Customerlabelingdata>(this.url, item);\r\n        } else {\r\n            return this.update(item);\r\n        }\r\n    }\r\n\r\n    private update(item: Customerlabelingdata): Observable<Customerlabelingdata> {\r\n        return this.http.put<Customerlabelingdata>(`${this.url}${item.id}/`, item);\r\n    }\r\n\r\n    delete(item: Customerlabelingdata) {\r\n        return this.http.delete(`${this.url}${item.id}/`);\r\n    }\r\n}\r\n","export * from './customerlabelingdata';\r\nexport * from './customerlabelingdata.effects';\r\nexport * from './customerlabelingdata.service';\r\nexport * from './customerlabelingdata.selectors';\r\nexport * from './customerlabelingdata.reducer';\r\nexport * from './customerlabelingdata.actions';\r\n","import {createAction, props} from '@ngrx/store';\r\n\r\nimport {Forwarder} from './forwarder';\r\n\r\nexport const loadForwarders = createAction(\r\n    '[Forwarder/API] Load Forwarders'\r\n);\r\n\r\nexport const loadForwardersSuccess = createAction(\r\n    '[Forwarder/API] Load Forwarders Success',\r\n    props<{ data: Forwarder[] }>(),\r\n);\r\n\r\nexport const addForwarder = createAction(\r\n    '[Forwarder/API] Add Forwarder',\r\n    props<{ data: Forwarder }>(),\r\n);\r\n\r\nexport const addForwarderSuccess = createAction(\r\n    '[Forwarder/API] Add Forwarder Success',\r\n    props<{ data: Forwarder }>(),\r\n);\r\n\r\n\r\nexport const deleteForwarder = createAction(\r\n    '[Forwarder/API] Delete Forwarder',\r\n    props<{ data: Forwarder }>(),\r\n);\r\n\r\nexport const deleteForwarderSuccess = createAction(\r\n    '[Forwarder/API] Delete Forwarder Success',\r\n    props<{ id: string}>(),\r\n);\r\n\r\nexport const selectCurrentForwarderSuccess = createAction(\r\n    '[Forwarder/API] Select Current Forwarder',\r\n    props<{ data: Forwarder }>(),\r\n);\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\r\nimport {Store} from '@ngrx/store';\r\nimport {ForwarderService} from './forwarder.service';\r\nimport {\r\n  addForwarder,\r\n  addForwarderSuccess,\r\n  deleteForwarder, deleteForwarderSuccess,\r\n  loadForwarders,\r\n  loadForwardersSuccess,\r\n} from './forwarder.actions';\r\nimport {filter, map, mergeMap, withLatestFrom} from 'rxjs/operators';\r\nimport {allForwarderLoaded} from './forwarder.selectors';\r\n\r\n\r\n@Injectable()\r\nexport class ForwarderEffects {\r\n\r\n    loadForwarders$ = createEffect(() => this.actions$.pipe(\r\n        ofType(loadForwarders),\r\n        withLatestFrom(this.store.select(allForwarderLoaded)),\r\n        filter(([_, allLoaded]) => !allLoaded),\r\n        mergeMap(_ => this.service.findAll().pipe(\r\n            map(data => loadForwardersSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    addForwarder$ = createEffect(() => this.actions$.pipe(\r\n        ofType(addForwarder),\r\n        mergeMap(action => this.service.save(action.data).pipe(\r\n            map(data => addForwarderSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    deleteForwarder$ = createEffect(() => this.actions$.pipe(\r\n        ofType(deleteForwarder),\r\n        mergeMap(({data}) => this.service.delete(data).pipe(\r\n            map(_ => deleteForwarderSuccess({id: data.id})),\r\n        )),\r\n    ));\r\n\r\n    constructor(private actions$: Actions, private store: Store<any>, private service: ForwarderService) {\r\n    }\r\n\r\n}\r\n","import {Action, createReducer, on} from '@ngrx/store';\r\nimport {EntityState, EntityAdapter, createEntityAdapter} from '@ngrx/entity';\r\nimport {Forwarder} from './forwarder';\r\nimport * as ForwarderActions from './forwarder.actions';\r\n\r\nexport const forwarderFeatureKey = 'forwarders';\r\n\r\nexport interface ForwarderState extends EntityState<Forwarder> {\r\n    allForwardersLoaded: boolean;\r\n    currentForwarder: Forwarder\r\n}\r\n\r\nexport const adapter: EntityAdapter<Forwarder> = createEntityAdapter<Forwarder>();\r\n\r\nexport const initialState: ForwarderState = adapter.getInitialState({\r\n    allForwardersLoaded: false,\r\n    currentForwarder: null\r\n});\r\n\r\nconst forwarderReducer = createReducer(\r\n    initialState,\r\n    on(ForwarderActions.addForwarderSuccess,\r\n        (state, action) => adapter.upsertOne(action.data, {...state, currentForwarder: action.data}),\r\n    ),\r\n    on(ForwarderActions.deleteForwarderSuccess,\r\n        (state, action) => adapter.removeOne(action.id, state),\r\n    ),\r\n\r\n    on(ForwarderActions.loadForwardersSuccess,\r\n        (state, action) => adapter.addAll(action.data, state),\r\n    ),\r\n    on(ForwarderActions.selectCurrentForwarderSuccess,\r\n        (state, action) => ({...state, currentForwarder: action.data}),\r\n    ),\r\n);\r\n\r\nexport function reducer(state: ForwarderState | undefined, action: Action) {\r\n    return forwarderReducer(state, action);\r\n}\r\n\r\nexport const {\r\n    selectIds,\r\n    selectEntities,\r\n    selectAll,\r\n    selectTotal,\r\n} = adapter.getSelectors();\r\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport {ForwarderState, forwarderFeatureKey, selectAll} from './forwarder.reducer';\r\n\r\nconst featureState = createFeatureSelector<ForwarderState>(forwarderFeatureKey);\r\n\r\nexport const selectAllForwarders = createSelector(\r\n    featureState,\r\n    selectAll,\r\n);\r\n\r\nexport const allForwarderLoaded = createSelector(\r\n    featureState,\r\n    state => state.allForwardersLoaded,\r\n);\r\n\r\nexport const selectCurrentForwarder = createSelector(\r\n    featureState,\r\n    state => state.currentForwarder\r\n)\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {APP_CONFIG} from '../../../../app.config';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Forwarder} from './forwarder';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ForwarderService {\r\n    private url = `${APP_CONFIG.BASE_URL}/forwarders/`;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    findAll(): Observable<Forwarder[]> {\r\n        return this.http.get<Forwarder[]>(this.url);\r\n    }\r\n\r\n    save(item: Forwarder): Observable<Forwarder> {\r\n        if (!item.id) {\r\n            return this.http.post<Forwarder>(this.url, item);\r\n        } else {\r\n            return this.update(item);\r\n        }\r\n    }\r\n\r\n    private update(item: Forwarder): Observable<Forwarder> {\r\n        return this.http.put<Forwarder>(`${this.url}${item.id}/`, item);\r\n    }\r\n\r\n    delete(item: Forwarder) {\r\n        return this.http.delete(`${this.url}${item.id}/`);\r\n    }\r\n}\r\n","export * from './forwarder';\r\nexport * from './forwarder.effects';\r\nexport * from './forwarder.service';\r\nexport * from './forwarder.selectors';\r\nexport * from './forwarder.reducer';\r\nexport * from './forwarder.actions';\r\n"],"sourceRoot":""}