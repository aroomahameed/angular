{"version":3,"sources":["webpack:///./src/app/features/store/article/article/article.actions.ts","webpack:///./src/app/features/store/article/article/article.effects.ts","webpack:///./src/app/features/store/article/article/article.reducer.ts","webpack:///./src/app/features/store/article/article/article.selectors.ts","webpack:///./src/app/features/store/article/article/article.service.ts","webpack:///./src/app/features/store/article/article/index.ts","webpack:///./src/app/features/store/article/model/index.ts","webpack:///./src/app/features/store/article/model/model.actions.ts","webpack:///./src/app/features/store/article/model/model.effects.ts","webpack:///./src/app/features/store/article/model/model.reducer.ts","webpack:///./src/app/features/store/article/model/model.selectors.ts","webpack:///./src/app/features/store/article/model/model.service.ts","webpack:///./src/app/features/store/settings/factorycode/factorycode.actions.ts","webpack:///./src/app/features/store/settings/factorycode/factorycode.effects.ts","webpack:///./src/app/features/store/settings/factorycode/factorycode.reducer.ts","webpack:///./src/app/features/store/settings/factorycode/factorycode.selectors.ts","webpack:///./src/app/features/store/settings/factorycode/factorycode.service.ts","webpack:///./src/app/features/store/settings/factorycode/index.ts","webpack:///./src/app/features/store/settings/vendor/index.ts","webpack:///./src/app/features/store/settings/vendor/vendor.actions.ts","webpack:///./src/app/features/store/settings/vendor/vendor.effects.ts","webpack:///./src/app/features/store/settings/vendor/vendor.reducer.ts","webpack:///./src/app/features/store/settings/vendor/vendor.selectors.ts","webpack:///./src/app/features/store/settings/vendor/vendor.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import {createAction, props} from '@ngrx/store';\r\n\r\nimport {Article} from './article';\r\n\r\nexport const loadArticles = createAction(\r\n    '[Article/API] Load Articles'\r\n);\r\n\r\nexport const loadArticlesSuccess = createAction(\r\n    '[Article/API] Load Articles Success',\r\n    props<{ data: Article[] }>(),\r\n);\r\n\r\nexport const addArticle = createAction(\r\n    '[Article/API] Add Article',\r\n    props<{ data: any }>(),\r\n);\r\n\r\nexport const addArticleSuccess = createAction(\r\n    '[Article/API] Add Article Success',\r\n    props<{ data: Article }>(),\r\n);\r\n\r\n\r\nexport const deleteArticle = createAction(\r\n    '[Article/API] Delete Article',\r\n    props<{ data: Article }>(),\r\n);\r\n\r\nexport const deleteArticleSuccess = createAction(\r\n    '[Article/API] Delete Article Success',\r\n    props<{ id: string}>(),\r\n);\r\n\r\nexport const selectCurrentArticleSuccess = createAction(\r\n    '[Article/API] Select Current Article',\r\n    props<{ data: Article }>(),\r\n);\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\r\nimport {Store} from '@ngrx/store';\r\nimport {ArticleService} from './article.service';\r\nimport {\r\n  addArticle,\r\n  addArticleSuccess,\r\n  deleteArticle, deleteArticleSuccess,\r\n  loadArticles,\r\n  loadArticlesSuccess,\r\n} from './article.actions';\r\nimport {filter, map, mergeMap, withLatestFrom} from 'rxjs/operators';\r\nimport {allArticleLoaded} from './article.selectors';\r\n\r\n\r\n@Injectable()\r\nexport class ArticleEffects {\r\n\r\n    loadArticles$ = createEffect(() => this.actions$.pipe(\r\n        ofType(loadArticles),\r\n        withLatestFrom(this.store.select(allArticleLoaded)),\r\n        filter(([_, allLoaded]) => !allLoaded),\r\n        mergeMap(_ => this.service.findAll().pipe(\r\n            map(data => loadArticlesSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    addArticle$ = createEffect(() => this.actions$.pipe(\r\n        ofType(addArticle),\r\n        mergeMap(action => this.service.save(action.data).pipe(\r\n            map(data => addArticleSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    deleteArticle$ = createEffect(() => this.actions$.pipe(\r\n        ofType(deleteArticle),\r\n        mergeMap(({data}) => this.service.delete(data).pipe(\r\n            map(_ => deleteArticleSuccess({id: data.id})),\r\n        )),\r\n    ));\r\n\r\n    constructor(private actions$: Actions, private store: Store<any>, private service: ArticleService) {\r\n    }\r\n\r\n}\r\n","import {Action, createReducer, on} from '@ngrx/store';\r\nimport {EntityState, EntityAdapter, createEntityAdapter} from '@ngrx/entity';\r\nimport {Article} from './article';\r\nimport * as ArticleActions from './article.actions';\r\n\r\nexport const articleFeatureKey = 'articles';\r\n\r\nexport interface ArticleState extends EntityState<Article> {\r\n    allArticlesLoaded: boolean;\r\n    currentArticle: Article\r\n}\r\n\r\nexport const adapter: EntityAdapter<Article> = createEntityAdapter<Article>();\r\n\r\nexport const initialState: ArticleState = adapter.getInitialState({\r\n    allArticlesLoaded: false,\r\n    currentArticle: null\r\n});\r\n\r\nconst articleReducer = createReducer(\r\n    initialState,\r\n    on(ArticleActions.addArticleSuccess,\r\n        (state, action) => adapter.upsertOne(action.data, {...state, currentArticle: action.data}),\r\n    ),\r\n    on(ArticleActions.deleteArticleSuccess,\r\n        (state, action) => adapter.removeOne(action.id, state),\r\n    ),\r\n\r\n    on(ArticleActions.loadArticlesSuccess,\r\n        (state, action) => adapter.addAll(action.data, state),\r\n    ),\r\n    on(ArticleActions.selectCurrentArticleSuccess,\r\n        (state, action) => ({...state, currentArticle: action.data}),\r\n    ),\r\n);\r\n\r\nexport function reducer(state: ArticleState | undefined, action: Action) {\r\n    return articleReducer(state, action);\r\n}\r\n\r\nexport const {\r\n    selectIds,\r\n    selectEntities,\r\n    selectAll,\r\n    selectTotal,\r\n} = adapter.getSelectors();\r\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport { Article } from './article';\r\nimport {ArticleState, articleFeatureKey, selectAll} from './article.reducer';\r\n\r\nconst featureState = createFeatureSelector<ArticleState>(articleFeatureKey);\r\n\r\nexport const selectAllArticles = createSelector(\r\n    featureState,\r\n    selectAll,\r\n);\r\n\r\nexport const allArticleLoaded = createSelector(\r\n    featureState,\r\n    state => state.allArticlesLoaded,\r\n);\r\n\r\nexport const selectCurrentArticle = createSelector(\r\n    featureState,\r\n    state => state.currentArticle\r\n)\r\nexport const selectByModelsID = createSelector(\r\n    selectAllArticles,\r\n    (articles: Article[], id) => {\r\n        const article = articles.filter(a => a.model.id == id)\r\n        return article;\r\n    }\r\n)\r\n","import {Injectable} from '@angular/core';\r\nimport {APP_CONFIG} from '../../../../app.config';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Article} from './article';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ArticleService {\r\n    private url = `${APP_CONFIG.BASE_URL}/articles/`;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    findAll(): Observable<Article[]> {\r\n        return this.http.get<Article[]>(this.url);\r\n    }\r\n\r\n    save(item: FormData): Observable<Article> {\r\n\r\n        if (!item.get('id')) {\r\n            return this.http.post<Article>(this.url, item);\r\n        } else {\r\n            return this.update(item);\r\n        }\r\n    }\r\n\r\n    private update(item: any): Observable<Article> {\r\n        return this.http.put<Article>(`${this.url}${item.get('id')}/`, item);\r\n    }\r\n\r\n    delete(item: Article) {\r\n        return this.http.delete(`${this.url}${item.id}/`);\r\n    }\r\n}\r\n","export * from './article';\r\nexport * from './article.effects';\r\nexport * from './article.service';\r\nexport * from './article.selectors';\r\nexport * from './article.reducer';\r\nexport * from './article.actions';\r\n","export * from './model';\r\nexport * from './model.effects';\r\nexport * from './model.service';\r\nexport * from './model.selectors';\r\nexport * from './model.reducer';\r\nexport * from './model.actions';\r\n","import {createAction, props} from '@ngrx/store';\r\n\r\nimport {Model} from './model';\r\n\r\nexport const loadModels = createAction(\r\n    '[Model/API] Load Models'\r\n);\r\n\r\nexport const loadModelsSuccess = createAction(\r\n    '[Model/API] Load Models Success',\r\n    props<{ data: Model[] }>(),\r\n);\r\n\r\nexport const addModel = createAction(\r\n    '[Model/API] Add Model',\r\n    props<{ data: Model }>(),\r\n);\r\n\r\nexport const addModelSuccess = createAction(\r\n    '[Model/API] Add Model Success',\r\n    props<{ data: Model }>(),\r\n);\r\n\r\n\r\nexport const deleteModel = createAction(\r\n    '[Model/API] Delete Model',\r\n    props<{ data: Model }>(),\r\n);\r\n\r\nexport const deleteModelSuccess = createAction(\r\n    '[Model/API] Delete Model Success',\r\n    props<{ id: string}>(),\r\n);\r\n\r\nexport const selectCurrentModelSuccess = createAction(\r\n    '[Model/API] Select Current Model',\r\n    props<{ data: Model }>(),\r\n);\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\r\nimport {Store} from '@ngrx/store';\r\nimport {ModelService} from './model.service';\r\nimport {\r\n  addModel,\r\n  addModelSuccess,\r\n  deleteModel, deleteModelSuccess,\r\n  loadModels,\r\n  loadModelsSuccess,\r\n} from './model.actions';\r\nimport {filter, map, mergeMap, withLatestFrom} from 'rxjs/operators';\r\nimport {allModelLoaded} from './model.selectors';\r\n\r\n\r\n@Injectable()\r\nexport class ModelEffects {\r\n\r\n    loadModels$ = createEffect(() => this.actions$.pipe(\r\n        ofType(loadModels),\r\n        withLatestFrom(this.store.select(allModelLoaded)),\r\n        filter(([_, allLoaded]) => !allLoaded),\r\n        mergeMap(_ => this.service.findAll().pipe(\r\n            map(data => loadModelsSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    addModel$ = createEffect(() => this.actions$.pipe(\r\n        ofType(addModel),\r\n        mergeMap(action => this.service.save(action.data).pipe(\r\n            map(data => addModelSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    deleteModel$ = createEffect(() => this.actions$.pipe(\r\n        ofType(deleteModel),\r\n        mergeMap(({data}) => this.service.delete(data).pipe(\r\n            map(_ => deleteModelSuccess({id: data.id})),\r\n        )),\r\n    ));\r\n\r\n    constructor(private actions$: Actions, private store: Store<any>, private service: ModelService) {\r\n    }\r\n\r\n}\r\n","import {Action, createReducer, on} from '@ngrx/store';\r\nimport {EntityState, EntityAdapter, createEntityAdapter} from '@ngrx/entity';\r\nimport {Model} from './model';\r\nimport * as ModelActions from './model.actions';\r\n\r\nexport const modelFeatureKey = 'models';\r\n\r\nexport interface ModelState extends EntityState<Model> {\r\n    allModelsLoaded: boolean;\r\n    currentModel: Model\r\n}\r\n\r\nexport const adapter: EntityAdapter<Model> = createEntityAdapter<Model>();\r\n\r\nexport const initialState: ModelState = adapter.getInitialState({\r\n    allModelsLoaded: false,\r\n    currentModel: null\r\n});\r\n\r\nconst modelReducer = createReducer(\r\n    initialState,\r\n    on(ModelActions.addModelSuccess,\r\n        (state, action) => adapter.upsertOne(action.data, {...state, currentModel: action.data}),\r\n    ),\r\n    on(ModelActions.deleteModelSuccess,\r\n        (state, action) => adapter.removeOne(action.id, state),\r\n    ),\r\n\r\n    on(ModelActions.loadModelsSuccess,\r\n        (state, action) => adapter.addAll(action.data, state),\r\n    ),\r\n    on(ModelActions.selectCurrentModelSuccess,\r\n        (state, action) => ({...state, currentModel: action.data}),\r\n    ),\r\n);\r\n\r\nexport function reducer(state: ModelState | undefined, action: Action) {\r\n    return modelReducer(state, action);\r\n}\r\n\r\nexport const {\r\n    selectIds,\r\n    selectEntities,\r\n    selectAll,\r\n    selectTotal,\r\n} = adapter.getSelectors();\r\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport { Model } from './model';\r\nimport {ModelState, modelFeatureKey, selectAll} from './model.reducer';\r\n\r\nconst featureState = createFeatureSelector<ModelState>(modelFeatureKey);\r\n\r\nexport const selectAllModels = createSelector(\r\n    featureState,\r\n    selectAll,\r\n);\r\n\r\nexport const allModelLoaded = createSelector(\r\n    featureState,\r\n    state => state.allModelsLoaded,\r\n);\r\n\r\nexport const selectCurrentModel = createSelector(\r\n    featureState,\r\n    state => state.currentModel\r\n)\r\n\r\nexport const selectByClientID = createSelector(\r\n    selectAllModels,\r\n    (models: Model[], id) => {\r\n        const model = models.filter(m => m.client.id == id)\r\n        return model;\r\n    }\r\n)\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {APP_CONFIG} from '../../../../app.config';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Model} from './model';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ModelService {\r\n    private url = `${APP_CONFIG.BASE_URL}/models/`;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    findAll(): Observable<Model[]> {\r\n        return this.http.get<Model[]>(this.url);\r\n    }\r\n\r\n    save(item: Model): Observable<Model> {\r\n        if (!item.id) {\r\n            return this.http.post<Model>(this.url, item);\r\n        } else {\r\n            return this.update(item);\r\n        }\r\n    }\r\n\r\n    private update(item: Model): Observable<Model> {\r\n        return this.http.put<Model>(`${this.url}${item.id}/`, item);\r\n    }\r\n\r\n    delete(item: Model) {\r\n        return this.http.delete(`${this.url}${item.id}/`);\r\n    }\r\n}\r\n","import {createAction, props} from '@ngrx/store';\r\n\r\nimport {Factorycode} from './factorycode';\r\n\r\nexport const loadFactorycodes = createAction(\r\n    '[Factorycode/API] Load Factorycodes'\r\n);\r\n\r\nexport const loadFactorycodesSuccess = createAction(\r\n    '[Factorycode/API] Load Factorycodes Success',\r\n    props<{ data: Factorycode[] }>(),\r\n);\r\n\r\nexport const addFactorycode = createAction(\r\n    '[Factorycode/API] Add Factorycode',\r\n    props<{ data: Factorycode }>(),\r\n);\r\n\r\nexport const addFactorycodeSuccess = createAction(\r\n    '[Factorycode/API] Add Factorycode Success',\r\n    props<{ data: Factorycode }>(),\r\n);\r\n\r\n\r\nexport const deleteFactorycode = createAction(\r\n    '[Factorycode/API] Delete Factorycode',\r\n    props<{ data: Factorycode }>(),\r\n);\r\n\r\nexport const deleteFactorycodeSuccess = createAction(\r\n    '[Factorycode/API] Delete Factorycode Success',\r\n    props<{ id: string}>(),\r\n);\r\n\r\nexport const selectCurrentFactorycodeSuccess = createAction(\r\n    '[Factorycode/API] Select Current Factorycode',\r\n    props<{ data: Factorycode }>(),\r\n);\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\r\nimport {Store} from '@ngrx/store';\r\nimport {FactorycodeService} from './factorycode.service';\r\nimport {\r\n  addFactorycode,\r\n  addFactorycodeSuccess,\r\n  deleteFactorycode, deleteFactorycodeSuccess,\r\n  loadFactorycodes,\r\n  loadFactorycodesSuccess,\r\n} from './factorycode.actions';\r\nimport {filter, map, mergeMap, withLatestFrom} from 'rxjs/operators';\r\nimport {allFactorycodeLoaded} from './factorycode.selectors';\r\n\r\n\r\n@Injectable()\r\nexport class FactorycodeEffects {\r\n\r\n    loadFactorycodes$ = createEffect(() => this.actions$.pipe(\r\n        ofType(loadFactorycodes),\r\n        withLatestFrom(this.store.select(allFactorycodeLoaded)),\r\n        filter(([_, allLoaded]) => !allLoaded),\r\n        mergeMap(_ => this.service.findAll().pipe(\r\n            map(data => loadFactorycodesSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    addFactorycode$ = createEffect(() => this.actions$.pipe(\r\n        ofType(addFactorycode),\r\n        mergeMap(action => this.service.save(action.data).pipe(\r\n            map(data => addFactorycodeSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    deleteFactorycode$ = createEffect(() => this.actions$.pipe(\r\n        ofType(deleteFactorycode),\r\n        mergeMap(({data}) => this.service.delete(data).pipe(\r\n            map(_ => deleteFactorycodeSuccess({id: data.id})),\r\n        )),\r\n    ));\r\n\r\n    constructor(private actions$: Actions, private store: Store<any>, private service: FactorycodeService) {\r\n    }\r\n\r\n}\r\n","import {Action, createReducer, on} from '@ngrx/store';\r\nimport {EntityState, EntityAdapter, createEntityAdapter} from '@ngrx/entity';\r\nimport {Factorycode} from './factorycode';\r\nimport * as FactorycodeActions from './factorycode.actions';\r\n\r\nexport const factorycodeFeatureKey = 'factorycodes';\r\n\r\nexport interface FactorycodeState extends EntityState<Factorycode> {\r\n    allFactorycodesLoaded: boolean;\r\n    currentFactorycode: Factorycode\r\n}\r\n\r\nexport const adapter: EntityAdapter<Factorycode> = createEntityAdapter<Factorycode>();\r\n\r\nexport const initialState: FactorycodeState = adapter.getInitialState({\r\n    allFactorycodesLoaded: false,\r\n    currentFactorycode: null\r\n});\r\n\r\nconst factorycodeReducer = createReducer(\r\n    initialState,\r\n    on(FactorycodeActions.addFactorycodeSuccess,\r\n        (state, action) => adapter.upsertOne(action.data, {...state, currentFactorycode: action.data}),\r\n    ),\r\n    on(FactorycodeActions.deleteFactorycodeSuccess,\r\n        (state, action) => adapter.removeOne(action.id, state),\r\n    ),\r\n\r\n    on(FactorycodeActions.loadFactorycodesSuccess,\r\n        (state, action) => adapter.addAll(action.data, state),\r\n    ),\r\n    on(FactorycodeActions.selectCurrentFactorycodeSuccess,\r\n        (state, action) => ({...state, currentFactorycode: action.data}),\r\n    ),\r\n);\r\n\r\nexport function reducer(state: FactorycodeState | undefined, action: Action) {\r\n    return factorycodeReducer(state, action);\r\n}\r\n\r\nexport const {\r\n    selectIds,\r\n    selectEntities,\r\n    selectAll,\r\n    selectTotal,\r\n} = adapter.getSelectors();\r\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport {FactorycodeState, factorycodeFeatureKey, selectAll} from './factorycode.reducer';\r\n\r\nconst featureState = createFeatureSelector<FactorycodeState>(factorycodeFeatureKey);\r\n\r\nexport const selectAllFactorycodes = createSelector(\r\n    featureState,\r\n    selectAll,\r\n);\r\n\r\nexport const allFactorycodeLoaded = createSelector(\r\n    featureState,\r\n    state => state.allFactorycodesLoaded,\r\n);\r\n\r\nexport const selectCurrentFactorycode = createSelector(\r\n    featureState,\r\n    state => state.currentFactorycode\r\n)\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {APP_CONFIG} from '../../../../app.config';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Factorycode} from './factorycode';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class FactorycodeService {\r\n    private url = `${APP_CONFIG.BASE_URL}/factory-codes/`;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    findAll(): Observable<Factorycode[]> {\r\n        return this.http.get<Factorycode[]>(this.url);\r\n    }\r\n\r\n    save(item: Factorycode): Observable<Factorycode> {\r\n        if (!item.id) {\r\n            return this.http.post<Factorycode>(this.url, item);\r\n        } else {\r\n            return this.update(item);\r\n        }\r\n    }\r\n\r\n    private update(item: Factorycode): Observable<Factorycode> {\r\n        return this.http.put<Factorycode>(`${this.url}${item.id}/`, item);\r\n    }\r\n\r\n    delete(item: Factorycode) {\r\n        return this.http.delete(`${this.url}${item.id}/`);\r\n    }\r\n}\r\n","export * from './factorycode';\r\nexport * from './factorycode.effects';\r\nexport * from './factorycode.service';\r\nexport * from './factorycode.selectors';\r\nexport * from './factorycode.reducer';\r\nexport * from './factorycode.actions';\r\n","export * from './vendor';\r\nexport * from './vendor.effects';\r\nexport * from './vendor.service';\r\nexport * from './vendor.selectors';\r\nexport * from './vendor.reducer';\r\nexport * from './vendor.actions';\r\n","import {createAction, props} from '@ngrx/store';\r\n\r\nimport {Vendor} from './vendor';\r\n\r\nexport const loadVendors = createAction(\r\n    '[Vendor/API] Load Vendors'\r\n);\r\n\r\nexport const loadVendorsSuccess = createAction(\r\n    '[Vendor/API] Load Vendors Success',\r\n    props<{ data: Vendor[] }>(),\r\n);\r\n\r\nexport const addVendor = createAction(\r\n    '[Vendor/API] Add Vendor',\r\n    props<{ data: Vendor }>(),\r\n);\r\n\r\nexport const addVendorSuccess = createAction(\r\n    '[Vendor/API] Add Vendor Success',\r\n    props<{ data: Vendor }>(),\r\n);\r\n\r\n\r\nexport const deleteVendor = createAction(\r\n    '[Vendor/API] Delete Vendor',\r\n    props<{ data: Vendor }>(),\r\n);\r\n\r\nexport const deleteVendorSuccess = createAction(\r\n    '[Vendor/API] Delete Vendor Success',\r\n    props<{ id: string}>(),\r\n);\r\n\r\nexport const selectCurrentVendorSuccess = createAction(\r\n    '[Vendor/API] Select Current Vendor',\r\n    props<{ data: Vendor }>(),\r\n);\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\r\nimport {Store} from '@ngrx/store';\r\nimport {VendorService} from './vendor.service';\r\nimport {\r\n  addVendor,\r\n  addVendorSuccess,\r\n  deleteVendor, deleteVendorSuccess,\r\n  loadVendors,\r\n  loadVendorsSuccess,\r\n} from './vendor.actions';\r\nimport {filter, map, mergeMap, withLatestFrom} from 'rxjs/operators';\r\nimport {allVendorLoaded} from './vendor.selectors';\r\n\r\n\r\n@Injectable()\r\nexport class VendorEffects {\r\n\r\n    loadVendors$ = createEffect(() => this.actions$.pipe(\r\n        ofType(loadVendors),\r\n        withLatestFrom(this.store.select(allVendorLoaded)),\r\n        filter(([_, allLoaded]) => !allLoaded),\r\n        mergeMap(_ => this.service.findAll().pipe(\r\n            map(data => loadVendorsSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    addVendor$ = createEffect(() => this.actions$.pipe(\r\n        ofType(addVendor),\r\n        mergeMap(action => this.service.save(action.data).pipe(\r\n            map(data => addVendorSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    deleteVendor$ = createEffect(() => this.actions$.pipe(\r\n        ofType(deleteVendor),\r\n        mergeMap(({data}) => this.service.delete(data).pipe(\r\n            map(_ => deleteVendorSuccess({id: data.id})),\r\n        )),\r\n    ));\r\n\r\n    constructor(private actions$: Actions, private store: Store<any>, private service: VendorService) {\r\n    }\r\n\r\n}\r\n","import {Action, createReducer, on} from '@ngrx/store';\r\nimport {EntityState, EntityAdapter, createEntityAdapter} from '@ngrx/entity';\r\nimport {Vendor} from './vendor';\r\nimport * as VendorActions from './vendor.actions';\r\n\r\nexport const vendorFeatureKey = 'vendors';\r\n\r\nexport interface VendorState extends EntityState<Vendor> {\r\n    allVendorsLoaded: boolean;\r\n    currentVendor: Vendor\r\n}\r\n\r\nexport const adapter: EntityAdapter<Vendor> = createEntityAdapter<Vendor>();\r\n\r\nexport const initialState: VendorState = adapter.getInitialState({\r\n    allVendorsLoaded: false,\r\n    currentVendor: null\r\n});\r\n\r\nconst vendorReducer = createReducer(\r\n    initialState,\r\n    on(VendorActions.addVendorSuccess,\r\n        (state, action) => adapter.upsertOne(action.data, {...state, currentVendor: action.data}),\r\n    ),\r\n    on(VendorActions.deleteVendorSuccess,\r\n        (state, action) => adapter.removeOne(action.id, state),\r\n    ),\r\n\r\n    on(VendorActions.loadVendorsSuccess,\r\n        (state, action) => adapter.addAll(action.data, state),\r\n    ),\r\n    on(VendorActions.selectCurrentVendorSuccess,\r\n        (state, action) => ({...state, currentVendor: action.data}),\r\n    ),\r\n);\r\n\r\nexport function reducer(state: VendorState | undefined, action: Action) {\r\n    return vendorReducer(state, action);\r\n}\r\n\r\nexport const {\r\n    selectIds,\r\n    selectEntities,\r\n    selectAll,\r\n    selectTotal,\r\n} = adapter.getSelectors();\r\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport {VendorState, vendorFeatureKey, selectAll} from './vendor.reducer';\r\n\r\nconst featureState = createFeatureSelector<VendorState>(vendorFeatureKey);\r\n\r\nexport const selectAllVendors = createSelector(\r\n    featureState,\r\n    selectAll,\r\n);\r\n\r\nexport const allVendorLoaded = createSelector(\r\n    featureState,\r\n    state => state.allVendorsLoaded,\r\n);\r\n\r\nexport const selectCurrentVendor = createSelector(\r\n    featureState,\r\n    state => state.currentVendor\r\n)\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {APP_CONFIG} from '../../../../app.config';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Vendor} from './vendor';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class VendorService {\r\n    private url = `${APP_CONFIG.BASE_URL}/vendors/`;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    findAll(): Observable<Vendor[]> {\r\n        return this.http.get<Vendor[]>(this.url);\r\n    }\r\n\r\n    save(item: Vendor): Observable<Vendor> {\r\n        if (!item.id) {\r\n            return this.http.post<Vendor>(this.url, item);\r\n        } else {\r\n            return this.update(item);\r\n        }\r\n    }\r\n\r\n    private update(item: Vendor): Observable<Vendor> {\r\n        return this.http.put<Vendor>(`${this.url}${item.id}/`, item);\r\n    }\r\n\r\n    delete(item: Vendor) {\r\n        return this.http.delete(`${this.url}${item.id}/`);\r\n    }\r\n}\r\n"],"sourceRoot":""}