{"version":3,"sources":["webpack:///./src/app/features/store/settings/uom/index.ts","webpack:///./src/app/features/store/settings/uom/uom.actions.ts","webpack:///./src/app/features/store/settings/uom/uom.effects.ts","webpack:///./src/app/features/store/settings/uom/uom.reducer.ts","webpack:///./src/app/features/store/settings/uom/uom.selectors.ts","webpack:///./src/app/features/store/settings/uom/uom.service.ts","webpack:///./src/app/features/store/settings/vendor/index.ts","webpack:///./src/app/features/store/settings/vendor/vendor.actions.ts","webpack:///./src/app/features/store/settings/vendor/vendor.effects.ts","webpack:///./src/app/features/store/settings/vendor/vendor.reducer.ts","webpack:///./src/app/features/store/settings/vendor/vendor.selectors.ts","webpack:///./src/app/features/store/settings/vendor/vendor.service.ts"],"names":[],"mappings":"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","file":"default~features-merchandise-merchandise-module~features-purchaseorder-purchaseorder-module~features~ef9b20d0-es5.js","sourcesContent":["export * from './uom';\r\nexport * from './uom.effects';\r\nexport * from './uom.service';\r\nexport * from './uom.selectors';\r\nexport * from './uom.reducer';\r\nexport * from './uom.actions';\r\n","import {createAction, props} from '@ngrx/store';\r\n\r\nimport {Uom} from './uom';\r\n\r\nexport const loadUoms = createAction(\r\n    '[Uom/API] Load Uoms'\r\n);\r\n\r\nexport const loadUomsSuccess = createAction(\r\n    '[Uom/API] Load Uoms Success',\r\n    props<{ data: Uom[] }>(),\r\n);\r\n\r\nexport const addUom = createAction(\r\n    '[Uom/API] Add Uom',\r\n    props<{ data: Uom }>(),\r\n);\r\n\r\nexport const addUomSuccess = createAction(\r\n    '[Uom/API] Add Uom Success',\r\n    props<{ data: Uom }>(),\r\n);\r\n\r\n\r\nexport const deleteUom = createAction(\r\n    '[Uom/API] Delete Uom',\r\n    props<{ data: Uom }>(),\r\n);\r\n\r\nexport const deleteUomSuccess = createAction(\r\n    '[Uom/API] Delete Uom Success',\r\n    props<{ id: string}>(),\r\n);\r\n\r\nexport const selectCurrentUomSuccess = createAction(\r\n    '[Uom/API] Select Current Uom',\r\n    props<{ data: Uom }>(),\r\n);\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\r\nimport {Store} from '@ngrx/store';\r\nimport {UomService} from './uom.service';\r\nimport {\r\n  addUom,\r\n  addUomSuccess,\r\n  deleteUom, deleteUomSuccess,\r\n  loadUoms,\r\n  loadUomsSuccess,\r\n} from './uom.actions';\r\nimport {filter, map, mergeMap, withLatestFrom} from 'rxjs/operators';\r\nimport {allUomLoaded} from './uom.selectors';\r\n\r\n\r\n@Injectable()\r\nexport class UomEffects {\r\n\r\n    loadUoms$ = createEffect(() => this.actions$.pipe(\r\n        ofType(loadUoms),\r\n        withLatestFrom(this.store.select(allUomLoaded)),\r\n        filter(([_, allLoaded]) => !allLoaded),\r\n        mergeMap(_ => this.service.findAll().pipe(\r\n            map(data => loadUomsSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    addUom$ = createEffect(() => this.actions$.pipe(\r\n        ofType(addUom),\r\n        mergeMap(action => this.service.save(action.data).pipe(\r\n            map(data => addUomSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    deleteUom$ = createEffect(() => this.actions$.pipe(\r\n        ofType(deleteUom),\r\n        mergeMap(({data}) => this.service.delete(data).pipe(\r\n            map(_ => deleteUomSuccess({id: data.id})),\r\n        )),\r\n    ));\r\n\r\n    constructor(private actions$: Actions, private store: Store<any>, private service: UomService) {\r\n    }\r\n\r\n}\r\n","import {Action, createReducer, on} from '@ngrx/store';\r\nimport {EntityState, EntityAdapter, createEntityAdapter} from '@ngrx/entity';\r\nimport {Uom} from './uom';\r\nimport * as UomActions from './uom.actions';\r\n\r\nexport const uomFeatureKey = 'uoms';\r\n\r\nexport interface UomState extends EntityState<Uom> {\r\n    allUomsLoaded: boolean;\r\n    currentUom: Uom\r\n}\r\n\r\nexport const adapter: EntityAdapter<Uom> = createEntityAdapter<Uom>();\r\n\r\nexport const initialState: UomState = adapter.getInitialState({\r\n    allUomsLoaded: false,\r\n    currentUom: null\r\n});\r\n\r\nconst uomReducer = createReducer(\r\n    initialState,\r\n    on(UomActions.addUomSuccess,\r\n        (state, action) => adapter.upsertOne(action.data, {...state, currentUom: action.data}),\r\n    ),\r\n    on(UomActions.deleteUomSuccess,\r\n        (state, action) => adapter.removeOne(action.id, state),\r\n    ),\r\n\r\n    on(UomActions.loadUomsSuccess,\r\n        (state, action) => adapter.addAll(action.data, state),\r\n    ),\r\n    on(UomActions.selectCurrentUomSuccess,\r\n        (state, action) => ({...state, currentUom: action.data}),\r\n    ),\r\n);\r\n\r\nexport function reducer(state: UomState | undefined, action: Action) {\r\n    return uomReducer(state, action);\r\n}\r\n\r\nexport const {\r\n    selectIds,\r\n    selectEntities,\r\n    selectAll,\r\n    selectTotal,\r\n} = adapter.getSelectors();\r\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport {UomState, uomFeatureKey, selectAll} from './uom.reducer';\r\n\r\nconst featureState = createFeatureSelector<UomState>(uomFeatureKey);\r\n\r\nexport const selectAllUoms = createSelector(\r\n    featureState,\r\n    selectAll,\r\n);\r\n\r\nexport const allUomLoaded = createSelector(\r\n    featureState,\r\n    state => state.allUomsLoaded,\r\n);\r\n\r\nexport const selectCurrentUom = createSelector(\r\n    featureState,\r\n    state => state.currentUom\r\n)\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {APP_CONFIG} from '../../../../app.config';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Uom} from './uom';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class UomService {\r\n    private url = `${APP_CONFIG.BASE_URL}/uoms/`;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    findAll(): Observable<Uom[]> {\r\n        return this.http.get<Uom[]>(this.url);\r\n    }\r\n\r\n    save(item: Uom): Observable<Uom> {\r\n        if (!item.id) {\r\n            return this.http.post<Uom>(this.url, item);\r\n        } else {\r\n            return this.update(item);\r\n        }\r\n    }\r\n\r\n    private update(item: Uom): Observable<Uom> {\r\n        return this.http.put<Uom>(`${this.url}${item.id}/`, item);\r\n    }\r\n\r\n    delete(item: Uom) {\r\n        return this.http.delete(`${this.url}${item.id}/`);\r\n    }\r\n}\r\n","export * from './vendor';\r\nexport * from './vendor.effects';\r\nexport * from './vendor.service';\r\nexport * from './vendor.selectors';\r\nexport * from './vendor.reducer';\r\nexport * from './vendor.actions';\r\n","import {createAction, props} from '@ngrx/store';\r\n\r\nimport {Vendor} from './vendor';\r\n\r\nexport const loadVendors = createAction(\r\n    '[Vendor/API] Load Vendors'\r\n);\r\n\r\nexport const loadVendorsSuccess = createAction(\r\n    '[Vendor/API] Load Vendors Success',\r\n    props<{ data: Vendor[] }>(),\r\n);\r\n\r\nexport const addVendor = createAction(\r\n    '[Vendor/API] Add Vendor',\r\n    props<{ data: Vendor }>(),\r\n);\r\n\r\nexport const addVendorSuccess = createAction(\r\n    '[Vendor/API] Add Vendor Success',\r\n    props<{ data: Vendor }>(),\r\n);\r\n\r\n\r\nexport const deleteVendor = createAction(\r\n    '[Vendor/API] Delete Vendor',\r\n    props<{ data: Vendor }>(),\r\n);\r\n\r\nexport const deleteVendorSuccess = createAction(\r\n    '[Vendor/API] Delete Vendor Success',\r\n    props<{ id: string}>(),\r\n);\r\n\r\nexport const selectCurrentVendorSuccess = createAction(\r\n    '[Vendor/API] Select Current Vendor',\r\n    props<{ data: Vendor }>(),\r\n);\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\r\nimport {Store} from '@ngrx/store';\r\nimport {VendorService} from './vendor.service';\r\nimport {\r\n  addVendor,\r\n  addVendorSuccess,\r\n  deleteVendor, deleteVendorSuccess,\r\n  loadVendors,\r\n  loadVendorsSuccess,\r\n} from './vendor.actions';\r\nimport {filter, map, mergeMap, withLatestFrom} from 'rxjs/operators';\r\nimport {allVendorLoaded} from './vendor.selectors';\r\n\r\n\r\n@Injectable()\r\nexport class VendorEffects {\r\n\r\n    loadVendors$ = createEffect(() => this.actions$.pipe(\r\n        ofType(loadVendors),\r\n        withLatestFrom(this.store.select(allVendorLoaded)),\r\n        filter(([_, allLoaded]) => !allLoaded),\r\n        mergeMap(_ => this.service.findAll().pipe(\r\n            map(data => loadVendorsSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    addVendor$ = createEffect(() => this.actions$.pipe(\r\n        ofType(addVendor),\r\n        mergeMap(action => this.service.save(action.data).pipe(\r\n            map(data => addVendorSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    deleteVendor$ = createEffect(() => this.actions$.pipe(\r\n        ofType(deleteVendor),\r\n        mergeMap(({data}) => this.service.delete(data).pipe(\r\n            map(_ => deleteVendorSuccess({id: data.id})),\r\n        )),\r\n    ));\r\n\r\n    constructor(private actions$: Actions, private store: Store<any>, private service: VendorService) {\r\n    }\r\n\r\n}\r\n","import {Action, createReducer, on} from '@ngrx/store';\r\nimport {EntityState, EntityAdapter, createEntityAdapter} from '@ngrx/entity';\r\nimport {Vendor} from './vendor';\r\nimport * as VendorActions from './vendor.actions';\r\n\r\nexport const vendorFeatureKey = 'vendors';\r\n\r\nexport interface VendorState extends EntityState<Vendor> {\r\n    allVendorsLoaded: boolean;\r\n    currentVendor: Vendor\r\n}\r\n\r\nexport const adapter: EntityAdapter<Vendor> = createEntityAdapter<Vendor>();\r\n\r\nexport const initialState: VendorState = adapter.getInitialState({\r\n    allVendorsLoaded: false,\r\n    currentVendor: null\r\n});\r\n\r\nconst vendorReducer = createReducer(\r\n    initialState,\r\n    on(VendorActions.addVendorSuccess,\r\n        (state, action) => adapter.upsertOne(action.data, {...state, currentVendor: action.data}),\r\n    ),\r\n    on(VendorActions.deleteVendorSuccess,\r\n        (state, action) => adapter.removeOne(action.id, state),\r\n    ),\r\n\r\n    on(VendorActions.loadVendorsSuccess,\r\n        (state, action) => adapter.addAll(action.data, state),\r\n    ),\r\n    on(VendorActions.selectCurrentVendorSuccess,\r\n        (state, action) => ({...state, currentVendor: action.data}),\r\n    ),\r\n);\r\n\r\nexport function reducer(state: VendorState | undefined, action: Action) {\r\n    return vendorReducer(state, action);\r\n}\r\n\r\nexport const {\r\n    selectIds,\r\n    selectEntities,\r\n    selectAll,\r\n    selectTotal,\r\n} = adapter.getSelectors();\r\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport {VendorState, vendorFeatureKey, selectAll} from './vendor.reducer';\r\n\r\nconst featureState = createFeatureSelector<VendorState>(vendorFeatureKey);\r\n\r\nexport const selectAllVendors = createSelector(\r\n    featureState,\r\n    selectAll,\r\n);\r\n\r\nexport const allVendorLoaded = createSelector(\r\n    featureState,\r\n    state => state.allVendorsLoaded,\r\n);\r\n\r\nexport const selectCurrentVendor = createSelector(\r\n    featureState,\r\n    state => state.currentVendor\r\n)\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {APP_CONFIG} from '../../../../app.config';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Vendor} from './vendor';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class VendorService {\r\n    private url = `${APP_CONFIG.BASE_URL}/vendors/`;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    findAll(): Observable<Vendor[]> {\r\n        return this.http.get<Vendor[]>(this.url);\r\n    }\r\n\r\n    save(item: Vendor): Observable<Vendor> {\r\n        if (!item.id) {\r\n            return this.http.post<Vendor>(this.url, item);\r\n        } else {\r\n            return this.update(item);\r\n        }\r\n    }\r\n\r\n    private update(item: Vendor): Observable<Vendor> {\r\n        return this.http.put<Vendor>(`${this.url}${item.id}/`, item);\r\n    }\r\n\r\n    delete(item: Vendor) {\r\n        return this.http.delete(`${this.url}${item.id}/`);\r\n    }\r\n}\r\n"],"sourceRoot":""}