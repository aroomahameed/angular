{"version":3,"sources":["webpack:///./node_modules/@ngrx/entity/fesm2015/entity.js","webpack:///./src/app/shared/custom-tables/table/table.component.html","webpack:///./src/app/shared/forms/checkbox/checkbox.component.html","webpack:///./src/app/shared/forms/form/form.component.html","webpack:///./src/app/shared/forms/input/input.component.html","webpack:///./src/app/shared/forms/select/select.component.html","webpack:///./src/app/shared/panels/crud-panel/crud-panel-form/crud-panel-form.component.html","webpack:///./src/app/shared/panels/crud-panel/crud-panel.component.html","webpack:///./src/app/shared/panels/panel/panel.component.html","webpack:///./src/app/shared/custom-tables/custom-tables.module.ts","webpack:///./src/app/shared/custom-tables/table/table.component.ts","webpack:///./src/app/shared/forms/checkbox/checkbox.component.ts","webpack:///./src/app/shared/forms/form/form.component.ts","webpack:///./src/app/shared/forms/forms.module.ts","webpack:///./src/app/shared/forms/input/input.component.ts","webpack:///./src/app/shared/forms/select/select.component.ts","webpack:///./src/app/shared/panels/crud-panel/crud-panel-form/crud-panel-form.component.css","webpack:///./src/app/shared/panels/crud-panel/crud-panel-form/crud-panel-form.component.ts","webpack:///./src/app/shared/panels/crud-panel/crud-panel.component.css","webpack:///./src/app/shared/panels/crud-panel/crud-panel.component.ts","webpack:///./src/app/shared/panels/panel/panel.component.ts","webpack:///./src/app/shared/panels/panels.module.ts","webpack:///./src/app/shared/shared.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAC6C;AACH;;AAE1C;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,iDAAiD;AACjD;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,0BAA0B,kEAAc;AACxC,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,6BAA6B,EAAE;AAC/B,mBAAmB,EAAE;AACrB,4BAA4B,kEAAc;AAC1C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kEAAc;AACrC,4BAA4B,kEAAc;AAC1C,uBAAuB,kEAAc;AACrC,yBAAyB,kEAAc;AACvC;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,sCAAsC;AACtC;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mCAAmC;AACnC;AACA;AACA,mCAAmC,UAAU,uCAAuC;AACpF;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,QAAQ,+DAAS;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,+BAA+B;AAC/B;AACA,wBAAwB;AACxB,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,wCAAwC;AACxC,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,KAAK;AACf;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,wCAAwC;AACxC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY;AACZ;AACA,yCAAyC;AACzC,WAAW,yBAAyB,kBAAkB;AACtD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,oCAAoC;AACpC,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,0BAA0B;AAC1B,sBAAsB;AACtB;;AAEA;AACA;AACA,cAAc,uFAAu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","file":"default~features-about-about-module~features-article-article-module~features-customer-customer-modul~ebf54026-es2015.js","sourcesContent":["/**\n * @license NgRx 8.6.0\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\nimport { createSelector } from '@ngrx/store';\nimport { isDevMode } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template V\n * @return {?}\n */\nfunction getInitialEntityState() {\n    return {\n        ids: [],\n        entities: {},\n    };\n}\n/**\n * @template V\n * @return {?}\n */\nfunction createInitialStateFactory() {\n    /**\n     * @param {?=} additionalState\n     * @return {?}\n     */\n    function getInitialState(additionalState = {}) {\n        return Object.assign(getInitialEntityState(), additionalState);\n    }\n    return { getInitialState };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @return {?}\n */\nfunction createSelectorsFactory() {\n    /**\n     * @param {?=} selectState\n     * @return {?}\n     */\n    function getSelectors(selectState) {\n        /** @type {?} */\n        const selectIds = (/**\n         * @param {?} state\n         * @return {?}\n         */\n        (state) => state.ids);\n        /** @type {?} */\n        const selectEntities = (/**\n         * @param {?} state\n         * @return {?}\n         */\n        (state) => state.entities);\n        /** @type {?} */\n        const selectAll = createSelector(selectIds, selectEntities, (/**\n         * @param {?} ids\n         * @param {?} entities\n         * @return {?}\n         */\n        (ids, entities) => ids.map((/**\n         * @param {?} id\n         * @return {?}\n         */\n        (id) => ((/** @type {?} */ (entities)))[id]))));\n        /** @type {?} */\n        const selectTotal = createSelector(selectIds, (/**\n         * @param {?} ids\n         * @return {?}\n         */\n        ids => ids.length));\n        if (!selectState) {\n            return {\n                selectIds,\n                selectEntities,\n                selectAll,\n                selectTotal,\n            };\n        }\n        return {\n            selectIds: createSelector(selectState, selectIds),\n            selectEntities: createSelector(selectState, selectEntities),\n            selectAll: createSelector(selectState, selectAll),\n            selectTotal: createSelector(selectState, selectTotal),\n        };\n    }\n    return { getSelectors };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst DidMutate = {\n    EntitiesOnly: 0,\n    Both: 1,\n    None: 2,\n};\nDidMutate[DidMutate.EntitiesOnly] = 'EntitiesOnly';\nDidMutate[DidMutate.Both] = 'Both';\nDidMutate[DidMutate.None] = 'None';\n/**\n * @template V, R\n * @param {?} mutator\n * @return {?}\n */\nfunction createStateOperator(mutator) {\n    return (/**\n     * @template S\n     * @param {?} arg\n     * @param {?} state\n     * @return {?}\n     */\n    function operation(arg, state) {\n        /** @type {?} */\n        const clonedEntityState = {\n            ids: [...state.ids],\n            entities: Object.assign({}, state.entities),\n        };\n        /** @type {?} */\n        const didMutate = mutator(arg, clonedEntityState);\n        if (didMutate === DidMutate.Both) {\n            return Object.assign({}, state, clonedEntityState);\n        }\n        if (didMutate === DidMutate.EntitiesOnly) {\n            return Object.assign({}, state, { entities: clonedEntityState.entities });\n        }\n        return state;\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} entity\n * @param {?} selectId\n * @return {?}\n */\nfunction selectIdValue(entity, selectId) {\n    /** @type {?} */\n    const key = selectId(entity);\n    if (isDevMode() && key === undefined) {\n        console.warn('@ngrx/entity: The entity passed to the `selectId` implementation returned undefined.', 'You should probably provide your own `selectId` implementation.', 'The entity that was passed:', entity, 'The `selectId` implementation:', selectId.toString());\n    }\n    return key;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} selectId\n * @return {?}\n */\nfunction createUnsortedStateAdapter(selectId) {\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function addOneMutably(entity, state) {\n        /** @type {?} */\n        const key = selectIdValue(entity, selectId);\n        if (key in state.entities) {\n            return DidMutate.None;\n        }\n        state.ids.push(key);\n        state.entities[key] = entity;\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function addManyMutably(entities, state) {\n        /** @type {?} */\n        let didMutate = false;\n        for (const entity of entities) {\n            didMutate = addOneMutably(entity, state) !== DidMutate.None || didMutate;\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function addAllMutably(entities, state) {\n        state.ids = [];\n        state.entities = {};\n        addManyMutably(entities, state);\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} key\n     * @param {?} state\n     * @return {?}\n     */\n    function removeOneMutably(key, state) {\n        return removeManyMutably([key], state);\n    }\n    /**\n     * @param {?} keysOrPredicate\n     * @param {?} state\n     * @return {?}\n     */\n    function removeManyMutably(keysOrPredicate, state) {\n        /** @type {?} */\n        const keys = keysOrPredicate instanceof Array\n            ? keysOrPredicate\n            : state.ids.filter((/**\n             * @param {?} key\n             * @return {?}\n             */\n            (key) => keysOrPredicate(state.entities[key])));\n        /** @type {?} */\n        const didMutate = keys\n            .filter((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => key in state.entities))\n            .map((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => delete state.entities[key])).length > 0;\n        if (didMutate) {\n            state.ids = state.ids.filter((/**\n             * @param {?} id\n             * @return {?}\n             */\n            (id) => id in state.entities));\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n    }\n    /**\n     * @template S\n     * @param {?} state\n     * @return {?}\n     */\n    function removeAll(state) {\n        return Object.assign({}, state, {\n            ids: [],\n            entities: {},\n        });\n    }\n    /**\n     * @param {?} keys\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function takeNewKey(keys, update, state) {\n        /** @type {?} */\n        const original = state.entities[update.id];\n        /** @type {?} */\n        const updated = Object.assign({}, original, update.changes);\n        /** @type {?} */\n        const newKey = selectIdValue(updated, selectId);\n        /** @type {?} */\n        const hasNewKey = newKey !== update.id;\n        if (hasNewKey) {\n            keys[update.id] = newKey;\n            delete state.entities[update.id];\n        }\n        state.entities[newKey] = updated;\n        return hasNewKey;\n    }\n    /**\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    /**\n     * @param {?} updates\n     * @param {?} state\n     * @return {?}\n     */\n    function updateManyMutably(updates, state) {\n        /** @type {?} */\n        const newKeys = {};\n        updates = updates.filter((/**\n         * @param {?} update\n         * @return {?}\n         */\n        update => update.id in state.entities));\n        /** @type {?} */\n        const didMutateEntities = updates.length > 0;\n        if (didMutateEntities) {\n            /** @type {?} */\n            const didMutateIds = updates.filter((/**\n             * @param {?} update\n             * @return {?}\n             */\n            update => takeNewKey(newKeys, update, state))).length > 0;\n            if (didMutateIds) {\n                state.ids = state.ids.map((/**\n                 * @param {?} id\n                 * @return {?}\n                 */\n                (id) => newKeys[id] || id));\n                return DidMutate.Both;\n            }\n            else {\n                return DidMutate.EntitiesOnly;\n            }\n        }\n        return DidMutate.None;\n    }\n    /**\n     * @param {?} map\n     * @param {?} state\n     * @return {?}\n     */\n    function mapMutably(map, state) {\n        /** @type {?} */\n        const changes = state.ids.reduce((/**\n         * @param {?} changes\n         * @param {?} id\n         * @return {?}\n         */\n        (changes, id) => {\n            /** @type {?} */\n            const change = map(state.entities[id]);\n            if (change !== state.entities[id]) {\n                changes.push({ id, changes: change });\n            }\n            return changes;\n        }), []);\n        /** @type {?} */\n        const updates = changes.filter((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ id }) => id in state.entities));\n        return updateManyMutably(updates, state);\n    }\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertManyMutably(entities, state) {\n        /** @type {?} */\n        const added = [];\n        /** @type {?} */\n        const updated = [];\n        for (const entity of entities) {\n            /** @type {?} */\n            const id = selectIdValue(entity, selectId);\n            if (id in state.entities) {\n                updated.push({ id, changes: entity });\n            }\n            else {\n                added.push(entity);\n            }\n        }\n        /** @type {?} */\n        const didMutateByUpdated = updateManyMutably(updated, state);\n        /** @type {?} */\n        const didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n    }\n    return {\n        removeAll,\n        addOne: createStateOperator(addOneMutably),\n        addMany: createStateOperator(addManyMutably),\n        addAll: createStateOperator(addAllMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n        removeOne: createStateOperator(removeOneMutably),\n        removeMany: createStateOperator(removeManyMutably),\n        map: createStateOperator(mapMutably),\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} selectId\n * @param {?} sort\n * @return {?}\n */\nfunction createSortedStateAdapter(selectId, sort) {\n    const { removeOne, removeMany, removeAll } = createUnsortedStateAdapter(selectId);\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function addOneMutably(entity, state) {\n        return addManyMutably([entity], state);\n    }\n    /**\n     * @param {?} newModels\n     * @param {?} state\n     * @return {?}\n     */\n    function addManyMutably(newModels, state) {\n        /** @type {?} */\n        const models = newModels.filter((/**\n         * @param {?} model\n         * @return {?}\n         */\n        model => !(selectIdValue(model, selectId) in state.entities)));\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            merge(models, state);\n            return DidMutate.Both;\n        }\n    }\n    /**\n     * @param {?} models\n     * @param {?} state\n     * @return {?}\n     */\n    function addAllMutably(models, state) {\n        state.entities = {};\n        state.ids = [];\n        addManyMutably(models, state);\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    /**\n     * @param {?} models\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function takeUpdatedModel(models, update, state) {\n        if (!(update.id in state.entities)) {\n            return false;\n        }\n        /** @type {?} */\n        const original = state.entities[update.id];\n        /** @type {?} */\n        const updated = Object.assign({}, original, update.changes);\n        /** @type {?} */\n        const newKey = selectIdValue(updated, selectId);\n        delete state.entities[update.id];\n        models.push(updated);\n        return newKey !== update.id;\n    }\n    /**\n     * @param {?} updates\n     * @param {?} state\n     * @return {?}\n     */\n    function updateManyMutably(updates, state) {\n        /** @type {?} */\n        const models = [];\n        /** @type {?} */\n        const didMutateIds = updates.filter((/**\n         * @param {?} update\n         * @return {?}\n         */\n        update => takeUpdatedModel(models, update, state))).length >\n            0;\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            /** @type {?} */\n            const originalIds = state.ids;\n            /** @type {?} */\n            const updatedIndexes = [];\n            state.ids = state.ids.filter((/**\n             * @param {?} id\n             * @param {?} index\n             * @return {?}\n             */\n            (id, index) => {\n                if (id in state.entities) {\n                    return true;\n                }\n                else {\n                    updatedIndexes.push(index);\n                    return false;\n                }\n            }));\n            merge(models, state);\n            if (!didMutateIds &&\n                updatedIndexes.every((/**\n                 * @param {?} i\n                 * @return {?}\n                 */\n                (i) => state.ids[i] === originalIds[i]))) {\n                return DidMutate.EntitiesOnly;\n            }\n            else {\n                return DidMutate.Both;\n            }\n        }\n    }\n    /**\n     * @param {?} updatesOrMap\n     * @param {?} state\n     * @return {?}\n     */\n    function mapMutably(updatesOrMap, state) {\n        /** @type {?} */\n        const updates = state.ids.reduce((/**\n         * @param {?} changes\n         * @param {?} id\n         * @return {?}\n         */\n        (changes, id) => {\n            /** @type {?} */\n            const change = updatesOrMap(state.entities[id]);\n            if (change !== state.entities[id]) {\n                changes.push({ id, changes: change });\n            }\n            return changes;\n        }), []);\n        return updateManyMutably(updates, state);\n    }\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertManyMutably(entities, state) {\n        /** @type {?} */\n        const added = [];\n        /** @type {?} */\n        const updated = [];\n        for (const entity of entities) {\n            /** @type {?} */\n            const id = selectIdValue(entity, selectId);\n            if (id in state.entities) {\n                updated.push({ id, changes: entity });\n            }\n            else {\n                added.push(entity);\n            }\n        }\n        /** @type {?} */\n        const didMutateByUpdated = updateManyMutably(updated, state);\n        /** @type {?} */\n        const didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n    }\n    /**\n     * @param {?} models\n     * @param {?} state\n     * @return {?}\n     */\n    function merge(models, state) {\n        models.sort(sort);\n        /** @type {?} */\n        const ids = [];\n        /** @type {?} */\n        let i = 0;\n        /** @type {?} */\n        let j = 0;\n        while (i < models.length && j < state.ids.length) {\n            /** @type {?} */\n            const model = models[i];\n            /** @type {?} */\n            const modelId = selectIdValue(model, selectId);\n            /** @type {?} */\n            const entityId = state.ids[j];\n            /** @type {?} */\n            const entity = state.entities[entityId];\n            if (sort(model, entity) <= 0) {\n                ids.push(modelId);\n                i++;\n            }\n            else {\n                ids.push(entityId);\n                j++;\n            }\n        }\n        if (i < models.length) {\n            state.ids = ids.concat(models.slice(i).map(selectId));\n        }\n        else {\n            state.ids = ids.concat(state.ids.slice(j));\n        }\n        models.forEach((/**\n         * @param {?} model\n         * @param {?} i\n         * @return {?}\n         */\n        (model, i) => {\n            state.entities[selectId(model)] = model;\n        }));\n    }\n    return {\n        removeOne,\n        removeMany,\n        removeAll,\n        addOne: createStateOperator(addOneMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        addAll: createStateOperator(addAllMutably),\n        addMany: createStateOperator(addManyMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n        map: createStateOperator(mapMutably),\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?=} options\n * @return {?}\n */\nfunction createEntityAdapter(options = {}) {\n    const { selectId, sortComparer } = Object.assign({ sortComparer: false, selectId: (/**\n         * @param {?} instance\n         * @return {?}\n         */\n        (instance) => instance.id) }, options);\n    /** @type {?} */\n    const stateFactory = createInitialStateFactory();\n    /** @type {?} */\n    const selectorsFactory = createSelectorsFactory();\n    /** @type {?} */\n    const stateAdapter = sortComparer\n        ? createSortedStateAdapter(selectId, sortComparer)\n        : createUnsortedStateAdapter(selectId);\n    return Object.assign({ selectId,\n        sortComparer }, stateFactory, selectorsFactory, stateAdapter);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @abstract\n * @template T\n */\nclass Dictionary {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { createEntityAdapter, Dictionary };\n//# sourceMappingURL=entity.js.map\n","module.exports = \"<div class=\\\"table-container table-responsive-md my-3\\\" *ngIf=\\\"_items as dataItems\\\">\\n    <div class=\\\"row mb-3\\\">\\n        <div class=\\\"col-sm-12 col-md-5 col-lg-3\\\">\\n            <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <label for=\\\"search\\\" class=\\\"input-group-text\\\"><i class=\\\"fal fa-search\\\"></i></label>\\n                </div>\\n                <input id=\\\"search\\\" type=\\\"text\\\" (keyup)=\\\"onSearch($event)\\\"\\n                    class=\\\"form-control border-top-left-radius-0 border-bottom-left-radius-0 ml-0 width-lg shadow-inset-1\\\"\\n                    placeholder=\\\"Search\\\">\\n            </div>\\n        </div>\\n\\n        <div class=\\\"col-sm-12 col-md-5 col-lg-3 ml-md-auto mt-2 mt-md-0\\\" style=\\\"max-width: 200px\\\">\\n            <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <label for=\\\"select_items\\\" class=\\\"input-group-text\\\">Show</label>\\n                </div>\\n                <select (change)=\\\"onItemCountChange($event)\\\" id=\\\"select_items\\\" name=\\\"dt-basic-example_length\\\"\\n                    aria-controls=\\\"dt-basic-example\\\" class=\\\"form-control custom-select\\\">\\n                    <option value=\\\"10\\\">10</option>\\n                    <option value=\\\"15\\\">15</option>\\n                    <option value=\\\"25\\\">25</option>\\n                    <option value=\\\"50\\\">50</option>\\n                    <option value=\\\"100\\\">100</option>\\n                    <option value=\\\"-1\\\">All</option>\\n                </select>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"btn btn-danger\\\" *ngIf=\\\"selectedItems.length > 0\\\" (click)=\\\"onDeleteMany()\\\">Delete\\n                {{selectedItems.length}} {{selectedItems.length > 1 ? 'Items' : 'Item'}}</div>\\n        </div>\\n    </div>\\n\\n    <table class=\\\"table table-hover table-stripped table-bordered {{tableClasses}}\\\">\\n        <thead class=\\\"{{headerClasses}} text-white\\\">\\n            <tr>\\n                <th style=\\\"width: 70px\\\" class=\\\"text-center\\\" *ngIf=\\\"selectable\\\">\\n                    <div class=\\\"custom-control custom-checkbox\\\">\\n                        <input class=\\\"custom-control-input\\\" id=\\\"select_all\\\" type=\\\"checkbox\\\"\\n                            (change)=\\\"onSelectAll($event, dataItems)\\\">\\n                        <label class=\\\"custom-control-label\\\" for=\\\"select_all\\\"></label>\\n                    </div>\\n\\n                </th>\\n                <th style=\\\"width: 100px; text-align: center\\\">Sr</th>\\n                <th (click)=\\\"onSort(d)\\\" *ngFor=\\\"let d of columns\\\" id=\\\"{{d.value}}\\\" [ngStyle]=\\\"{'width': d.bool ? '100px' : '', 'text-align': d.bool ? 'center' : (d.align ? d.align : '')}\\\">\\n                    <span (click)=\\\"onSort(d)\\\" class=\\\"d-inline-block\\\">{{d.title}}</span>\\n                    <i [ngClass]=\\\"{'fa-angle-up': d.sort === 'asc', 'fa-angle-down': d.sort === 'desc' }\\\"\\n                        class=\\\"fal text-white-50 ml-2\\\"></i>\\n                </th>\\n                <th *ngIf=\\\"showActions()\\\">Actions</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"let item of dataItems | slice:startIndex:endIndex; let i = index\\\">\\n                <td style=\\\"width: 70px\\\" class=\\\"text-center\\\" *ngIf=\\\"selectable\\\">\\n                    <div class=\\\"custom-control custom-checkbox\\\">\\n                        <input class=\\\"custom-control-input\\\" id=\\\"select_item_{{item.name}}\\\" type=\\\"checkbox\\\"\\n                            [value]=\\\"item\\\" (change)=\\\"onItemSelect(item)\\\" [checked]=\\\"isItemSelected(item)\\\">\\n                        <label class=\\\"custom-control-label\\\" for=\\\"select_item_{{item.name}}\\\"></label>\\n                    </div>\\n\\n                </td>\\n             \\n                <td  style=\\\"width: 100px; text-align: center\\\">{{startIndex + i + 1}}</td>\\n                <td\\n                        *ngFor=\\\"let d of columns\\\"\\n                        (click)=\\\"d.clickable ? onClick(item) : null\\\"\\n                        [ngStyle]=\\\"{'width': d.bool ? '100px' : (d.width ? d.width+'px' : ''),\\n                        'text-align': d.bool ? 'center' : (d.align ? d.align : ''), 'cursor': d.clickable ? 'pointer': ''}\\\">\\n                    <ng-container *ngIf=\\\"d.bool;else second\\\">\\n                        <span class=\\\"badge\\\" \\n                            [ngClass]=\\\"{'badge-success': item[d.value], 'badge-secondary' : !item[d.value]}\\\">\\n                            {{item[d.value] ? (d.boolText ? d.boolText.yes : 'Active') : (d.boolText ? d.boolText.no : 'In-Active')}}\\n                        </span>\\n                    </ng-container>\\n                    <ng-template #second>\\n                        <ng-container *ngIf=\\\"d.image;else third\\\">\\n                            <img src=\\\"{{item[d.value]}}\\\" alt=\\\"{{d.value}}\\\"  class=\\\"rounded-circle\\\" style=\\\"width: 50px; height: 50px\\\">\\n                            <!-- <img src=\\\"{{item[d.name]}}\\\" alt=\\\"{{d.name}}\\\" class=\\\"rounded-circle\\\" style=\\\"width: 50px; height: 50px\\\"> -->\\n                        </ng-container>\\n                    </ng-template>\\n                    <ng-template #third>\\n                        {{ d.date\\n                            ? (getName(item, d.value) | date: d.dateFormat ? d.dateFormat : 'MMM dd , yyyy')\\n                            : (d.money ? (getName(item, d.value) | number) : getName(item, d.value))\\n                        }}\\n                    </ng-template>\\n\\n                </td>\\n\\n                <td *ngIf=\\\"showActions()\\\" style=\\\"width: 150px; text-align: center\\\">\\n                    <!-- <ng-content select=\\\"[buttons]\\\"></ng-content> -->\\n                    <button *ngIf=\\\"View\\\" (click)=\\\"onView(item)\\\" class=\\\"btn btn-success badge mr-2\\\" [tooltip]=\\\"ViewToolTip\\\">\\n                        <i class=\\\"fal fa-eye px-2 py-1\\\"></i>\\n                    </button>\\n                    <button *ngIf=\\\"createNext\\\" (click)=\\\"onCreateNext(item)\\\" class=\\\"btn btn-warning badge mr-2\\\" [tooltip]=\\\"createNextToolTip\\\">\\n                        <i class=\\\"fal fa-plus px-2 py-1\\\"></i>\\n                    </button>\\n                    <button *ngIf=\\\"editable\\\" (click)=\\\"onEdit(item)\\\" class=\\\"btn btn-info badge\\\" tooltip=\\\"edit\\\"><i\\n                            class=\\\"fal fa-edit px-2 py-1\\\"></i></button>\\n                    <button *ngIf=\\\"deletable\\\" (click)=\\\"onDelete(item)\\\" class=\\\"btn btn-danger badge ml-2\\\" tooltip=\\\"delete\\\"><i\\n                            class=\\\"fal fa-trash px-2 py-1\\\"></i></button>\\n                </td>\\n\\n            </tr>\\n        </tbody>\\n    </table>\\n\\n    <div class=\\\"row\\\">\\n\\n        <div class=\\\"col-md-6 ml-auto d-flex justify-content-end\\\" *ngIf=\\\"totalItems / itemsPerPage > 1\\\">\\n            <pagination [boundaryLinks]=\\\"true\\\" [itemsPerPage]=\\\"itemsPerPage\\\" [totalItems]=\\\"totalItems\\\" [maxSize]=\\\"5\\\"\\n                (numPages)=\\\"numPages = $event\\\" (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\"\\n                nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n            </pagination>\\n        </div>\\n    </div>\\n\\n</div>\\n\"","module.exports = \"<div class=\\\"form-group row\\\">\\n    <div class=\\\"col-md-2\\\">\\n        <label>{{label}}</label>\\n    </div>\\n    <div class=\\\"custom-control custom-checkbox col-md-10\\\">\\n        <input #input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" [id]=\\\"id\\\" [formControl]=\\\"control\\\">\\n        <label class=\\\"custom-control-label\\\" [for]=\\\"id\\\">{{input.checked ? checkedLabel : unCheckedLabel}}</label>\\n    </div>\\n</div>\\n\"","module.exports = \"<form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <div class=\\\"row mb-3\\\" *ngFor=\\\"let d of data\\\">\\n    <div [class]=\\\"columns(d.row)\\\" *ngFor=\\\"let row of d.row\\\">\\n      <smart-input\\n        *ngIf=\\\"\\n          !row.type ||\\n          row.type === 'text' ||\\n          row.type === 'number' ||\\n          row.type === 'email' ||\\n          row.type === 'date'\\n        \\\"\\n        [label]=\\\"row.label\\\"\\n        [formControlName]=\\\"row.name\\\"\\n        [type]=\\\"row.type\\\"\\n      ></smart-input>\\n      <smart-checkbox\\n        *ngIf=\\\"row.type && (row.type === 'checkbox' || row.type === 'check')\\\"\\n        [checkedLabel]=\\\"row.checkedLabel ? row.checkedLabel : 'Active'\\\"\\n        [unCheckedLabel]=\\\"row.unCheckedLabel ? row.unCheckedLabel : 'In-Active'\\\"\\n        [formControlName]=\\\"row.name\\\"\\n        [label]=\\\"row.label\\\"\\n      ></smart-checkbox>\\n      <smart-select\\n        *ngIf=\\\"row.type && (row.type === 'select' || row.type === 'combobox')\\\"\\n        [formControlName]=\\\"row.name\\\"\\n        [items]=\\\"row.items\\\"\\n        [label]=\\\"row.label\\\"\\n      ></smart-select>\\n    </div>\\n  </div>\\n\\n  <div\\n    class=\\\"border-faded border-left-0 border-right-0 border-bottom-0 d-flex flex-row align-items-center\\\"\\n  >\\n    <button\\n      class=\\\"btn btn-primary ml-auto waves-effect waves-themed mt-2\\\"\\n      type=\\\"submit\\\"\\n    >\\n      Submit\\n    </button>\\n    <button\\n      class=\\\"btn btn-secondary ml-2 waves-effect waves-themed mt-2\\\"\\n      type=\\\"reset\\\" (click)=\\\"onClear()\\\"\\n    >\\n      Clear\\n    </button>\\n  </div>\\n</form>\\n\"","module.exports = \"<div class=\\\"form-group\\\">\\n  <label class=\\\"form-label\\\" [for]=\\\"id\\\">{{ label }}</label>\\n  <input\\n    [type]=\\\"type\\\"\\n    [formControl]=\\\"control\\\"\\n    class=\\\"form-control {{\\n      control.invalid && control.touched && control.dirty ? 'is-invalid' : ''\\n    }}\\\"\\n    [id]=\\\"id\\\"\\n    [value]=\\\"\\\"\\n   \\n  />\\n  <div class=\\\"invalid-feedback\\\">\\n    <span *ngIf=\\\"control.errors && control.errors['max']\\\"\\n      >{{ label }} must be less than {{ control.errors[\\\"max\\\"][\\\"max\\\"] }}</span\\n    >\\n    <span *ngIf=\\\"control.errors && control.errors['min']\\\"\\n      >{{ label }} must be greater than {{ control.errors[\\\"min\\\"][\\\"min\\\"] }}</span\\n    >\\n    <span *ngIf=\\\"control.errors && control.errors['email']\\\"\\n      >{{ label }} must be a valid email</span\\n    >\\n    <span *ngIf=\\\"control.errors && control.errors['required']\\\"\\n      >{{ error }}</span\\n    >\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"form-group\\\">\\n  <label class=\\\"form-label\\\" [for]=\\\"id\\\">{{ label }}</label>\\n  <select\\n    (change)=\\\"onChange($event)\\\"\\n    [formControl]=\\\"control\\\"\\n    class=\\\"form-control {{\\n      control.invalid && control.touched && control.dirty ? 'is-invalid' : ''\\n    }}\\\"\\n    [id]=\\\"id\\\"\\n  >\\n  <option value=\\\"null\\\">Select an Option</option>\\n  <option *ngFor=\\\"let item of items | async\\\" [value]='item.id'>{{getName(item)}}</option>\\n  </select>\\n  <div class=\\\"invalid-feedback\\\">\\n    <span *ngIf=\\\"control.errors && control.errors['max']\\\"\\n      >{{ label }} must be less than {{ control.errors[\\\"max\\\"][\\\"max\\\"] }}</span\\n    >\\n    <span *ngIf=\\\"control.errors && control.errors['min']\\\"\\n      >{{ label }} must be greater than {{ control.errors[\\\"min\\\"][\\\"min\\\"] }}</span\\n    >\\n    <span *ngIf=\\\"control.errors && control.errors['email']\\\"\\n      >{{ label }} must be a valid email</span\\n    >\\n    <span *ngIf=\\\"control.errors && control.errors['required']\\\">{{\\n      error\\n    }}</span>\\n  </div>\\n</div>\\n\"","module.exports = \"<smart-modal [title]=\\\"title\\\">\\n    <smart-form body [data]=\\\"form\\\" (submitEvt)=\\\"onSubmit($event)\\\" (clearEvt)=\\\"onClear($event)\\\"></smart-form>\\n</smart-modal>\"","module.exports = \"<!-- <smart-page-heading [title]=\\\"title\\\" [icon]=\\\"icon\\\" [description]=\\\"description\\\"></smart-page-heading> -->\\n<smart-panel [fullscreenable]=\\\"fullscreenable\\\">\\n    <h2 panelTitle>\\n        <ng-content select=\\\"[title]\\\"></ng-content>\\n    </h2>\\n    <div panelToolbar class=\\\"mr-4\\\">\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"onCreate()\\\"><i class=\\\"fal fa-plus-circle\\\"></i> Create</button>\\n        <ng-content select=\\\"[toolbar]\\\"></ng-content>\\n    </div>\\n    \\n    <div panelContent>\\n        <smart-table [items]=\\\"items\\\" [columns]=\\\"columns\\\" (deleteEvt)=\\\"onDelete($event)\\\" (editEvt)=\\\"onEdit($event)\\\" \\n         [deletable]=\\\"deleteable\\\" [editable]=\\\"editable\\\" [createNextToolTip] = \\\"createNextTooltip\\\"\\n         (createNextEvt)=\\\"onCreateNext($event)\\\" [createNext]=\\\"createNext\\\">\\n\\n        </smart-table>\\n    </div>\\n</smart-panel>\"","module.exports = \"<div class=\\\"panel\\\" [ngClass]=\\\"pannelClasses\\\">\\r\\n  <div class=\\\"panel-hdr {{ headerClass }}\\\">\\r\\n    <ng-content select=\\\"[panelTitle]\\\" #panelTitle></ng-content>\\r\\n    <ng-content select=\\\"[panelToolbar]\\\"> </ng-content>\\r\\n    <div class=\\\"panel-toolbar\\\">\\r\\n      <button\\r\\n        *ngIf=\\\"collapsible\\\"\\r\\n        class=\\\"btn btn-panel\\\"\\r\\n        data-action=\\\"panel-collapse\\\"\\r\\n        (click)=\\\"toggleCollapse($event)\\\"\\r\\n        tooltip=\\\"Collapse\\\"\\r\\n      ></button>\\r\\n      <button\\r\\n        class=\\\"btn btn-panel\\\"\\r\\n        *ngIf=\\\"fullscreenable\\\"\\r\\n        data-action=\\\"panel-fullscreen\\\"\\r\\n        (click)=\\\"toggleFullscreen($event)\\\"\\r\\n        tooltip=\\\"Fullscreen\\\"\\r\\n      ></button>\\r\\n      <button\\r\\n        class=\\\"btn btn-panel\\\"\\r\\n        *ngIf=\\\"clossable\\\"\\r\\n        data-action=\\\"panel-close\\\"\\r\\n        (click)=\\\"closePanel($event)\\\"\\r\\n        tooltip=\\\"Close\\\"\\r\\n      ></button>      \\r\\n    </div>    \\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"panel-container\\\" [ngClass]=\\\"pannelContainerClasses\\\">\\r\\n    <div\\r\\n      class=\\\"panel-content\\\"\\r\\n      [ngClass]=\\\"pannelContentClasses\\\"\\r\\n      *ngIf=\\\"!collapsed\\\"\\r\\n      [@slideInOut]\\r\\n    >\\r\\n      <ng-content select=\\\"[panelContent]\\\"> </ng-content>\\r\\n    </div>\\r\\n\\r\\n    <ng-content select=\\\"[panelFooter]\\\"> </ng-content>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableComponent } from './table/table.component';\nimport {PaginationModule} from 'ngx-bootstrap/pagination';\nimport {FormsModule} from '@angular/forms';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n@NgModule({\n  declarations: [TableComponent],\n  imports: [\n    CommonModule,\n    PaginationModule,\n    TooltipModule,\n    FormsModule,\n  ],\n  exports: [TableComponent]\n})\nexport class CustomTablesModule { }\n","import {ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport { createAction, props, Store } from '@ngrx/store';\nimport {Observable, Subscription} from 'rxjs';\n\n@Component({\n    selector: 'smart-table',\n    templateUrl: './table.component.html',\n    styles: [],\n})\nexport class TableComponent implements OnInit, OnDestroy {\n\n    @Input() items: Observable<any>;\n    @Input() columns: TableData[];\n    @Input() editable = false;\n    @Input() headerClasses = 'bg-primary';\n    @Input() tableClasses = 'table-sm';\n    @Input() deletable = false;\n    @Input() selectable = false;\n    @Input() createNext = false;\n    @Input() View = false;\n    @Input() createNextToolTip = '';\n    @Input() ViewToolTip = '';\n    @Input() currentItemAction = '';\n    @Output() deleteEvt = new EventEmitter<any>();\n    @Output() clickEvt = new EventEmitter<any>();\n    @Output() searchEvt = new EventEmitter<any>();\n    @Output() editEvt = new EventEmitter<any>();\n    @Output() selectChange = new EventEmitter<any>();\n    @Output() deleteMany = new EventEmitter<any>();\n    @Output() createNextEvt = new EventEmitter<any>();\n    @Output() viewEvent = new EventEmitter<any>();\n\n    selectedItems: any[] = [];\n    private sub: Subscription = new Subscription();\n\n    // tslint:disable-next-line:variable-name\n    _items = [];\n    // tslint:disable-next-line:variable-name\n    __items = [];\n    itemsPerPage = 10;\n    startIndex = 0;\n    endIndex = 10;\n    currentPage = 1;\n    totalItems = 0;\n    numPages = 0;\n\n    constructor(private cdr: ChangeDetectorRef, private store: Store<any>) {\n    }\n\n    ngOnInit() {\n        this.sub = this.items.subscribe(data => {\n            this.totalItems = data.length;\n            this._items = data;\n            this.__items = data;\n            this.cdr.detectChanges();\n        });\n\n\n    }\n\n\n    showActions(): boolean {\n        return this.editable || this.deletable || this.createNext || this.View;\n    }\n\n    onDelete(item: any) {\n        this.deleteEvt.emit(item);\n    }\n\n\n    onEdit(item: any) {\n        if(this.currentItemAction !== ''){\n            const action = createAction(\n                this.currentItemAction,\n                props<{data: any}>()\n            );\n            \n            this.store.dispatch(action({data: item}))\n        }\n\n       \n        \n        this.editEvt.emit(item);\n    }\n\n    onClick(item: any) {\n        this.clickEvt.emit(item);\n    }\n\n    pageChanged(event) {\n        this.startIndex = (event.page - 1) * this.itemsPerPage;\n        this.endIndex = this.startIndex + this.itemsPerPage;\n    }\n\n    onSearch(event: KeyboardEvent) {\n        // @ts-ignore\n        let value = event.target.value;\n        if (value) {\n            value = value.toLowerCase();\n        }\n        const names = this.columns.map(c => c.value);\n        this._items = this.__items.filter(item => {\n            const stringNames = names.map(n => {\n                const name = this.getName(item, n);\n                if (typeof name === 'string') {\n                    return this.getName(item, n).toLowerCase().includes(value);\n                }\n            });\n\n            return stringNames.includes(true);\n        });\n\n    }\n\n    onItemCountChange(event: Event) {\n        // @ts-ignore\n        const val = event.target.value;\n        if (val === '-1') {\n            this.itemsPerPage = this.totalItems;\n        } else {\n            this.itemsPerPage = val;\n        }\n        this.currentPage = 1;\n        this.startIndex = 0;\n        this.endIndex = this.startIndex + this.itemsPerPage;\n        this.cdr.detectChanges();\n    }\n\n    ngOnDestroy(): void {\n        this.sub.unsubscribe();\n    }\n\n    onSort(item: any) {\n        if (item.sortable) {\n            this.columns.forEach(c => {\n                if (c.value !== item.value) {\n                    c.sort = '';\n                }\n            });\n            const column = this.columns.filter(col => col.value === item.value)[0];\n            column.sort = column.sort === undefined ? 'asc' : (column.sort === 'asc' ? 'desc' : 'asc');\n            const sort = column.sort === 'asc' ? 1 : -1;\n            this._items = this.__items.sort((a, b) => a[item.value] < b[item.value] ? sort : -1 * sort);\n        }\n\n    }\n\n    onItemSelect(item: any) {\n\n        const index = this.selectedItems.find(i => i.id === item.id);\n        if (index) {\n            this.selectedItems = this.selectedItems.filter(i => i.id !== item.id);\n        } else {\n            this.selectedItems.push(item);\n        }\n\n        this.selectChange.emit(this.selectedItems);\n\n    }\n\n    getName(item: any, name: any) {\n        if (typeof name === typeof []) {\n            switch (name.length) {\n                case 1:\n                    return item[name[0]];\n                case 2:\n                    return item[name[0]][name[1]];\n                case 3:\n                    return item[name[0]][name[1]][name[2]];\n                case 4:\n                    return item[name[0]][name[1]][name[2]][name[3]];\n                case 5:\n                    return item[name[0]][name[1]][name[2]][name[3]][name[4]];\n                case 6:\n                    return item[name[0]][name[1]][name[2]][name[3]][name[4]][name[5]];\n                case 7:\n                    return item[name[0]][name[1]][name[2]][name[3]][name[4]][name[5]][name[6]];\n                default:\n                    return item[name[0]];\n            }\n        }\n\n        return item[name];\n\n\n    }\n\n    onSelectAll(event, items: any[]) {\n        if (event.target.checked) {\n            this.selectedItems = items;\n        } else {\n            this.selectedItems = [];\n        }\n\n        this.selectChange.emit(this.selectedItems);\n    }\n\n    isItemSelected(item: any): boolean {\n        return this.selectedItems.find(i => i === item) !== undefined;\n    }\n\n    onDeleteMany() {\n        this.deleteMany.emit(this.selectedItems);\n        this.selectedItems = [];\n    }\n\n    onCreateNext(item){\n        this.createNextEvt.emit(item)\n    }\n    onView(item){\n        this.viewEvent.emit(item)\n    }\n}\n\nexport interface TableData {\n    title: string;\n    value: any;\n    bool?: boolean;\n    boolText?: { yes: string, no: string };\n    date?: boolean;\n    money?: boolean;\n    dateFormat?: string;\n    sort?: string;\n    width?: number;\n    sortable?: boolean;\n    align?: Align;\n    clickable?: boolean;\n    image?: boolean;\n}\n\nexport enum Align {\n    LEFT = 'left', CENTER = 'center', RIGHT = 'right'\n}\n\n","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControlDirective, FormControl, ControlContainer } from '@angular/forms';\n\n@Component({\n  selector: 'smart-checkbox',\n  templateUrl: './checkbox.component.html',\n  styles: [],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: CheckboxComponent,\n    multi: true\n  }]\n})\nexport class CheckboxComponent implements ControlValueAccessor, OnInit  {\n\n  @ViewChild(FormControlDirective, {static: true})\n  formControlDirective: FormControlDirective;\n  @Input()\n  formControl: FormControl;\n  @Input() label = 'Checkbox Label';\n  @Input()\n  checkedLabel = 'Active'\n  @Input()\n  unCheckedLabel = 'In-Active'\n  @Input()\n  formControlName: string;\n  @Input()\n  id = '';\n\n  get control() {\n    return this.formControl ||     this.controlContainer.control.get(this.formControlName);\n  }\n\n  constructor(private controlContainer: ControlContainer) {\n    \n  }\n  ngOnInit(): void {\n    if (this.id === '') {\n      this.id = this.label.replace(' ', '-').toLowerCase();\n    }\n    if(this.id === 'status'){\n      this.id = 'checkbox-status';\n    }\n\n    if(!this.control.value){\n      this.control.patchValue(false)\n    }\n  }\n  registerOnTouched(fn: any): void {\n    this.formControlDirective.valueAccessor.registerOnTouched(fn);\n  }\n\n  registerOnChange(fn: any): void {\n    this.formControlDirective.valueAccessor.registerOnChange(fn);\n  }\n\n  writeValue(obj: any): void {\n    this.formControlDirective.valueAccessor.writeValue(obj);\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.formControlDirective.valueAccessor.setDisabledState(isDisabled);\n  }\n\n\n}\n","import { Observable } from 'rxjs';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\n\n@Component({\n  selector: 'smart-form',\n  templateUrl: './form.component.html',\n  styles: []\n})\nexport class FormComponent implements OnInit {\n\n  formGroup: FormGroup;\n  @Output()\n  submitEvt = new EventEmitter()\n  @Output()\n  clearEvt = new EventEmitter()\n  \n  @Input()\n  data: RowData[] = []\n\n  lastValues = {}\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.build();\n  }\n\n  private build() {\n    let form = {}\n    this.data.forEach(data => {\n      const row = data.row\n      row.forEach(col => {\n        let value = col.value\n        if (value && typeof value === 'object'){\n          value = value.id\n        }\n        form[col.name] = [{value: value ? value : null, disabled: col.disable ? col.disable: false}, col.validator ? col.validator : null]\n      })\n    })\n    \n    this.formGroup = this.formBuilder.group(form)\n  }\n\n  onSubmit() {\n    Object.keys(this.formGroup.controls).forEach(field => {\n      const control = this.formGroup.get(field);\n      control.markAsTouched({ onlySelf: true });\n      control.markAsDirty({ onlySelf: true });\n    });\n    if (this.formGroup.invalid) return;\n    this.submitEvt.emit(this.formGroup.getRawValue())\n\n  }\n\n  columns(row) {\n    const num = Math.round(12 / row.length)\n    return `col-md-${num}`\n  }\n\n  onClear(){\n    this.build()\n    this.clearEvt.emit('');\n  }\n\n}\n\nexport interface RowData {\n  row: ColumnData[]\n}\n\nexport interface ColumnData {\n  label: string;\n  name: string;\n  type?: string;\n  value?: any;\n  disable?: boolean;\n  hidden?: boolean;\n  items?: Observable<any[]>;\n  checkedLabel?: string;\n  unCheckedLabel?: string;\n  validator?: Validators\n}\n","import { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SelectComponent } from './select/select.component';\nimport { FormComponent } from './form/form.component';\nimport { InputComponent } from './input/input.component';\nimport { CheckboxComponent } from './checkbox/checkbox.component';\n\nconst components = [SelectComponent, FormComponent, InputComponent, CheckboxComponent]\n@NgModule({\n  declarations: [...components],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n  ],\n  exports: [...components]\n})\nexport class CustomFormsModule { }\n","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControlDirective, FormControl, ControlContainer } from '@angular/forms';\n\n@Component({\n  selector: 'smart-input',\n  templateUrl: './input.component.html',\n  styles: [],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: InputComponent,\n    multi: true\n  }]\n})\nexport class InputComponent implements ControlValueAccessor, OnInit {\n\n  @ViewChild(FormControlDirective, { static: true })\n  formControlDirective: FormControlDirective;\n  @Input()\n  formControl: FormControl;\n  @Input()\n  label = 'Label'\n  @Input()\n  type = 'text'\n  @Input()\n  formControlName: string;\n  @Input()\n  id = '';\n  @Input()\n  error = '';\n  @Input()\n  valye='';\n\n  \n\n  get control() {\n    return this.formControl || this.controlContainer.control.get(this.formControlName);\n  }\n\n  constructor(private controlContainer: ControlContainer) {\n\n  }\n  ngOnInit(): void {\n    if (this.id === '') {\n      this.id = this.label.replace(' ', '-').toLowerCase();\n    }\n\n    if(this.error === ''){\n      this.error = `${this.label} is required`;\n    }\n  }\n  registerOnTouched(fn: any): void {\n    this.formControlDirective.valueAccessor.registerOnTouched(fn);\n  }\n\n  registerOnChange(fn: any): void {\n    this.formControlDirective.valueAccessor.registerOnChange(fn);\n  }\n\n  writeValue(obj: any): void {\n    this.formControlDirective.valueAccessor.writeValue(obj);\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.formControlDirective.valueAccessor.setDisabledState(isDisabled);\n  }\n\n\n}\n","import { Observable } from 'rxjs';\nimport { Component, OnInit, ViewChild, Input, EventEmitter, Output } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControlDirective, FormControl, ControlContainer } from '@angular/forms';\n\n@Component({\n  selector: 'smart-select',\n  templateUrl: './select.component.html',\n  styles: [],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: SelectComponent,\n    multi: true\n  }]\n})\nexport class SelectComponent implements ControlValueAccessor, OnInit  {\n\n  @ViewChild(FormControlDirective, {static: true})\n  formControlDirective: FormControlDirective;\n  @Input()\n  formControl: FormControl;\n  @Input()\n  label = 'Label'\n  @Input()\n  items: Observable<any[]>;\n  @Input()\n  formControlName: string;\n  @Input()\n  id = ''\n  @Input()\n  isOptional = true\n  @Input()\n  error = ''\n  @Output()\n  changeEvt = new EventEmitter()\n  @Input()\n  name = 'name'\n\n  get control() {\n    return this.formControl || this.controlContainer.control.get(this.formControlName);\n  }\n\n  constructor(private controlContainer: ControlContainer) {\n    \n  }\n  ngOnInit(): void {\n    if(this.id === ''){\n      this.id = this.label.replace(' ', '-').toLowerCase();\n    }\n    if(this.error === ''){\n      this.error = `${this.label} is required`;\n    }\n  }\n  onChange(event){\n    this.changeEvt.emit(event.target.value)\n  }\n  registerOnTouched(fn: any): void {\n    this.formControlDirective.valueAccessor.registerOnTouched(fn);\n  }\n\n  registerOnChange(fn: any): void {\n    this.formControlDirective.valueAccessor.registerOnChange(fn);\n  }\n\n  writeValue(obj: any): void {\n    this.formControlDirective.valueAccessor.writeValue(obj);\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.formControlDirective.valueAccessor.setDisabledState(isDisabled);\n  }\n\n\n\n  getName(item: any) {\n    if (typeof this.name === typeof []) {\n        switch (this.name.length) {\n            case 1:\n                return item[this.name[0]];\n            case 2:\n                return item[this.name[0]][this.name[1]];\n            case 3:\n                return item[this.name[0]][this.name[1]][this.name[2]];\n            case 4:\n                return item[this.name[0]][this.name[1]][this.name[2]][this.name[3]];\n            case 5:\n                return item[this.name[0]][this.name[1]][this.name[2]][this.name[3]][this.name[4]];\n            case 6:\n                return item[this.name[0]][this.name[1]][this.name[2]][this.name[3]][this.name[4]][this.name[5]];\n            case 7:\n                return item[this.name[0]][this.name[1]][this.name[2]][this.name[3]][this.name[4]][this.name[5]][this.name[6]];\n            default:\n                return item[this.name[0]];\n        }\n    }\n\n    return item[this.name];\n\n\n}\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9wYW5lbHMvY3J1ZC1wYW5lbC9jcnVkLXBhbmVsLWZvcm0vY3J1ZC1wYW5lbC1mb3JtLmNvbXBvbmVudC5jc3MifQ== */\"","import { Store, createAction, props, MemoizedSelector } from '@ngrx/store';\nimport { RowData } from './../../../forms/form/form.component';\nimport { Component, OnInit, Input} from '@angular/core';\n\n@Component({\n  selector: 'smart-crud-panel-form',\n  templateUrl: './crud-panel-form.component.html',\n  styleUrls: ['./crud-panel-form.component.css']\n})\nexport class CrudPanelFormComponent implements OnInit {\n\n  @Input() form: RowData[] = []\n  @Input() title = 'Title'\n  action: string;\n  current: MemoizedSelector<any,any>;\n  selected;\n  selectCurrentAction: any;\n\n  constructor(private store: Store<any>) { }\n\n  ngOnInit() {\n    this.selected = this.store.select(this.current)\n\n  }\n\n  onSubmit(event) {\n    const act = createAction(\n      this.action,\n      props<{ data: any }>()\n    );\n    \n    // const sub = this.selected.subscribe(selectedd => {\n    //   if(selectedd){\n    //     event.id = selectedd.id\n    //   }\n      \n    // })\n\n    // sub.unsubscribe()\n    this.store.dispatch(act({ data: event }))\n    this.selected = this.store.select(this.current)\n  }\n\n  onClear(event){\n    const action = createAction(\n      this.selectCurrentAction,\n      props<{data: any}>()\n    );\n    this.store.dispatch(action({data: null}))\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9wYW5lbHMvY3J1ZC1wYW5lbC9jcnVkLXBhbmVsLmNvbXBvbmVudC5jc3MifQ== */\"","import { RowData } from './../../forms/form/form.component';\nimport { DialogsService } from './../../dialogs/dialogs.service';\nimport { createAction, props, Store, MemoizedSelector } from '@ngrx/store';\nimport { CrudPanelFormComponent } from './crud-panel-form/crud-panel-form.component';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { TableData } from './../../custom-tables/table/table.component';\nimport { Observable } from 'rxjs';\nimport { Component, OnInit, Input, Output,EventEmitter } from '@angular/core';\n\n\n@Component({\n  selector: 'smart-crud-panel',\n  templateUrl: './crud-panel.component.html',\n  styleUrls: ['./crud-panel.component.css']\n})\nexport class CrudPanelComponent implements OnInit {\n\n  @Input() title = ''\n  @Input() description = ''\n  @Input() icon = ''\n  @Input() columns: TableData[]\n  @Input() selectAllSelector: MemoizedSelector<any, any>;\n  @Input() selectCurrent: MemoizedSelector<any, any>;\n  @Input() deleteItemName = 'name';\n  @Input() deleteMessage = 'Do you wish to delete';\n  @Input() form: RowData[]\n  @Input() editable = false\n  @Input() deleteable = false\n  @Input() createNext = false\n  @Input() createNextTooltip = ''\n  @Input() modalClass = 'modal-xm';\n  \n  @Input() fullscreenable = false;\n  @Output() createNextEvt = new EventEmitter();\n\n  @Input() itemName = '';\n  pluralItemName = '';\n\n  selectAllAction: string;\n  selectCurrentAction: string;\n  createAction: string;\n  deleteAction: string;\n  items: Observable<any>\n  _formTitle: string;\n\n\n\n  constructor(private modalService: BsModalService, private store: Store<any>, private dialogService: DialogsService) { }\n\n  ngOnInit() {\n    this.pluralItemName = this.itemName.endsWith('y') ? this.itemName.substr(0, this.itemName.length - 1).concat('ies') : this.itemName.concat('s')\n    this.selectAllAction = `[${this.itemName}/API] Load ${this.pluralItemName}`;\n    this.selectCurrentAction = `[${this.itemName}/API] Select Current ${this.itemName}`\n    this.createAction = `[${this.itemName}/API] Add ${this.itemName}`\n    this.deleteAction = `[${this.itemName}/API] Delete ${this.itemName}`\n    const action = createAction(\n      this.selectAllAction\n    );\n    this.store.dispatch(action())\n    this.items = this.store.select(this.selectAllSelector);\n  }\n\n  onCreate(){\n    const action = createAction(\n      this.selectCurrentAction,\n      props<{data: any}>()\n    );\n    this.store.dispatch(action({data: null}))\n    this.addFormID();\n    this.form = this.form.map(element => {\n      element.row.forEach(data => {\n        if(data.type === 'check' || data.type ==='checkbox'){\n          data.value = false\n        }else{\n          data.value = null\n        }\n      })\n      return element\n    })\n    this._formTitle = `Add ${this.itemName}`\n  //  console.log(action.type)\n    this.modalService.show(CrudPanelFormComponent, {\n      initialState: {\n        action: this.createAction, \n        form: this.form, \n        title: this._formTitle,\n        current: this.selectCurrent,\n        selectCurrentAction: this.selectCurrentAction\n      }, class: this.modalClass,\n    })\n  }\n\n  async onDelete(event){\n    const result = await this.dialogService.confirm({\n      title: `<i class='fal fa-times-circle text-danger mr-2'></i>\n      ${this.deleteMessage} <span class='fw-500'>&nbsp;'${event[this.deleteItemName]}'&nbsp;</span>?`,\n      message: `<span><strong>Warning:</strong> This action cannot be undone!</span>`,\n      buttons: {\n        confirm: {\n          label: 'Yes',\n          className: 'btn-danger shadow-0'\n        },\n        cancel: {\n          label: 'No',\n          className: 'btn-default'\n        }\n      }\n    }).toPromise();\n\n    if (result) {\n      const action = createAction(\n        this.deleteAction,\n        props<{data: any}>()\n      );\n      this.store.dispatch(action({data: event}))\n    }\n  }\n\n  onEdit(event){\n    \n    this.addFormID();\n\n\n    const keys = Object.keys(event)\n    this.form.forEach(element => {\n      element.row.forEach(data => {\n        keys.forEach(key => {\n          if(key === data.name){\n            data['value'] = event[key]\n          }\n        })\n      });\n    });\n   // console.log(this.form)\n    this._formTitle = `Edit ${this.itemName}`\n    this.modalService.show(CrudPanelFormComponent, {\n      initialState: {\n        action: this.createAction, \n        form: this.form, \n        title: this._formTitle,\n        current: this.selectCurrent,\n        selectCurrentAction: this.selectCurrentAction\n      }, class: this.modalClass\n    })\n  }\n\n  private addFormID(){\n    let found = false;\n    this.form.forEach(data => {\n      data.row.forEach(elm => {\n        if(elm.label === 'ID'){\n          found = true;\n        }\n      })\n    })\n\n    if(!found){\n      this.form.push({row: [{label: 'ID', name: 'id', type:'hidden'}]})\n    }\n  }\n\n  onCreateNext(item){\n    this.createNextEvt.emit(item)\n  }\n}\n","import { Component, OnInit, Input, Attribute, OnChanges, SimpleChanges, ElementRef, Renderer2, ContentChild } from '@angular/core';\r\nimport { makeSlideInOut } from '../../utils/animations';\r\nimport { handleClassCondition } from '../../utils/utils.functions';\r\nimport { DialogsService } from '../../dialogs/dialogs.service';\r\n\r\n@Component({\r\n  selector: 'smart-panel',\r\n  templateUrl: './panel.component.html',\r\n  animations: [makeSlideInOut()],\r\n})\r\nexport class PanelComponent implements OnInit, OnChanges {\r\n\r\n  hasPannel = false;\r\n  @Input() collapsible = false;\r\n  @Input() collapsed = false;\r\n  @Input() fullscreenable = false;\r\n  @Input() fullscreenIn: boolean;\r\n  @Input() clossable: boolean;\r\n  @Input() closed: boolean;\r\n  headerClass: string;\r\n\r\n  @ContentChild('panelTitle', { static: true }) panelTitle;\r\n  constructor(\r\n    @Attribute('headerClass') headerClass: string,\r\n    private dialogs: DialogsService,\r\n    private el: ElementRef,\r\n    private renderer: Renderer2,\r\n  ) {\r\n    this.headerClass = headerClass;\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (typeof this.collapsed !== 'undefined') {\r\n      this.collapsible = true;\r\n    }\r\n    if (typeof this.fullscreenIn !== 'undefined') {\r\n      this.fullscreenable = true;\r\n    }\r\n    if (typeof this.closed !== 'undefined') {\r\n      this.clossable = true;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    // console.log(22, changes);\r\n    // if (typeof changes.fullscreenIn !== 'undefined') {\r\n    //   console.log('111', changes.fullscreenIn.currentValue, this.fullscreenable);\r\n    // }\r\n  }\r\n\r\n  get pannelClasses() {\r\n    const classes = ['panel'];\r\n    classes.push(this.collapsed ? 'panel-collapsed' : '');\r\n    classes.push(this.fullscreenIn ? 'panel-fullscreen' : '');\r\n    return classes;\r\n  }\r\n\r\n  get pannelContainerClasses() {\r\n    const classes = ['panel-container'];\r\n    if (this.collapsible) {\r\n      // classes.push(this.collapsed ? 'collapse' : 'show');\r\n      classes.push(this.collapsed ? '' : 'show');\r\n    }\r\n    return classes;\r\n  }\r\n\r\n  get pannelContentClasses() {\r\n    const classes = ['panel-content'];\r\n    return classes;\r\n  }\r\n\r\n  toggleCollapse($event: MouseEvent) {\r\n    $event.preventDefault();\r\n    this.collapsed = !this.collapsed;\r\n  }\r\n  toggleFullscreen($event: MouseEvent) {\r\n    $event.preventDefault();\r\n    this.fullscreenIn = !this.fullscreenIn;\r\n    handleClassCondition(this.fullscreenIn, 'panel-fullscreen', document.querySelector('body'));\r\n  }\r\n  async closePanel($event: MouseEvent) {\r\n    $event.preventDefault();\r\n    const titleEl = this.el.nativeElement.querySelector('h1')\r\n      || this.el.nativeElement.querySelector('h2')\r\n      || this.el.nativeElement.querySelector('h3');\r\n\r\n    const title = titleEl ? titleEl.innerText : '';\r\n\r\n    const result = await this.dialogs.confirm({\r\n      title: `<i class='fal fa-times-circle text-danger mr-2'></i>\r\n      Do you wish to delete panel <span class='fw-500'>&nbsp;'${title}'&nbsp;</span>?`,\r\n      message: `<span><strong>Warning:</strong> This action cannot be undone!</span>`,\r\n      buttons: {\r\n        confirm: {\r\n          label: 'Yes',\r\n          className: 'btn-danger shadow-0'\r\n        },\r\n        cancel: {\r\n          label: 'No',\r\n          className: 'btn-default'\r\n        }\r\n      }\r\n    }).toPromise();\r\n\r\n    if (result) {\r\n      this.renderer.addClass(this.el.nativeElement, 'd-none');\r\n    }\r\n\r\n  }\r\n\r\n  setHeaderClass(headerClass: string) {\r\n    this.headerClass = headerClass;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * spec\r\n * + it should have multiple content projections\r\n * + it should have tooltips on feature buttons\r\n * it should be able to disable all features\r\n * it should save options to local storage\r\n *         closed\r\n * + it should wrap header\r\n * + it should be closable\r\n * + it should warn on close\r\n * + it should be fullscrinable\r\n * +       toggle class .panel-fullscreen on :host element\r\n * +       toggle class .panel-fullscreen on body element\r\n * + it should be collapsable\r\n * +       animated collapse\r\n * +       toggle class .panel-collapsed on :host element\r\n * +       toggle class .collapse .show  on .panel-container element\r\n * it should be lockable *\r\n *        toggle class .panel-locked on :host element\r\n * + it should be able to change colors // styles\r\n * +       .panel-hdr\r\n * it should have loading indicator/state\r\n *         have runLoader()\r\n * it should be able to run refresh state\r\n *        toggle class .panel-refresh on :host element\r\n *        toggle class .enable-loader on .panel-container element\r\n * + it should be able to accept custom  buttons\r\n * it should be sortable\r\n *    toggle class .panel-sortable on :host element\r\n *   dragging\r\n *    placeholder .panel-placeholder\r\n *    drag handle > .panel-hdr > h2\r\n * it should remeber position\r\n * it should emit callbacks\r\n * it should be able to reset\r\n *    all widgets\r\n *    all widgets settings\r\n *    all widgets positions\r\n *    widget settings\r\n *    widget position\r\n * it should be destroyable\r\n * alert if no id\r\n * it should add propper roles\r\n *\r\n * dependencies\r\n *    ngx-bootstrap/modal\r\n *    ngx-bootstrap/dropdown\r\n *    ngx-bootstrap/tooltip\r\n *    cdk/drag-ndrop\r\n */\r\n\r\n\r\n","import { CustomFormsModule } from './../forms/forms.module';\r\nimport { CustomTablesModule } from './../custom-tables/custom-tables.module';\r\nimport { LayoutModule } from './../layout/layout.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PanelComponent } from './panel/panel.component';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { DialogsModule } from '../dialogs/dialogs.module';\r\nimport { CrudPanelComponent } from './crud-panel/crud-panel.component';\r\nimport { CrudPanelFormComponent } from './crud-panel/crud-panel-form/crud-panel-form.component';\r\n\r\n@NgModule({\r\n  declarations: [PanelComponent, CrudPanelComponent, CrudPanelFormComponent],\r\n  imports: [\r\n    TooltipModule,\r\n    CommonModule,\r\n    DialogsModule,\r\n    CustomFormsModule,\r\n    CustomTablesModule,\r\n    LayoutModule,\r\n  ],\r\n  exports: [PanelComponent, CrudPanelComponent],\r\n  entryComponents: [CrudPanelFormComponent]\r\n})\r\nexport class PanelsModule { }\r\n","import { LayoutModule } from './layout/layout.module';\r\nimport { CustomFormsModule } from './forms/forms.module';\r\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {CustomTablesModule} from './custom-tables/custom-tables.module';\r\nimport {PanelsModule} from './panels/panels.module';\r\nimport {TooltipModule} from 'ngx-bootstrap/tooltip';\r\nimport {ModalModule} from 'ngx-bootstrap/modal';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {TabsModule} from 'ngx-bootstrap/tabs';\r\n\r\nconst modules = [\r\n    PanelsModule,\r\n    TooltipModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TabsModule,\r\n    LayoutModule,\r\n    CustomTablesModule,\r\n    CustomFormsModule,\r\n];\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [\r\n        CommonModule,\r\n        ModalModule.forChild(),\r\n        ...modules,\r\n    ],\r\n    exports: [ModalModule, ...modules],\r\n})\r\nexport class SharedModule {\r\n}\r\n"],"sourceRoot":""}