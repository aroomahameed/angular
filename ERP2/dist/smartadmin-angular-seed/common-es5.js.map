{"version":3,"sources":["webpack:///./src/app/features/store/article/article/article.actions.ts","webpack:///./src/app/features/store/article/article/article.effects.ts","webpack:///./src/app/features/store/article/article/article.reducer.ts","webpack:///./src/app/features/store/article/article/article.selectors.ts","webpack:///./src/app/features/store/article/article/article.service.ts","webpack:///./src/app/features/store/article/article/index.ts","webpack:///./src/app/features/store/article/season/index.ts","webpack:///./src/app/features/store/article/season/season.actions.ts","webpack:///./src/app/features/store/article/season/season.effects.ts","webpack:///./src/app/features/store/article/season/season.reducer.ts","webpack:///./src/app/features/store/article/season/season.selectors.ts","webpack:///./src/app/features/store/article/season/season.service.ts","webpack:///./src/app/features/store/settings/factorycode/factorycode.actions.ts","webpack:///./src/app/features/store/settings/factorycode/factorycode.effects.ts","webpack:///./src/app/features/store/settings/factorycode/factorycode.reducer.ts","webpack:///./src/app/features/store/settings/factorycode/factorycode.selectors.ts","webpack:///./src/app/features/store/settings/factorycode/factorycode.service.ts","webpack:///./src/app/features/store/settings/factorycode/index.ts"],"names":[],"mappings":"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","file":"common-es5.js","sourcesContent":["import {createAction, props} from '@ngrx/store';\r\n\r\nimport {Article} from './article';\r\n\r\nexport const loadArticles = createAction(\r\n    '[Article/API] Load Articles'\r\n);\r\n\r\nexport const loadArticlesSuccess = createAction(\r\n    '[Article/API] Load Articles Success',\r\n    props<{ data: Article[] }>(),\r\n);\r\n\r\nexport const addArticle = createAction(\r\n    '[Article/API] Add Article',\r\n    props<{ data: any }>(),\r\n);\r\n\r\nexport const addArticleSuccess = createAction(\r\n    '[Article/API] Add Article Success',\r\n    props<{ data: Article }>(),\r\n);\r\n\r\n\r\nexport const deleteArticle = createAction(\r\n    '[Article/API] Delete Article',\r\n    props<{ data: Article }>(),\r\n);\r\n\r\nexport const deleteArticleSuccess = createAction(\r\n    '[Article/API] Delete Article Success',\r\n    props<{ id: string}>(),\r\n);\r\n\r\nexport const selectCurrentArticleSuccess = createAction(\r\n    '[Article/API] Select Current Article',\r\n    props<{ data: Article }>(),\r\n);\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\r\nimport {Store} from '@ngrx/store';\r\nimport {ArticleService} from './article.service';\r\nimport {\r\n  addArticle,\r\n  addArticleSuccess,\r\n  deleteArticle, deleteArticleSuccess,\r\n  loadArticles,\r\n  loadArticlesSuccess,\r\n} from './article.actions';\r\nimport {filter, map, mergeMap, withLatestFrom} from 'rxjs/operators';\r\nimport {allArticleLoaded} from './article.selectors';\r\n\r\n\r\n@Injectable()\r\nexport class ArticleEffects {\r\n\r\n    loadArticles$ = createEffect(() => this.actions$.pipe(\r\n        ofType(loadArticles),\r\n        withLatestFrom(this.store.select(allArticleLoaded)),\r\n        filter(([_, allLoaded]) => !allLoaded),\r\n        mergeMap(_ => this.service.findAll().pipe(\r\n            map(data => loadArticlesSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    addArticle$ = createEffect(() => this.actions$.pipe(\r\n        ofType(addArticle),\r\n        mergeMap(action => this.service.save(action.data).pipe(\r\n            map(data => addArticleSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    deleteArticle$ = createEffect(() => this.actions$.pipe(\r\n        ofType(deleteArticle),\r\n        mergeMap(({data}) => this.service.delete(data).pipe(\r\n            map(_ => deleteArticleSuccess({id: data.id})),\r\n        )),\r\n    ));\r\n\r\n    constructor(private actions$: Actions, private store: Store<any>, private service: ArticleService) {\r\n    }\r\n\r\n}\r\n","import {Action, createReducer, on} from '@ngrx/store';\r\nimport {EntityState, EntityAdapter, createEntityAdapter} from '@ngrx/entity';\r\nimport {Article} from './article';\r\nimport * as ArticleActions from './article.actions';\r\n\r\nexport const articleFeatureKey = 'articles';\r\n\r\nexport interface ArticleState extends EntityState<Article> {\r\n    allArticlesLoaded: boolean;\r\n    currentArticle: Article\r\n}\r\n\r\nexport const adapter: EntityAdapter<Article> = createEntityAdapter<Article>();\r\n\r\nexport const initialState: ArticleState = adapter.getInitialState({\r\n    allArticlesLoaded: false,\r\n    currentArticle: null\r\n});\r\n\r\nconst articleReducer = createReducer(\r\n    initialState,\r\n    on(ArticleActions.addArticleSuccess,\r\n        (state, action) => adapter.upsertOne(action.data, {...state, currentArticle: action.data}),\r\n    ),\r\n    on(ArticleActions.deleteArticleSuccess,\r\n        (state, action) => adapter.removeOne(action.id, state),\r\n    ),\r\n\r\n    on(ArticleActions.loadArticlesSuccess,\r\n        (state, action) => adapter.addAll(action.data, state),\r\n    ),\r\n    on(ArticleActions.selectCurrentArticleSuccess,\r\n        (state, action) => ({...state, currentArticle: action.data}),\r\n    ),\r\n);\r\n\r\nexport function reducer(state: ArticleState | undefined, action: Action) {\r\n    return articleReducer(state, action);\r\n}\r\n\r\nexport const {\r\n    selectIds,\r\n    selectEntities,\r\n    selectAll,\r\n    selectTotal,\r\n} = adapter.getSelectors();\r\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport { Article } from './article';\r\nimport {ArticleState, articleFeatureKey, selectAll} from './article.reducer';\r\n\r\nconst featureState = createFeatureSelector<ArticleState>(articleFeatureKey);\r\n\r\nexport const selectAllArticles = createSelector(\r\n    featureState,\r\n    selectAll,\r\n);\r\n\r\nexport const allArticleLoaded = createSelector(\r\n    featureState,\r\n    state => state.allArticlesLoaded,\r\n);\r\n\r\nexport const selectCurrentArticle = createSelector(\r\n    featureState,\r\n    state => state.currentArticle\r\n)\r\nexport const selectByModelsID = createSelector(\r\n    selectAllArticles,\r\n    (articles: Article[], id) => {\r\n        const article = articles.filter(a => a.model.id == id)\r\n        return article;\r\n    }\r\n)\r\n","import {Injectable} from '@angular/core';\r\nimport {APP_CONFIG} from '../../../../app.config';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Article} from './article';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ArticleService {\r\n    private url = `${APP_CONFIG.BASE_URL}/articles/`;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    findAll(): Observable<Article[]> {\r\n        return this.http.get<Article[]>(this.url);\r\n    }\r\n\r\n    save(item: FormData): Observable<Article> {\r\n\r\n        if (!item.get('id')) {\r\n            return this.http.post<Article>(this.url, item);\r\n        } else {\r\n            return this.update(item);\r\n        }\r\n    }\r\n\r\n    private update(item: any): Observable<Article> {\r\n        return this.http.put<Article>(`${this.url}${item.get('id')}/`, item);\r\n    }\r\n\r\n    delete(item: Article) {\r\n        return this.http.delete(`${this.url}${item.id}/`);\r\n    }\r\n}\r\n","export * from './article';\r\nexport * from './article.effects';\r\nexport * from './article.service';\r\nexport * from './article.selectors';\r\nexport * from './article.reducer';\r\nexport * from './article.actions';\r\n","export * from './season';\r\nexport * from './season.effects';\r\nexport * from './season.service';\r\nexport * from './season.selectors';\r\nexport * from './season.reducer';\r\nexport * from './season.actions';\r\n","import {createAction, props} from '@ngrx/store';\r\n\r\nimport {Season} from './season';\r\n\r\nexport const loadSeasons = createAction(\r\n    '[Season/API] Load Seasons'\r\n);\r\n\r\nexport const loadSeasonsSuccess = createAction(\r\n    '[Season/API] Load Seasons Success',\r\n    props<{ data: Season[] }>(),\r\n);\r\n\r\nexport const addSeason = createAction(\r\n    '[Season/API] Add Season',\r\n    props<{ data: Season }>(),\r\n);\r\n\r\nexport const addSeasonSuccess = createAction(\r\n    '[Season/API] Add Season Success',\r\n    props<{ data: Season }>(),\r\n);\r\n\r\n\r\nexport const deleteSeason = createAction(\r\n    '[Season/API] Delete Season',\r\n    props<{ data: Season }>(),\r\n);\r\n\r\nexport const deleteSeasonSuccess = createAction(\r\n    '[Season/API] Delete Season Success',\r\n    props<{ id: string}>(),\r\n);\r\n\r\nexport const selectCurrentSeasonSuccess = createAction(\r\n    '[Season/API] Select Current Season',\r\n    props<{ data: Season }>(),\r\n);\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\r\nimport {Store} from '@ngrx/store';\r\nimport {SeasonService} from './season.service';\r\nimport {\r\n  addSeason,\r\n  addSeasonSuccess,\r\n  deleteSeason, deleteSeasonSuccess,\r\n  loadSeasons,\r\n  loadSeasonsSuccess,\r\n} from './season.actions';\r\nimport {filter, map, mergeMap, withLatestFrom} from 'rxjs/operators';\r\nimport {allSeasonLoaded} from './season.selectors';\r\n\r\n\r\n@Injectable()\r\nexport class SeasonEffects {\r\n\r\n    loadSeasons$ = createEffect(() => this.actions$.pipe(\r\n        ofType(loadSeasons),\r\n        withLatestFrom(this.store.select(allSeasonLoaded)),\r\n        filter(([_, allLoaded]) => !allLoaded),\r\n        mergeMap(_ => this.service.findAll().pipe(\r\n            map(data => loadSeasonsSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    addSeason$ = createEffect(() => this.actions$.pipe(\r\n        ofType(addSeason),\r\n        mergeMap(action => this.service.save(action.data).pipe(\r\n            map(data => addSeasonSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    deleteSeason$ = createEffect(() => this.actions$.pipe(\r\n        ofType(deleteSeason),\r\n        mergeMap(({data}) => this.service.delete(data).pipe(\r\n            map(_ => deleteSeasonSuccess({id: data.id})),\r\n        )),\r\n    ));\r\n\r\n    constructor(private actions$: Actions, private store: Store<any>, private service: SeasonService) {\r\n    }\r\n\r\n}\r\n","import {Action, createReducer, on} from '@ngrx/store';\r\nimport {EntityState, EntityAdapter, createEntityAdapter} from '@ngrx/entity';\r\nimport {Season} from './season';\r\nimport * as SeasonActions from './season.actions';\r\n\r\nexport const seasonFeatureKey = 'seasons';\r\n\r\nexport interface SeasonState extends EntityState<Season> {\r\n    allSeasonsLoaded: boolean;\r\n    currentSeason: Season\r\n}\r\n\r\nexport const adapter: EntityAdapter<Season> = createEntityAdapter<Season>();\r\n\r\nexport const initialState: SeasonState = adapter.getInitialState({\r\n    allSeasonsLoaded: false,\r\n    currentSeason: null\r\n});\r\n\r\nconst seasonReducer = createReducer(\r\n    initialState,\r\n    on(SeasonActions.addSeasonSuccess,\r\n        (state, action) => adapter.upsertOne(action.data, {...state, currentSeason: action.data}),\r\n    ),\r\n    on(SeasonActions.deleteSeasonSuccess,\r\n        (state, action) => adapter.removeOne(action.id, state),\r\n    ),\r\n\r\n    on(SeasonActions.loadSeasonsSuccess,\r\n        (state, action) => adapter.addAll(action.data, state),\r\n    ),\r\n    on(SeasonActions.selectCurrentSeasonSuccess,\r\n        (state, action) => ({...state, currentSeason: action.data}),\r\n    ),\r\n);\r\n\r\nexport function reducer(state: SeasonState | undefined, action: Action) {\r\n    return seasonReducer(state, action);\r\n}\r\n\r\nexport const {\r\n    selectIds,\r\n    selectEntities,\r\n    selectAll,\r\n    selectTotal,\r\n} = adapter.getSelectors();\r\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport {SeasonState, seasonFeatureKey, selectAll} from './season.reducer';\r\n\r\nconst featureState = createFeatureSelector<SeasonState>(seasonFeatureKey);\r\n\r\nexport const selectAllSeasons = createSelector(\r\n    featureState,\r\n    selectAll,\r\n);\r\n\r\nexport const allSeasonLoaded = createSelector(\r\n    featureState,\r\n    state => state.allSeasonsLoaded,\r\n);\r\n\r\nexport const selectCurrentSeason = createSelector(\r\n    featureState,\r\n    state => state.currentSeason\r\n)\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {APP_CONFIG} from '../../../../app.config';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Season} from './season';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class SeasonService {\r\n    private url = `${APP_CONFIG.BASE_URL}/seasons/`;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    findAll(): Observable<Season[]> {\r\n        return this.http.get<Season[]>(this.url);\r\n    }\r\n\r\n    save(item: Season): Observable<Season> {\r\n        if (!item.id) {\r\n            return this.http.post<Season>(this.url, item);\r\n        } else {\r\n            return this.update(item);\r\n        }\r\n    }\r\n\r\n    private update(item: Season): Observable<Season> {\r\n        return this.http.put<Season>(`${this.url}${item.id}/`, item);\r\n    }\r\n\r\n    delete(item: Season) {\r\n        return this.http.delete(`${this.url}${item.id}/`);\r\n    }\r\n}\r\n","import {createAction, props} from '@ngrx/store';\r\n\r\nimport {Factorycode} from './factorycode';\r\n\r\nexport const loadFactorycodes = createAction(\r\n    '[Factorycode/API] Load Factorycodes'\r\n);\r\n\r\nexport const loadFactorycodesSuccess = createAction(\r\n    '[Factorycode/API] Load Factorycodes Success',\r\n    props<{ data: Factorycode[] }>(),\r\n);\r\n\r\nexport const addFactorycode = createAction(\r\n    '[Factorycode/API] Add Factorycode',\r\n    props<{ data: Factorycode }>(),\r\n);\r\n\r\nexport const addFactorycodeSuccess = createAction(\r\n    '[Factorycode/API] Add Factorycode Success',\r\n    props<{ data: Factorycode }>(),\r\n);\r\n\r\n\r\nexport const deleteFactorycode = createAction(\r\n    '[Factorycode/API] Delete Factorycode',\r\n    props<{ data: Factorycode }>(),\r\n);\r\n\r\nexport const deleteFactorycodeSuccess = createAction(\r\n    '[Factorycode/API] Delete Factorycode Success',\r\n    props<{ id: string}>(),\r\n);\r\n\r\nexport const selectCurrentFactorycodeSuccess = createAction(\r\n    '[Factorycode/API] Select Current Factorycode',\r\n    props<{ data: Factorycode }>(),\r\n);\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\r\nimport {Store} from '@ngrx/store';\r\nimport {FactorycodeService} from './factorycode.service';\r\nimport {\r\n  addFactorycode,\r\n  addFactorycodeSuccess,\r\n  deleteFactorycode, deleteFactorycodeSuccess,\r\n  loadFactorycodes,\r\n  loadFactorycodesSuccess,\r\n} from './factorycode.actions';\r\nimport {filter, map, mergeMap, withLatestFrom} from 'rxjs/operators';\r\nimport {allFactorycodeLoaded} from './factorycode.selectors';\r\n\r\n\r\n@Injectable()\r\nexport class FactorycodeEffects {\r\n\r\n    loadFactorycodes$ = createEffect(() => this.actions$.pipe(\r\n        ofType(loadFactorycodes),\r\n        withLatestFrom(this.store.select(allFactorycodeLoaded)),\r\n        filter(([_, allLoaded]) => !allLoaded),\r\n        mergeMap(_ => this.service.findAll().pipe(\r\n            map(data => loadFactorycodesSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    addFactorycode$ = createEffect(() => this.actions$.pipe(\r\n        ofType(addFactorycode),\r\n        mergeMap(action => this.service.save(action.data).pipe(\r\n            map(data => addFactorycodeSuccess({data})),\r\n        )),\r\n    ));\r\n\r\n    deleteFactorycode$ = createEffect(() => this.actions$.pipe(\r\n        ofType(deleteFactorycode),\r\n        mergeMap(({data}) => this.service.delete(data).pipe(\r\n            map(_ => deleteFactorycodeSuccess({id: data.id})),\r\n        )),\r\n    ));\r\n\r\n    constructor(private actions$: Actions, private store: Store<any>, private service: FactorycodeService) {\r\n    }\r\n\r\n}\r\n","import {Action, createReducer, on} from '@ngrx/store';\r\nimport {EntityState, EntityAdapter, createEntityAdapter} from '@ngrx/entity';\r\nimport {Factorycode} from './factorycode';\r\nimport * as FactorycodeActions from './factorycode.actions';\r\n\r\nexport const factorycodeFeatureKey = 'factorycodes';\r\n\r\nexport interface FactorycodeState extends EntityState<Factorycode> {\r\n    allFactorycodesLoaded: boolean;\r\n    currentFactorycode: Factorycode\r\n}\r\n\r\nexport const adapter: EntityAdapter<Factorycode> = createEntityAdapter<Factorycode>();\r\n\r\nexport const initialState: FactorycodeState = adapter.getInitialState({\r\n    allFactorycodesLoaded: false,\r\n    currentFactorycode: null\r\n});\r\n\r\nconst factorycodeReducer = createReducer(\r\n    initialState,\r\n    on(FactorycodeActions.addFactorycodeSuccess,\r\n        (state, action) => adapter.upsertOne(action.data, {...state, currentFactorycode: action.data}),\r\n    ),\r\n    on(FactorycodeActions.deleteFactorycodeSuccess,\r\n        (state, action) => adapter.removeOne(action.id, state),\r\n    ),\r\n\r\n    on(FactorycodeActions.loadFactorycodesSuccess,\r\n        (state, action) => adapter.addAll(action.data, state),\r\n    ),\r\n    on(FactorycodeActions.selectCurrentFactorycodeSuccess,\r\n        (state, action) => ({...state, currentFactorycode: action.data}),\r\n    ),\r\n);\r\n\r\nexport function reducer(state: FactorycodeState | undefined, action: Action) {\r\n    return factorycodeReducer(state, action);\r\n}\r\n\r\nexport const {\r\n    selectIds,\r\n    selectEntities,\r\n    selectAll,\r\n    selectTotal,\r\n} = adapter.getSelectors();\r\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport {FactorycodeState, factorycodeFeatureKey, selectAll} from './factorycode.reducer';\r\n\r\nconst featureState = createFeatureSelector<FactorycodeState>(factorycodeFeatureKey);\r\n\r\nexport const selectAllFactorycodes = createSelector(\r\n    featureState,\r\n    selectAll,\r\n);\r\n\r\nexport const allFactorycodeLoaded = createSelector(\r\n    featureState,\r\n    state => state.allFactorycodesLoaded,\r\n);\r\n\r\nexport const selectCurrentFactorycode = createSelector(\r\n    featureState,\r\n    state => state.currentFactorycode\r\n)\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {APP_CONFIG} from '../../../../app.config';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Factorycode} from './factorycode';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class FactorycodeService {\r\n    private url = `${APP_CONFIG.BASE_URL}/factory-codes/`;\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    findAll(): Observable<Factorycode[]> {\r\n        return this.http.get<Factorycode[]>(this.url);\r\n    }\r\n\r\n    save(item: Factorycode): Observable<Factorycode> {\r\n        if (!item.id) {\r\n            return this.http.post<Factorycode>(this.url, item);\r\n        } else {\r\n            return this.update(item);\r\n        }\r\n    }\r\n\r\n    private update(item: Factorycode): Observable<Factorycode> {\r\n        return this.http.put<Factorycode>(`${this.url}${item.id}/`, item);\r\n    }\r\n\r\n    delete(item: Factorycode) {\r\n        return this.http.delete(`${this.url}${item.id}/`);\r\n    }\r\n}\r\n","export * from './factorycode';\r\nexport * from './factorycode.effects';\r\nexport * from './factorycode.service';\r\nexport * from './factorycode.selectors';\r\nexport * from './factorycode.reducer';\r\nexport * from './factorycode.actions';\r\n"],"sourceRoot":""}